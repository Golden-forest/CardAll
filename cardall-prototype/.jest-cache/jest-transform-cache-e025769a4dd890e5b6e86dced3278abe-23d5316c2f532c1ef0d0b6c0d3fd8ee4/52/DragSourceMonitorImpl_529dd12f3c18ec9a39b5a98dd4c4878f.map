{"file":"D:\\Projects\\CardEverything\\cardall-prototype\\node_modules\\react-dnd\\dist\\internals\\DragSourceMonitorImpl.js","mappings":"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","names":[],"sources":["D:\\Projects\\CardEverything\\cardall-prototype\\node_modules\\react-dnd\\dist\\internals\\DragSourceMonitorImpl.js"],"sourcesContent":["import { invariant } from '@react-dnd/invariant';\nlet isCallingCanDrag = false;\nlet isCallingIsDragging = false;\nexport class DragSourceMonitorImpl {\n    receiveHandlerId(sourceId) {\n        this.sourceId = sourceId;\n    }\n    getHandlerId() {\n        return this.sourceId;\n    }\n    canDrag() {\n        invariant(!isCallingCanDrag, 'You may not call monitor.canDrag() inside your canDrag() implementation. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor');\n        try {\n            isCallingCanDrag = true;\n            return this.internalMonitor.canDragSource(this.sourceId);\n        } finally{\n            isCallingCanDrag = false;\n        }\n    }\n    isDragging() {\n        if (!this.sourceId) {\n            return false;\n        }\n        invariant(!isCallingIsDragging, 'You may not call monitor.isDragging() inside your isDragging() implementation. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor');\n        try {\n            isCallingIsDragging = true;\n            return this.internalMonitor.isDraggingSource(this.sourceId);\n        } finally{\n            isCallingIsDragging = false;\n        }\n    }\n    subscribeToStateChange(listener, options) {\n        return this.internalMonitor.subscribeToStateChange(listener, options);\n    }\n    isDraggingSource(sourceId) {\n        return this.internalMonitor.isDraggingSource(sourceId);\n    }\n    isOverTarget(targetId, options) {\n        return this.internalMonitor.isOverTarget(targetId, options);\n    }\n    getTargetIds() {\n        return this.internalMonitor.getTargetIds();\n    }\n    isSourcePublic() {\n        return this.internalMonitor.isSourcePublic();\n    }\n    getSourceId() {\n        return this.internalMonitor.getSourceId();\n    }\n    subscribeToOffsetChange(listener) {\n        return this.internalMonitor.subscribeToOffsetChange(listener);\n    }\n    canDragSource(sourceId) {\n        return this.internalMonitor.canDragSource(sourceId);\n    }\n    canDropOnTarget(targetId) {\n        return this.internalMonitor.canDropOnTarget(targetId);\n    }\n    getItemType() {\n        return this.internalMonitor.getItemType();\n    }\n    getItem() {\n        return this.internalMonitor.getItem();\n    }\n    getDropResult() {\n        return this.internalMonitor.getDropResult();\n    }\n    didDrop() {\n        return this.internalMonitor.didDrop();\n    }\n    getInitialClientOffset() {\n        return this.internalMonitor.getInitialClientOffset();\n    }\n    getInitialSourceClientOffset() {\n        return this.internalMonitor.getInitialSourceClientOffset();\n    }\n    getSourceClientOffset() {\n        return this.internalMonitor.getSourceClientOffset();\n    }\n    getClientOffset() {\n        return this.internalMonitor.getClientOffset();\n    }\n    getDifferenceFromInitialOffset() {\n        return this.internalMonitor.getDifferenceFromInitialOffset();\n    }\n    constructor(manager){\n        this.sourceId = null;\n        this.internalMonitor = manager.getMonitor();\n    }\n}\n\n//# sourceMappingURL=DragSourceMonitorImpl.js.map"],"version":3}