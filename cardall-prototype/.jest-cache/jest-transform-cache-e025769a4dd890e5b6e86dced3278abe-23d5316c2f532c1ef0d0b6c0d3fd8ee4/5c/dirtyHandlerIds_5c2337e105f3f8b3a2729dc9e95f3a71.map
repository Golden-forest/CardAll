{"file":"D:\\Projects\\CardEverything\\cardall-prototype\\node_modules\\dnd-core\\dist\\reducers\\dirtyHandlerIds.js","mappings":";;AAKA,wBAoCC;AAzCD,2DAAsG;AACtG,wDAA8F;AAC9F,wDAAkD;AAClD,sDAAsD;AACtD,sDAA2C;AAC3C,SAAgB,MAAM,CAAC,6DAA6D;AACpF,MAAM,GAAG,mBAAI,EAAE,MAAM;IACjB,QAAO,MAAM,CAAC,IAAI,EAAC,CAAC;QAChB,KAAK,gBAAK;YACN,MAAM;QACV,KAAK,wBAAU,CAAC;QAChB,KAAK,wBAAU,CAAC;QAChB,KAAK,2BAAa,CAAC;QACnB,KAAK,2BAAa;YACd,OAAO,mBAAI,CAAC;QAChB,KAAK,qBAAU,CAAC;QAChB,KAAK,8BAAmB,CAAC;QACzB,KAAK,mBAAQ,CAAC;QACd,KAAK,eAAI,CAAC;QACV;YACI,OAAO,kBAAG,CAAC;IACnB,CAAC;IACD,MAAM,EAAE,SAAS,GAAE,EAAE,EAAG,aAAa,GAAE,EAAE,EAAG,GAAG,MAAM,CAAC,OAAO,CAAC;IAC9D,MAAM,MAAM,GAAG,IAAA,iBAAG,EAAC,SAAS,EAAE,aAAa,CAAC,CAAC;IAC7C,MAAM,SAAS,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,IAAA,4BAAc,EAAC,SAAS,EAAE,aAAa,CAAC,CAAC;IACjF,IAAI,CAAC,SAAS,EAAE,CAAC;QACb,OAAO,mBAAI,CAAC;IAChB,CAAC;IACD,8EAA8E;IAC9E,gBAAgB;IAChB,MAAM,qBAAqB,GAAG,aAAa,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IACtE,MAAM,iBAAiB,GAAG,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC1D,IAAI,qBAAqB,KAAK,iBAAiB,EAAE,CAAC;QAC9C,IAAI,qBAAqB,EAAE,CAAC;YACxB,MAAM,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACvC,CAAC;QACD,IAAI,iBAAiB,EAAE,CAAC;YACpB,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACnC,CAAC;IACL,CAAC;IACD,OAAO,MAAM,CAAC;AAClB,CAAC;AAED,2CAA2C","names":[],"sources":["D:\\Projects\\CardEverything\\cardall-prototype\\node_modules\\dnd-core\\dist\\reducers\\dirtyHandlerIds.js"],"sourcesContent":["import { BEGIN_DRAG, DROP, END_DRAG, HOVER, PUBLISH_DRAG_SOURCE } from '../actions/dragDrop/index.js';\nimport { ADD_SOURCE, ADD_TARGET, REMOVE_SOURCE, REMOVE_TARGET } from '../actions/registry.js';\nimport { ALL, NONE } from '../utils/dirtiness.js';\nimport { areArraysEqual } from '../utils/equality.js';\nimport { xor } from '../utils/js_utils.js';\nexport function reduce(// eslint-disable-next-line @typescript-eslint/no-unused-vars\n_state = NONE, action) {\n    switch(action.type){\n        case HOVER:\n            break;\n        case ADD_SOURCE:\n        case ADD_TARGET:\n        case REMOVE_TARGET:\n        case REMOVE_SOURCE:\n            return NONE;\n        case BEGIN_DRAG:\n        case PUBLISH_DRAG_SOURCE:\n        case END_DRAG:\n        case DROP:\n        default:\n            return ALL;\n    }\n    const { targetIds =[] , prevTargetIds =[]  } = action.payload;\n    const result = xor(targetIds, prevTargetIds);\n    const didChange = result.length > 0 || !areArraysEqual(targetIds, prevTargetIds);\n    if (!didChange) {\n        return NONE;\n    }\n    // Check the target ids at the innermost position. If they are valid, add them\n    // to the result\n    const prevInnermostTargetId = prevTargetIds[prevTargetIds.length - 1];\n    const innermostTargetId = targetIds[targetIds.length - 1];\n    if (prevInnermostTargetId !== innermostTargetId) {\n        if (prevInnermostTargetId) {\n            result.push(prevInnermostTargetId);\n        }\n        if (innermostTargetId) {\n            result.push(innermostTargetId);\n        }\n    }\n    return result;\n}\n\n//# sourceMappingURL=dirtyHandlerIds.js.map"],"version":3}