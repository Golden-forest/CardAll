{"file":"D:\\Projects\\CardEverything\\cardall-prototype\\tests\\data-fixtures.ts","mappings":"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","names":[],"sources":["D:\\Projects\\CardEverything\\cardall-prototype\\tests\\data-fixtures.ts"],"sourcesContent":["// 数据测试装置 - 提供标准化的测试数据\nimport { TestDataGenerator } from './advanced-test-utils'\nimport type { TestCardData, TestFolderData, TestTagData, TestSyncOperation } from './advanced-test-utils'\n\n// ============================================================================\n// 预定义的测试数据集\n// ============================================================================\n\nexport const TEST_USERS = {\n  basic: {\n    id: 'user-basic',\n    email: 'basic@example.com',\n    name: 'Basic User',\n    avatar: null,\n    created_at: '2024-01-01T00:00:00Z',\n    updated_at: '2024-01-01T00:00:00Z',\n  },\n  premium: {\n    id: 'user-premium',\n    email: 'premium@example.com',\n    name: 'Premium User',\n    avatar: 'https://example.com/avatar.png',\n    created_at: '2024-01-01T00:00:00Z',\n    updated_at: '2024-01-01T00:00:00Z',\n  },\n  admin: {\n    id: 'user-admin',\n    email: 'admin@example.com',\n    name: 'Admin User',\n    avatar: 'https://example.com/admin.png',\n    created_at: '2024-01-01T00:00:00Z',\n    updated_at: '2024-01-01T00:00:00Z',\n  },\n}\n\nexport const TEST_CARD_STYLES = {\n  solid: {\n    type: 'solid' as const,\n    backgroundColor: '#ffffff',\n    fontFamily: 'system-ui',\n    fontSize: 'base' as const,\n    fontWeight: 'normal' as const,\n    textColor: '#1f2937',\n    borderRadius: 'xl' as const,\n    shadow: 'md' as const,\n    borderWidth: 0,\n  },\n  gradient: {\n    type: 'gradient' as const,\n    gradientColors: ['#667eea', '#764ba2'],\n    gradientDirection: 'to-br' as const,\n    fontFamily: 'system-ui',\n    fontSize: 'base' as const,\n    fontWeight: 'medium' as const,\n    textColor: '#ffffff',\n    borderRadius: 'xl' as const,\n    shadow: 'lg' as const,\n    borderWidth: 0,\n  },\n  glass: {\n    type: 'glass' as const,\n    backgroundColor: 'rgba(255, 255, 255, 0.1)',\n    fontFamily: 'system-ui',\n    fontSize: 'base' as const,\n    fontWeight: 'normal' as const,\n    textColor: '#ffffff',\n    borderRadius: 'xl' as const,\n    shadow: 'glass' as const,\n    borderWidth: 1,\n    borderColor: 'rgba(255, 255, 255, 0.2)',\n  },\n}\n\nexport const TEST_IMAGES = [\n  {\n    id: 'img-1',\n    url: 'https://picsum.photos/seed/card1/400/300.jpg',\n    alt: 'Test image 1',\n    width: 400,\n    height: 300,\n    aspectRatio: 1.33,\n  },\n  {\n    id: 'img-2',\n    url: 'https://picsum.photos/seed/card2/300/400.jpg',\n    alt: 'Test image 2',\n    width: 300,\n    height: 400,\n    aspectRatio: 0.75,\n  },\n  {\n    id: 'img-3',\n    url: 'https://picsum.photos/seed/card3/500/500.jpg',\n    alt: 'Test image 3',\n    width: 500,\n    height: 500,\n    aspectRatio: 1,\n  },\n]\n\nexport const TEST_TAGS = [\n  { name: '重要', color: '#ef4444', count: 5 },\n  { name: '工作', color: '#3b82f6', count: 8 },\n  { name: '个人', color: '#10b981', count: 3 },\n  { name: '学习', color: '#f59e0b', count: 6 },\n  { name: '项目', color: '#8b5cf6', count: 4 },\n  { name: '灵感', color: '#ec4899', count: 2 },\n  { name: '待办', color: '#6b7280', count: 7 },\n  { name: '完成', color: '#059669', count: 12 },\n]\n\n// ============================================================================\n// 测试数据生成器函数\n// ============================================================================\n\nexport class CardFixture {\n  static basic(overrides: Partial<TestCardData> = {}): TestCardData {\n    return TestDataGenerator.generateCard({\n      frontContent: {\n        title: '基础测试卡片',\n        text: '这是一个基础的测试卡片，用于测试基本功能。',\n        images: [],\n        tags: ['测试'],\n        lastModified: new Date(),\n      },\n      backContent: {\n        title: '卡片背面',\n        text: '这是卡片的背面内容。',\n        images: [],\n        tags: [],\n        lastModified: new Date(),\n      },\n      style: TEST_CARD_STYLES.solid,\n      isFlipped: false,\n      ...overrides,\n    })\n  }\n\n  static withImages(overrides: Partial<TestCardData> = {}): TestCardData {\n    return TestDataGenerator.generateCard({\n      frontContent: {\n        title: '带图片的卡片',\n        text: '这是一个包含图片的测试卡片。',\n        images: [TEST_IMAGES[0], TEST_IMAGES[1]],\n        tags: ['图片', '测试'],\n        lastModified: new Date(),\n      },\n      backContent: {\n        title: '背面内容',\n        text: '背面的图片内容。',\n        images: [TEST_IMAGES[2]],\n        tags: [],\n        lastModified: new Date(),\n      },\n      style: TEST_CARD_STYLES.gradient,\n      isFlipped: false,\n      ...overrides,\n    })\n  }\n\n  static withTags(overrides: Partial<TestCardData> = {}): TestCardData {\n    return TestDataGenerator.generateCard({\n      frontContent: {\n        title: '多标签卡片',\n        text: '这是一个包含多个标签的测试卡片。',\n        images: [],\n        tags: ['重要', '工作', '项目'],\n        lastModified: new Date(),\n      },\n      backContent: {\n        title: '背面内容',\n        text: '卡片的背面内容。',\n        images: [],\n        tags: [],\n        lastModified: new Date(),\n      },\n      style: TEST_CARD_STYLES.solid,\n      isFlipped: false,\n      ...overrides,\n    })\n  }\n\n  static glassStyle(overrides: Partial<TestCardData> = {}): TestCardData {\n    return TestDataGenerator.generateCard({\n      frontContent: {\n        title: '玻璃风格卡片',\n        text: '这是一个玻璃风格的测试卡片。',\n        images: [],\n        tags: ['设计', 'UI'],\n        lastModified: new Date(),\n      },\n      backContent: {\n        title: '背面内容',\n        text: '玻璃风格背面。',\n        images: [],\n        tags: [],\n        lastModified: new Date(),\n      },\n      style: TEST_CARD_STYLES.glass,\n      isFlipped: false,\n      ...overrides,\n    })\n  }\n\n  static flipped(overrides: Partial<TestCardData> = {}): TestCardData {\n    return TestDataGenerator.generateCard({\n      frontContent: {\n        title: '已翻转的卡片',\n        text: '这是一个默认已翻转的测试卡片。',\n        images: [],\n        tags: ['状态'],\n        lastModified: new Date(),\n      },\n      backContent: {\n        title: '背面内容',\n        text: '这是卡片的背面内容，现在是可见的。',\n        images: [],\n        tags: [],\n        lastModified: new Date(),\n      },\n      style: TEST_CARD_STYLES.solid,\n      isFlipped: true,\n      ...overrides,\n    })\n  }\n\n  static inFolder(folderId: string, overrides: Partial<TestCardData> = {}): TestCardData {\n    return TestDataGenerator.generateCard({\n      frontContent: {\n        title: '文件夹中的卡片',\n        text: '这是一个位于特定文件夹中的测试卡片。',\n        images: [],\n        tags: ['文件夹'],\n        lastModified: new Date(),\n      },\n      backContent: {\n        title: '背面内容',\n        text: '文件夹卡片背面。',\n        images: [],\n        tags: [],\n        lastModified: new Date(),\n      },\n      style: TEST_CARD_STYLES.solid,\n      isFlipped: false,\n      folderId,\n      ...overrides,\n    })\n  }\n\n  static selected(overrides: Partial<TestCardData> = {}): TestCardData {\n    return TestDataGenerator.generateCard({\n      frontContent: {\n        title: '已选择的卡片',\n        text: '这是一个被选择的测试卡片。',\n        images: [],\n        tags: ['选择'],\n        lastModified: new Date(),\n      },\n      backContent: {\n        title: '背面内容',\n        text: '选择状态卡片背面。',\n        images: [],\n        tags: [],\n        lastModified: new Date(),\n      },\n      style: TEST_CARD_STYLES.solid,\n      isFlipped: false,\n      isSelected: true,\n      ...overrides,\n    })\n  }\n\n  static list(count: number, overrides?: Partial<TestCardData>): TestCardData[] {\n    return Array.from({ length: count }, (_, i) => \n      this.basic({\n        ...overrides,\n        id: `card-${i + 1}`,\n        frontContent: {\n          title: `测试卡片 ${i + 1}`,\n          text: `这是第 ${i + 1} 个测试卡片。`,\n          images: [],\n          tags: [`标签-${i + 1}`],\n          lastModified: new Date(),\n        },\n      })\n    )\n  }\n}\n\nexport class FolderFixture {\n  static basic(overrides: Partial<TestFolderData> = {}): TestFolderData {\n    return TestDataGenerator.generateFolder({\n      name: '测试文件夹',\n      color: '#3b82f6',\n      cardIds: [],\n      ...overrides,\n    })\n  }\n\n  static withCards(cardIds: string[], overrides: Partial<TestFolderData> = {}): TestFolderData {\n    return TestDataGenerator.generateFolder({\n      name: '包含卡片的文件夹',\n      color: '#10b981',\n      cardIds,\n      ...overrides,\n    })\n  }\n\n  static nested(parentId: string, overrides: Partial<TestFolderData> = {}): TestFolderData {\n    return TestDataGenerator.generateFolder({\n      name: '子文件夹',\n      color: '#f59e0b',\n      cardIds: [],\n      parentId,\n      ...overrides,\n    })\n  }\n\n  static expanded(overrides: Partial<TestFolderData> = {}): TestFolderData {\n    return TestDataGenerator.generateFolder({\n      name: '展开的文件夹',\n      color: '#8b5cf6',\n      cardIds: [],\n      isExpanded: true,\n      ...overrides,\n    })\n  }\n\n  static list(count: number, overrides?: Partial<TestFolderData>): TestFolderData[] {\n    return Array.from({ length: count }, (_, i) => \n      this.basic({\n        ...overrides,\n        id: `folder-${i + 1}`,\n        name: `测试文件夹 ${i + 1}`,\n        color: TEST_TAGS[i % TEST_TAGS.length].color,\n      })\n    )\n  }\n}\n\nexport class TagFixture {\n  static basic(overrides: Partial<TestTagData> = {}): TestTagData {\n    return TestDataGenerator.generateTag({\n      name: '测试标签',\n      color: '#3b82f6',\n      count: 0,\n      ...overrides,\n    })\n  }\n\n  static withCount(count: number, overrides: Partial<TestTagData> = {}): TestTagData {\n    return TestDataGenerator.generateTag({\n      name: `标签 (${count})`,\n      color: '#10b981',\n      count,\n      ...overrides,\n    })\n  }\n\n  static hidden(overrides: Partial<TestTagData> = {}): TestTagData {\n    return TestDataGenerator.generateTag({\n      name: '隐藏标签',\n      color: '#6b7280',\n      count: 0,\n      isHidden: true,\n      ...overrides,\n    })\n  }\n\n  static list(): TestTagData[] {\n    return TEST_TAGS.map((tag, i) => \n      this.basic({\n        id: `tag-${i + 1}`,\n        name: tag.name,\n        color: tag.color,\n        count: tag.count,\n      })\n    )\n  }\n}\n\nexport class SyncOperationFixture {\n  static createCard(cardId: string, overrides: Partial<TestSyncOperation> = {}): TestSyncOperation {\n    return TestDataGenerator.generateSyncOperation({\n      type: 'create',\n      entity: 'card',\n      entityId: cardId,\n      priority: 'normal',\n      ...overrides,\n    })\n  }\n\n  static updateCard(cardId: string, overrides: Partial<TestSyncOperation> = {}): TestSyncOperation {\n    return TestDataGenerator.generateSyncOperation({\n      type: 'update',\n      entity: 'card',\n      entityId: cardId,\n      priority: 'normal',\n      ...overrides,\n    })\n  }\n\n  static deleteCard(cardId: string, overrides: Partial<TestSyncOperation> = {}): TestSyncOperation {\n    return TestDataGenerator.generateSyncOperation({\n      type: 'delete',\n      entity: 'card',\n      entityId: cardId,\n      priority: 'high',\n      ...overrides,\n    })\n  }\n\n  static createFolder(folderId: string, overrides: Partial<TestSyncOperation> = {}): TestSyncOperation {\n    return TestDataGenerator.generateSyncOperation({\n      type: 'create',\n      entity: 'folder',\n      entityId: folderId,\n      priority: 'normal',\n      ...overrides,\n    })\n  }\n\n  static failed(overrides: Partial<TestSyncOperation> = {}): TestSyncOperation {\n    return TestDataGenerator.generateSyncOperation({\n      status: 'failed',\n      retryCount: 3,\n      error: 'Network error occurred',\n      ...overrides,\n    })\n  }\n\n  static processing(overrides: Partial<TestSyncOperation> = {}): TestSyncOperation {\n    return TestDataGenerator.generateSyncOperation({\n      status: 'processing',\n      ...overrides,\n    })\n  }\n\n  static completed(overrides: Partial<TestSyncOperation> = {}): TestSyncOperation {\n    return TestDataGenerator.generateSyncOperation({\n      status: 'completed',\n      ...overrides,\n    })\n  }\n\n  static withDependencies(dependencies: string[], overrides: Partial<TestSyncOperation> = {}): TestSyncOperation {\n    return TestDataGenerator.generateSyncOperation({\n      dependencies,\n      ...overrides,\n    })\n  }\n}\n\n// ============================================================================\n// 测试场景数据集\n// ============================================================================\n\nexport const TEST_SCENARIOS = {\n  // 空状态场景\n  empty: {\n    cards: [],\n    folders: [],\n    tags: [],\n    syncOperations: [],\n  },\n\n  // 基础使用场景\n  basicUsage: {\n    cards: CardFixture.list(3),\n    folders: FolderFixture.list(2),\n    tags: TagFixture.list().slice(0, 4),\n    syncOperations: [],\n  },\n\n  // 大数据量场景\n  largeDataset: {\n    cards: CardFixture.list(100),\n    folders: FolderFixture.list(20),\n    tags: TagFixture.list(),\n    syncOperations: Array.from({ length: 50 }, (_, i) => \n      SyncOperationFixture.createCard(`card-${i + 1}`)\n    ),\n  },\n\n  // 文件夹嵌套场景\n  nestedFolders: {\n    cards: CardFixture.list(10),\n    folders: [\n      ...FolderFixture.list(3),\n      FolderFixture.nested('folder-1'),\n      FolderFixture.nested('folder-1'),\n      FolderFixture.nested('folder-2'),\n    ],\n    tags: TagFixture.list().slice(0, 5),\n    syncOperations: [],\n  },\n\n  // 标签丰富场景\n  richTags: {\n    cards: CardFixture.list(5).map((card, i) => ({\n      ...card,\n      frontContent: {\n        ...card.frontContent,\n        tags: [`标签-${i + 1}`, `共享标签`],\n      },\n    })),\n    folders: FolderFixture.list(2),\n    tags: TagFixture.list(),\n    syncOperations: [],\n  },\n\n  // 同步队列场景\n  syncQueue: {\n    cards: CardFixture.list(5),\n    folders: FolderFixture.list(2),\n    tags: TagFixture.list().slice(0, 3),\n    syncOperations: [\n      SyncOperationFixture.createCard('card-1'),\n      SyncOperationFixture.updateCard('card-2'),\n      SyncOperationFixture.failed(),\n      SyncOperationFixture.processing(),\n      SyncOperationFixture.completed(),\n    ],\n  },\n\n  // 混合状态场景\n  mixedStates: {\n    cards: [\n      CardFixture.basic(),\n      CardFixture.flipped(),\n      CardFixture.selected(),\n      CardFixture.inFolder('folder-1'),\n      CardFixture.withImages(),\n    ],\n    folders: [\n      FolderFixture.basic(),\n      FolderFixture.expanded(),\n      FolderFixture.withCards(['card-1', 'card-2']),\n    ],\n    tags: TagFixture.list().slice(0, 4),\n    syncOperations: [\n      SyncOperationFixture.createCard('card-1'),\n      SyncOperationFixture.withDependencies(['sync-1']),\n    ],\n  },\n}\n\n// ============================================================================\n// 边界值测试数据\n// ============================================================================\n\nexport const BOUNDARY_TEST_DATA = {\n  // 空字符串和null值\n  emptyStrings: {\n    card: CardFixture.basic({\n      frontContent: {\n        title: '',\n        text: '',\n        images: [],\n        tags: [],\n        lastModified: new Date(),\n      },\n    }),\n    folder: FolderFixture.basic({ name: '' }),\n    tag: TagFixture.basic({ name: '' }),\n  },\n\n  // 超长字符串\n  longStrings: {\n    card: CardFixture.basic({\n      frontContent: {\n        title: 'A'.repeat(1000),\n        text: 'B'.repeat(10000),\n        images: [],\n        tags: ['C'.repeat(100)],\n        lastModified: new Date(),\n      },\n    }),\n  },\n\n  // 最大边界值\n  maxValues: {\n    card: CardFixture.basic({\n      frontContent: {\n        title: 'Max',\n        text: 'Max content',\n        images: Array.from({ length: 100 }, (_, i) => ({\n          ...TEST_IMAGES[0],\n          id: `img-${i}`,\n        })),\n        tags: Array.from({ length: 50 }, (_, i) => `tag-${i}`),\n        lastModified: new Date(),\n      },\n    }),\n  },\n\n  // 特殊字符\n  specialChars: {\n    card: CardFixture.basic({\n      frontContent: {\n        title: 'Special: @#$%^&*()_+',\n        text: 'Content with emoji: 😊 🎉 🚀',\n        images: [],\n        tags: ['特殊标签', 'Special Tag'],\n        lastModified: new Date(),\n      },\n    }),\n  },\n\n  // Unicode字符\n  unicode: {\n    card: CardFixture.basic({\n      frontContent: {\n        title: '中文测试',\n        text: 'This is a mix of 中文, English, and 日本語',\n        images: [],\n        tags: ['中文', 'English', '日本語'],\n        lastModified: new Date(),\n      },\n    }),\n  },\n}\n\n// ============================================================================\n// 导出所有装置\n// ============================================================================\n\nexport {\n  TEST_USERS,\n  TEST_CARD_STYLES,\n  TEST_IMAGES,\n  TEST_TAGS,\n  CardFixture,\n  FolderFixture,\n  TagFixture,\n  SyncOperationFixture,\n  TEST_SCENARIOS,\n  BOUNDARY_TEST_DATA,\n}"],"version":3}