{"file":"D:\\Projects\\CardEverything\\cardall-prototype\\tests\\advanced-test-utils.tsx","mappings":"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","names":[],"sources":["D:\\Projects\\CardEverything\\cardall-prototype\\tests\\advanced-test-utils.tsx"],"sourcesContent":["// 高级测试工具 - 包含完整的数据生成器和模拟服务\nimport { render, RenderOptions, RenderResult, act } from '@testing-library/react'\nimport { ReactElement } from 'react'\nimport { axe, toHaveNoViolations } from 'jest-axe'\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query'\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport { ThemeProvider } from 'styled-components'\nimport { ToastProvider } from '@/components/ui/toast-provider'\n\n// 扩展 Jest 匹配器\nexpect.extend(toHaveNoViolations)\n\n// ============================================================================\n// 类型定义\n// ============================================================================\n\nexport interface TestCardData {\n  id: string\n  title: string\n  frontContent: {\n    title: string\n    text: string\n    images: Array<{\n      id: string\n      url: string\n      alt: string\n      width?: number\n      height?: number\n    }>\n    tags: string[]\n    lastModified: Date\n  }\n  backContent: {\n    title: string\n    text: string\n    images: Array<{\n      id: string\n      url: string\n      alt: string\n      width?: number\n      height?: number\n    }>\n    tags: string[]\n    lastModified: Date\n  }\n  style: {\n    type: 'solid' | 'gradient' | 'glass'\n    backgroundColor?: string\n    gradientColors?: string[]\n    fontFamily?: string\n    fontSize?: 'sm' | 'base' | 'lg' | 'xl'\n    fontWeight?: 'normal' | 'medium' | 'semibold' | 'bold'\n    textColor?: string\n    borderRadius?: 'sm' | 'md' | 'lg' | 'xl' | '2xl' | '3xl'\n    shadow?: 'none' | 'sm' | 'md' | 'lg' | 'xl' | '2xl' | 'glass'\n    borderWidth?: number\n    borderColor?: string\n  }\n  isFlipped: boolean\n  createdAt: Date\n  updatedAt: Date\n  folderId?: string\n  isSelected?: boolean\n}\n\nexport interface TestFolderData {\n  id: string\n  name: string\n  color: string\n  icon?: string\n  cardIds: string[]\n  parentId?: string\n  isExpanded?: boolean\n  createdAt: Date\n  updatedAt: Date\n}\n\nexport interface TestTagData {\n  id: string\n  name: string\n  color: string\n  count: number\n  isHidden?: boolean\n  createdAt: Date\n}\n\nexport interface TestSyncOperation {\n  id: string\n  type: 'create' | 'update' | 'delete'\n  entity: 'card' | 'folder' | 'tag' | 'image'\n  entityId: string\n  userId?: string\n  data: any\n  priority: 'high' | 'normal' | 'low'\n  timestamp: Date\n  retryCount: number\n  maxRetries: number\n  status: 'pending' | 'processing' | 'completed' | 'failed' | 'retrying'\n  error?: string\n  dependencies?: string[]\n}\n\n// ============================================================================\n// 模拟服务\n// ============================================================================\n\nexport class MockSupabaseClient {\n  private data = {\n    cards: new Map<string, TestCardData>(),\n    folders: new Map<string, TestFolderData>(),\n    tags: new Map<string, TestTagData>(),\n    syncOperations: new Map<string, TestSyncOperation>(),\n  }\n\n  // 卡片操作\n  cards = {\n    select: jest.fn(() => ({\n      eq: jest.fn(() => ({\n        order: jest.fn(() => ({\n          data: Array.from(this.data.cards.values()),\n          error: null,\n        })),\n      })),\n      in: jest.fn(() => ({\n        data: Array.from(this.data.cards.values()),\n        error: null,\n      })),\n    })),\n    insert: jest.fn((card: Partial<TestCardData>) => {\n      const newCard: TestCardData = {\n        id: crypto.randomUUID(),\n        frontContent: card.frontContent || {\n          title: '',\n          text: '',\n          images: [],\n          tags: [],\n          lastModified: new Date(),\n        },\n        backContent: card.backContent || {\n          title: '',\n          text: '',\n          images: [],\n          tags: [],\n          lastModified: new Date(),\n        },\n        style: card.style || {\n          type: 'solid',\n          backgroundColor: '#ffffff',\n          fontFamily: 'system-ui',\n          fontSize: 'base',\n          fontWeight: 'normal',\n          textColor: '#1f2937',\n          borderRadius: 'xl',\n          shadow: 'md',\n          borderWidth: 0,\n        },\n        isFlipped: card.isFlipped || false,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n        ...card,\n      } as TestCardData\n      \n      this.data.cards.set(newCard.id, newCard)\n      \n      return Promise.resolve({\n        data: [newCard],\n        error: null,\n      })\n    }),\n    update: jest.fn((id: string, updates: Partial<TestCardData>) => {\n      const card = this.data.cards.get(id)\n      if (card) {\n        const updatedCard = { ...card, ...updates, updatedAt: new Date() }\n        this.data.cards.set(id, updatedCard)\n        return Promise.resolve({\n          data: [updatedCard],\n          error: null,\n        })\n      }\n      return Promise.resolve({\n        data: null,\n        error: { message: 'Card not found' },\n      })\n    }),\n    delete: jest.fn((id: string) => {\n      const deleted = this.data.cards.delete(id)\n      return Promise.resolve({\n        data: null,\n        error: deleted ? null : { message: 'Card not found' },\n      })\n    }),\n  }\n\n  // 文件夹操作\n  folders = {\n    select: jest.fn(() => ({\n      eq: jest.fn(() => ({\n        data: Array.from(this.data.folders.values()),\n        error: null,\n      })),\n    })),\n    insert: jest.fn((folder: Partial<TestFolderData>) => {\n      const newFolder: TestFolderData = {\n        id: crypto.randomUUID(),\n        name: folder.name || '',\n        color: folder.color || '#3b82f6',\n        cardIds: folder.cardIds || [],\n        createdAt: new Date(),\n        updatedAt: new Date(),\n        ...folder,\n      } as TestFolderData\n      \n      this.data.folders.set(newFolder.id, newFolder)\n      \n      return Promise.resolve({\n        data: [newFolder],\n        error: null,\n      })\n    }),\n  }\n\n  // 标签操作\n  tags = {\n    select: jest.fn(() => ({\n      data: Array.from(this.data.tags.values()),\n      error: null,\n    })),\n    insert: jest.fn((tag: Partial<TestTagData>) => {\n      const newTag: TestTagData = {\n        id: crypto.randomUUID(),\n        name: tag.name || '',\n        color: tag.color || '#3b82f6',\n        count: tag.count || 0,\n        createdAt: new Date(),\n        ...tag,\n      } as TestTagData\n      \n      this.data.tags.set(newTag.id, newTag)\n      \n      return Promise.resolve({\n        data: [newTag],\n        error: null,\n      })\n    }),\n  }\n\n  // 重置模拟数据\n  reset = () => {\n    this.data.cards.clear()\n    this.data.folders.clear()\n    this.data.tags.clear()\n    this.data.syncOperations.clear()\n  }\n\n  // 获取当前数据状态\n  getData = () => ({\n    cards: Array.from(this.data.cards.values()),\n    folders: Array.from(this.data.folders.values()),\n    tags: Array.from(this.data.tags.values()),\n    syncOperations: Array.from(this.data.syncOperations.values()),\n  })\n}\n\nexport class MockIndexedDB {\n  private stores = new Map<string, Map<string, any>>()\n\n  constructor() {\n    // 初始化存储表\n    this.stores.set('cards', new Map())\n    this.stores.set('folders', new Map())\n    this.stores.set('tags', new Map())\n    this.stores.set('syncQueue', new Map())\n  }\n\n  // 模拟 Dexie 风格的操作\n  table(name: string) {\n    return {\n      add: jest.fn((data: any) => {\n        const store = this.stores.get(name)\n        if (store) {\n          const id = data.id || crypto.randomUUID()\n          store.set(id, { ...data, id })\n          return Promise.resolve(id)\n        }\n        return Promise.reject(new Error(`Table ${name} not found`))\n      }),\n      bulkAdd: jest.fn((items: any[]) => {\n        const store = this.stores.get(name)\n        if (store) {\n          const ids = items.map(item => {\n            const id = item.id || crypto.randomUUID()\n            store.set(id, { ...item, id })\n            return id\n          })\n          return Promise.resolve(ids)\n        }\n        return Promise.reject(new Error(`Table ${name} not found`))\n      }),\n      get: jest.fn((id: string) => {\n        const store = this.stores.get(name)\n        if (store) {\n          return Promise.resolve(store.get(id) || undefined)\n        }\n        return Promise.resolve(undefined)\n      }),\n      where: jest.fn((key: string) => ({\n        equals: jest.fn((value: any) => ({\n          toArray: jest.fn(() => {\n            const store = this.stores.get(name)\n            if (store) {\n              const results = Array.from(store.values()).filter(item => item[key] === value)\n              return Promise.resolve(results)\n            }\n            return Promise.resolve([])\n          }),\n          delete: jest.fn(() => {\n            const store = this.stores.get(name)\n            if (store) {\n              const toDelete = Array.from(store.entries()).filter(([_, item]) => item[key] === value)\n              toDelete.forEach(([id]) => store.delete(id))\n              return Promise.resolve(toDelete.length)\n            }\n            return Promise.resolve(0)\n          }),\n          modify: jest.fn((updates: any) => {\n            const store = this.stores.get(name)\n            if (store) {\n              const toModify = Array.from(store.entries()).filter(([_, item]) => item[key] === value)\n              toModify.forEach(([id, item]) => {\n                store.set(id, { ...item, ...updates })\n              })\n              return Promise.resolve(toModify.length)\n            }\n            return Promise.resolve(0)\n          }),\n        })),\n        anyOf: jest.fn((values: any[]) => ({\n          toArray: jest.fn(() => {\n            const store = this.stores.get(name)\n            if (store) {\n              const results = Array.from(store.values()).filter(item => values.includes(item[key]))\n              return Promise.resolve(results)\n            }\n            return Promise.resolve([])\n          }),\n        })),\n      })),\n      toArray: jest.fn(() => {\n        const store = this.stores.get(name)\n        if (store) {\n          return Promise.resolve(Array.from(store.values()))\n        }\n        return Promise.resolve([])\n      }),\n      delete: jest.fn((id: string) => {\n        const store = this.stores.get(name)\n        if (store) {\n          const deleted = store.delete(id)\n          return Promise.resolve(deleted ? 1 : 0)\n        }\n        return Promise.resolve(0)\n      }),\n      clear: jest.fn(() => {\n        const store = this.stores.get(name)\n        if (store) {\n          store.clear()\n          return Promise.resolve()\n        }\n        return Promise.reject(new Error(`Table ${name} not found`))\n      }),\n    }\n  }\n\n  // 重置数据库\n  reset = () => {\n    this.stores.forEach(store => store.clear())\n  }\n\n  // 获取存储数据\n  getStoreData = (name: string) => {\n    const store = this.stores.get(name)\n    return store ? Array.from(store.values()) : []\n  }\n}\n\n// ============================================================================\n// 数据生成器\n// ============================================================================\n\nexport class TestDataGenerator {\n  private static idCounter = 1\n\n  static generateId(): string {\n    return `test-id-${this.idCounter++}`\n  }\n\n  static generateCard(overrides: Partial<TestCardData> = {}): TestCardData {\n    const id = overrides.id || this.generateId()\n    return {\n      id,\n      frontContent: {\n        title: `Test Card ${id}`,\n        text: 'This is a test card content for testing purposes.',\n        images: [],\n        tags: ['test'],\n        lastModified: new Date(),\n      },\n      backContent: {\n        title: `Back of Card ${id}`,\n        text: 'This is the back content of the test card.',\n        images: [],\n        tags: [],\n        lastModified: new Date(),\n      },\n      style: {\n        type: 'solid',\n        backgroundColor: '#ffffff',\n        fontFamily: 'system-ui',\n        fontSize: 'base',\n        fontWeight: 'normal',\n        textColor: '#1f2937',\n        borderRadius: 'xl',\n        shadow: 'md',\n        borderWidth: 0,\n      },\n      isFlipped: false,\n      createdAt: new Date(),\n      updatedAt: new Date(),\n      ...overrides,\n    }\n  }\n\n  static generateFolder(overrides: Partial<TestFolderData> = {}): TestFolderData {\n    const id = overrides.id || this.generateId()\n    return {\n      id,\n      name: `Test Folder ${id}`,\n      color: '#3b82f6',\n      cardIds: [],\n      createdAt: new Date(),\n      updatedAt: new Date(),\n      ...overrides,\n    }\n  }\n\n  static generateTag(overrides: Partial<TestTagData> = {}): TestTagData {\n    const id = overrides.id || this.generateId()\n    return {\n      id,\n      name: `Test Tag ${id}`,\n      color: '#3b82f6',\n      count: 0,\n      createdAt: new Date(),\n      ...overrides,\n    }\n  }\n\n  static generateSyncOperation(overrides: Partial<TestSyncOperation> = {}): TestSyncOperation {\n    return {\n      id: this.generateId(),\n      type: 'create',\n      entity: 'card',\n      entityId: this.generateId(),\n      data: {},\n      priority: 'normal',\n      timestamp: new Date(),\n      retryCount: 0,\n      maxRetries: 3,\n      status: 'pending',\n      ...overrides,\n    }\n  }\n\n  static generateCardList(count: number, overrides?: Partial<TestCardData>): TestCardData[] {\n    return Array.from({ length: count }, (_, i) => \n      this.generateCard({ ...overrides, id: `card-${i + 1}` })\n    )\n  }\n\n  static generateFolderList(count: number, overrides?: Partial<TestFolderData>): TestFolderData[] {\n    return Array.from({ length: count }, (_, i) => \n      this.generateFolder({ ...overrides, id: `folder-${i + 1}` })\n    )\n  }\n\n  static generateTagList(count: number, overrides?: Partial<TestTagData>): TestTagData[] {\n    return Array.from({ length: count }, (_, i) => \n      this.generateTag({ ...overrides, id: `tag-${i + 1}` })\n    )\n  }\n}\n\n// ============================================================================\n// 自定义渲染器\n// ============================================================================\n\nconst createTestQueryClient = () => new QueryClient({\n  defaultOptions: {\n    queries: {\n      retry: false,\n      cacheTime: 0,\n    },\n  },\n})\n\nconst AllTheProviders = ({ children }: { children: React.ReactNode }) => {\n  const queryClient = createTestQueryClient()\n  \n  return (\n    <QueryClientProvider client={queryClient}>\n      <DndProvider backend={HTML5Backend}>\n        <ThemeProvider theme={{ mode: 'light' }}>\n          <ToastProvider>\n            {children}\n          </ToastProvider>\n        </ThemeProvider>\n      </DndProvider>\n    </QueryClientProvider>\n  )\n}\n\nconst customRender = (\n  ui: ReactElement,\n  options?: Omit<RenderOptions, 'wrapper'>\n): RenderResult => {\n  return render(ui, { wrapper: AllTheProviders, ...options })\n}\n\n// ============================================================================\n// 性能测试工具\n// ============================================================================\n\nexport class PerformanceTester {\n  private measurements = new Map<string, number[]>()\n\n  async measure<T>(name: string, fn: () => Promise<T>): Promise<T> {\n    const start = performance.now()\n    const result = await fn()\n    const end = performance.now()\n    const duration = end - start\n\n    if (!this.measurements.has(name)) {\n      this.measurements.set(name, [])\n    }\n    this.measurements.get(name)!.push(duration)\n\n    return result\n  }\n\n  measureSync<T>(name: string, fn: () => T): T {\n    const start = performance.now()\n    const result = fn()\n    const end = performance.now()\n    const duration = end - start\n\n    if (!this.measurements.has(name)) {\n      this.measurements.set(name, [])\n    }\n    this.measurements.get(name)!.push(duration)\n\n    return result\n  }\n\n  getStats(name: string) {\n    const measurements = this.measurements.get(name) || []\n    if (measurements.length === 0) return null\n\n    const sum = measurements.reduce((a, b) => a + b, 0)\n    const avg = sum / measurements.length\n    const min = Math.min(...measurements)\n    const max = Math.max(...measurements)\n    \n    return {\n      count: measurements.length,\n      sum,\n      avg,\n      min,\n      max,\n      measurements,\n    }\n  }\n\n  clear() {\n    this.measurements.clear()\n  }\n}\n\n// ============================================================================\n// 网络模拟工具\n// ============================================================================\n\nexport class NetworkSimulator {\n  private originalFetch = global.fetch\n  private latency = 0\n  private failureRate = 0\n  private offline = false\n\n  constructor() {\n    this.setupMockFetch()\n  }\n\n  setLatency(ms: number) {\n    this.latency = ms\n  }\n\n  setFailureRate(rate: number) {\n    this.failureRate = Math.max(0, Math.min(1, rate))\n  }\n\n  setOffline(offline: boolean) {\n    this.offline = offline\n  }\n\n  private setupMockFetch() {\n    global.fetch = jest.fn(async (input: RequestInfo | URL, init?: RequestInit) => {\n      if (this.offline) {\n        throw new Error('Network: Offline')\n      }\n\n      if (Math.random() < this.failureRate) {\n        throw new Error('Network: Request failed')\n      }\n\n      if (this.latency > 0) {\n        await new Promise(resolve => setTimeout(resolve, this.latency))\n      }\n\n      return this.originalFetch(input, init)\n    }) as any\n  }\n\n  restore() {\n    global.fetch = this.originalFetch\n  }\n}\n\n// ============================================================================\n// 事件模拟工具\n// ============================================================================\n\nexport class EventSimulator {\n  static simulateFileUpload(files: File[]): Event {\n    return {\n      target: {\n        files,\n      },\n    } as unknown as Event\n  }\n\n  static simulateDragStart(data: any): DragEvent {\n    return {\n      dataTransfer: {\n        setData: jest.fn(),\n        getData: jest.fn(() => JSON.stringify(data)),\n        clearData: jest.fn(),\n      },\n      preventDefault: jest.fn(),\n      stopPropagation: jest.fn(),\n    } as unknown as DragEvent\n  }\n\n  static simulateDragOver(position: { x: number; y: number }): DragEvent {\n    return {\n      clientX: position.x,\n      clientY: position.y,\n      preventDefault: jest.fn(),\n      stopPropagation: jest.fn(),\n    } as unknown as DragEvent\n  }\n\n  static simulateDrop(data: any, position: { x: number; y: number }): DragEvent {\n    return {\n      clientX: position.x,\n      clientY: position.y,\n      dataTransfer: {\n        getData: jest.fn(() => JSON.stringify(data)),\n        setData: jest.fn(),\n        clearData: jest.fn(),\n      },\n      preventDefault: jest.fn(),\n      stopPropagation: jest.fn(),\n    } as unknown as DragEvent\n  }\n\n  static simulateKeyboardEvent(type: string, key: string, options: KeyboardEventInit = {}): KeyboardEvent {\n    return new KeyboardEvent(type, {\n      key,\n      bubbles: true,\n      cancelable: true,\n      ...options,\n    })\n  }\n\n  static simulateMouseEvent(type: string, options: MouseEventInit = {}): MouseEvent {\n    return new MouseEvent(type, {\n      bubbles: true,\n      cancelable: true,\n      ...options,\n    })\n  }\n}\n\n// ============================================================================\n// 导出\n// ============================================================================\n\n// 重新导出 testing-library 工具\nexport * from '@testing-library/react'\n\n// 导出自定义渲染器\nexport { customRender as render }\n\n// 导出工具类\nexport {\n  MockSupabaseClient,\n  MockIndexedDB,\n  TestDataGenerator,\n  PerformanceTester,\n  NetworkSimulator,\n  EventSimulator,\n}\n\n// 导出类型\nexport type {\n  TestCardData,\n  TestFolderData,\n  TestTagData,\n  TestSyncOperation,\n}"],"version":3}