{"file":"D:\\Projects\\CardEverything\\cardall-prototype\\node_modules\\jest-axe\\node_modules\\pretty-format\\build\\plugins\\lib\\markup.js","mappings":"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","names":[],"sources":["D:\\Projects\\CardEverything\\cardall-prototype\\node_modules\\jest-axe\\node_modules\\pretty-format\\build\\plugins\\lib\\markup.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.printText =\n  exports.printProps =\n  exports.printElementAsLeaf =\n  exports.printElement =\n  exports.printComment =\n  exports.printChildren =\n    void 0;\nvar _escapeHTML = _interopRequireDefault(require('./escapeHTML'));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// Return empty string if keys is empty.\nconst printProps = (keys, props, config, indentation, depth, refs, printer) => {\n  const indentationNext = indentation + config.indent;\n  const colors = config.colors;\n  return keys\n    .map(key => {\n      const value = props[key];\n      let printed = printer(value, config, indentationNext, depth, refs);\n      if (typeof value !== 'string') {\n        if (printed.indexOf('\\n') !== -1) {\n          printed =\n            config.spacingOuter +\n            indentationNext +\n            printed +\n            config.spacingOuter +\n            indentation;\n        }\n        printed = `{${printed}}`;\n      }\n      return `${\n        config.spacingInner +\n        indentation +\n        colors.prop.open +\n        key +\n        colors.prop.close\n      }=${colors.value.open}${printed}${colors.value.close}`;\n    })\n    .join('');\n};\n\n// Return empty string if children is empty.\nexports.printProps = printProps;\nconst printChildren = (children, config, indentation, depth, refs, printer) =>\n  children\n    .map(\n      child =>\n        config.spacingOuter +\n        indentation +\n        (typeof child === 'string'\n          ? printText(child, config)\n          : printer(child, config, indentation, depth, refs))\n    )\n    .join('');\nexports.printChildren = printChildren;\nconst printText = (text, config) => {\n  const contentColor = config.colors.content;\n  return (\n    contentColor.open + (0, _escapeHTML.default)(text) + contentColor.close\n  );\n};\nexports.printText = printText;\nconst printComment = (comment, config) => {\n  const commentColor = config.colors.comment;\n  return `${commentColor.open}<!--${(0, _escapeHTML.default)(comment)}-->${\n    commentColor.close\n  }`;\n};\n\n// Separate the functions to format props, children, and element,\n// so a plugin could override a particular function, if needed.\n// Too bad, so sad: the traditional (but unnecessary) space\n// in a self-closing tagColor requires a second test of printedProps.\nexports.printComment = printComment;\nconst printElement = (\n  type,\n  printedProps,\n  printedChildren,\n  config,\n  indentation\n) => {\n  const tagColor = config.colors.tag;\n  return `${tagColor.open}<${type}${\n    printedProps &&\n    tagColor.close +\n      printedProps +\n      config.spacingOuter +\n      indentation +\n      tagColor.open\n  }${\n    printedChildren\n      ? `>${tagColor.close}${printedChildren}${config.spacingOuter}${indentation}${tagColor.open}</${type}`\n      : `${printedProps && !config.min ? '' : ' '}/`\n  }>${tagColor.close}`;\n};\nexports.printElement = printElement;\nconst printElementAsLeaf = (type, config) => {\n  const tagColor = config.colors.tag;\n  return `${tagColor.open}<${type}${tagColor.close} â€¦${tagColor.open} />${tagColor.close}`;\n};\nexports.printElementAsLeaf = printElementAsLeaf;\n"],"version":3}