{"file":"D:\\Projects\\CardEverything\\cardall-prototype\\node_modules\\react-dnd-html5-backend\\dist\\NativeDragSources\\index.js","mappings":";;AAEA,wDAQC;AACD,kDAaC;AAxBD,+DAAyD;AACzD,iEAA2D;AAC3D,SAAgB,sBAAsB,CAAC,IAAI,EAAE,YAAY;IACrD,MAAM,MAAM,GAAG,wCAAiB,CAAC,IAAI,CAAC,CAAC;IACvC,IAAI,CAAC,MAAM,EAAE,CAAC;QACV,MAAM,IAAI,KAAK,CAAC,eAAe,IAAI,uBAAuB,CAAC,CAAC;IAChE,CAAC;IACD,MAAM,MAAM,GAAG,IAAI,sCAAgB,CAAC,MAAM,CAAC,CAAC;IAC5C,MAAM,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;IACtC,OAAO,MAAM,CAAC;AAClB,CAAC;AACD,SAAgB,mBAAmB,CAAC,YAAY;IAC5C,IAAI,CAAC,YAAY,EAAE,CAAC;QAChB,OAAO,IAAI,CAAC;IAChB,CAAC;IACD,MAAM,iBAAiB,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC;IAC/E,OAAO,MAAM,CAAC,IAAI,CAAC,wCAAiB,CAAC,CAAC,MAAM,CAAC,CAAC,cAAc,EAAC,EAAE;QAC3D,MAAM,UAAU,GAAG,wCAAiB,CAAC,cAAc,CAAC,CAAC;QACrD,IAAI,CAAC,CAAC,UAAU,KAAK,IAAI,IAAI,UAAU,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE,CAAC;YACrF,OAAO,KAAK,CAAC;QACjB,CAAC;QACD,OAAO,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,EAAE,CAAA,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CACzE,CAAC;IACN,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;AAClB,CAAC;AAED,iCAAiC","names":[],"sources":["D:\\Projects\\CardEverything\\cardall-prototype\\node_modules\\react-dnd-html5-backend\\dist\\NativeDragSources\\index.js"],"sourcesContent":["import { NativeDragSource } from './NativeDragSource.js';\nimport { nativeTypesConfig } from './nativeTypesConfig.js';\nexport function createNativeDragSource(type, dataTransfer) {\n    const config = nativeTypesConfig[type];\n    if (!config) {\n        throw new Error(`native type ${type} has no configuration`);\n    }\n    const result = new NativeDragSource(config);\n    result.loadDataTransfer(dataTransfer);\n    return result;\n}\nexport function matchNativeItemType(dataTransfer) {\n    if (!dataTransfer) {\n        return null;\n    }\n    const dataTransferTypes = Array.prototype.slice.call(dataTransfer.types || []);\n    return Object.keys(nativeTypesConfig).filter((nativeItemType)=>{\n        const typeConfig = nativeTypesConfig[nativeItemType];\n        if (!(typeConfig === null || typeConfig === void 0 ? void 0 : typeConfig.matchesTypes)) {\n            return false;\n        }\n        return typeConfig.matchesTypes.some((t)=>dataTransferTypes.indexOf(t) > -1\n        );\n    })[0] || null;\n}\n\n//# sourceMappingURL=index.js.map"],"version":3}