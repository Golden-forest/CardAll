{"file":"D:\\Projects\\CardEverything\\cardall-prototype\\node_modules\\jest-axe\\node_modules\\pretty-format\\build\\plugins\\DOMElement.js","mappings":"AAAA,YAAY,CAAC;AAEb,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE;IAC3C,KAAK,EAAE,IAAI;CACZ,CAAC,CAAC;AACH,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC;AAC5D,IAAI,OAAO,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AACtC;;;;;GAKG;AAEH,MAAM,YAAY,GAAG,CAAC,CAAC;AACvB,MAAM,SAAS,GAAG,CAAC,CAAC;AACpB,MAAM,YAAY,GAAG,CAAC,CAAC;AACvB,MAAM,aAAa,GAAG,EAAE,CAAC;AACzB,MAAM,cAAc,GAAG,2BAA2B,CAAC;AACnD,MAAM,gBAAgB,GAAG,GAAG,CAAC,EAAE;IAC7B,IAAI,CAAC;QACH,OAAO,OAAO,GAAG,CAAC,YAAY,KAAK,UAAU,IAAI,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IAC1E,CAAC;IAAC,MAAM,CAAC;QACP,OAAO,KAAK,CAAC;IACf,CAAC;AACH,CAAC,CAAC;AACF,MAAM,QAAQ,GAAG,GAAG,CAAC,EAAE;IACrB,MAAM,eAAe,GAAG,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC;IAC7C,MAAM,EAAC,QAAQ,EAAE,OAAO,EAAC,GAAG,GAAG,CAAC;IAChC,MAAM,eAAe,GACnB,CAAC,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QACtD,gBAAgB,CAAC,GAAG,CAAC,CAAC;IACxB,OAAO,CACL,CAAC,QAAQ,KAAK,YAAY;QACxB,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,eAAe,CAAC,CAAC;QAC5D,CAAC,QAAQ,KAAK,SAAS,IAAI,eAAe,KAAK,MAAM,CAAC;QACtD,CAAC,QAAQ,KAAK,YAAY,IAAI,eAAe,KAAK,SAAS,CAAC;QAC5D,CAAC,QAAQ,KAAK,aAAa,IAAI,eAAe,KAAK,kBAAkB,CAAC,CACvE,CAAC;AACJ,CAAC,CAAC;AACF,MAAM,IAAI,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,WAAW,EAAE,IAAI,IAAI,QAAQ,CAAC,GAAG,CAAC,CAAC;AAC5D,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;AACpB,SAAS,UAAU,CAAC,IAAI;IACtB,OAAO,IAAI,CAAC,QAAQ,KAAK,SAAS,CAAC;AACrC,CAAC;AACD,SAAS,aAAa,CAAC,IAAI;IACzB,OAAO,IAAI,CAAC,QAAQ,KAAK,YAAY,CAAC;AACxC,CAAC;AACD,SAAS,cAAc,CAAC,IAAI;IAC1B,OAAO,IAAI,CAAC,QAAQ,KAAK,aAAa,CAAC;AACzC,CAAC;AACD,MAAM,SAAS,GAAG,CAAC,IAAI,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE;IACpE,IAAI,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC;QACrB,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IACnD,CAAC;IACD,IAAI,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC;QACxB,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IACtD,CAAC;IACD,MAAM,IAAI,GAAG,cAAc,CAAC,IAAI,CAAC;QAC/B,CAAC,CAAC,kBAAkB;QACpB,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;IAC/B,IAAI,EAAE,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;QAC9B,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,kBAAkB,CAAC,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IACvD,CAAC;IACD,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,YAAY,CAAC,CAC9B,IAAI,EACJ,CAAC,CAAC,EAAE,OAAO,CAAC,UAAU,CAAC,CACrB,cAAc,CAAC,IAAI,CAAC;QAClB,CAAC,CAAC,EAAE;QACJ,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EACzD,cAAc,CAAC,IAAI,CAAC;QAClB,CAAC,CAAC,EAAE;QACJ,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,SAAS,EAAE,EAAE;YACtD,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC;YACxC,OAAO,KAAK,CAAC;QACf,CAAC,EAAE,EAAE,CAAC,EACV,MAAM,EACN,WAAW,GAAG,MAAM,CAAC,MAAM,EAC3B,KAAK,EACL,IAAI,EACJ,OAAO,CACR,EACD,CAAC,CAAC,EAAE,OAAO,CAAC,aAAa,CAAC,CACxB,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,QAAQ,CAAC,EAC5D,MAAM,EACN,WAAW,GAAG,MAAM,CAAC,MAAM,EAC3B,KAAK,EACL,IAAI,EACJ,OAAO,CACR,EACD,MAAM,EACN,WAAW,CACZ,CAAC;AACJ,CAAC,CAAC;AACF,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC;AAC9B,MAAM,MAAM,GAAG;IACb,SAAS;IACT,IAAI;CACL,CAAC;AACF,IAAI,QAAQ,GAAG,MAAM,CAAC;AACtB,OAAO,CAAC,OAAO,GAAG,QAAQ,CAAC","names":[],"sources":["D:\\Projects\\CardEverything\\cardall-prototype\\node_modules\\jest-axe\\node_modules\\pretty-format\\build\\plugins\\DOMElement.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.test = exports.serialize = exports.default = void 0;\nvar _markup = require('./lib/markup');\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst ELEMENT_NODE = 1;\nconst TEXT_NODE = 3;\nconst COMMENT_NODE = 8;\nconst FRAGMENT_NODE = 11;\nconst ELEMENT_REGEXP = /^((HTML|SVG)\\w*)?Element$/;\nconst testHasAttribute = val => {\n  try {\n    return typeof val.hasAttribute === 'function' && val.hasAttribute('is');\n  } catch {\n    return false;\n  }\n};\nconst testNode = val => {\n  const constructorName = val.constructor.name;\n  const {nodeType, tagName} = val;\n  const isCustomElement =\n    (typeof tagName === 'string' && tagName.includes('-')) ||\n    testHasAttribute(val);\n  return (\n    (nodeType === ELEMENT_NODE &&\n      (ELEMENT_REGEXP.test(constructorName) || isCustomElement)) ||\n    (nodeType === TEXT_NODE && constructorName === 'Text') ||\n    (nodeType === COMMENT_NODE && constructorName === 'Comment') ||\n    (nodeType === FRAGMENT_NODE && constructorName === 'DocumentFragment')\n  );\n};\nconst test = val => val?.constructor?.name && testNode(val);\nexports.test = test;\nfunction nodeIsText(node) {\n  return node.nodeType === TEXT_NODE;\n}\nfunction nodeIsComment(node) {\n  return node.nodeType === COMMENT_NODE;\n}\nfunction nodeIsFragment(node) {\n  return node.nodeType === FRAGMENT_NODE;\n}\nconst serialize = (node, config, indentation, depth, refs, printer) => {\n  if (nodeIsText(node)) {\n    return (0, _markup.printText)(node.data, config);\n  }\n  if (nodeIsComment(node)) {\n    return (0, _markup.printComment)(node.data, config);\n  }\n  const type = nodeIsFragment(node)\n    ? 'DocumentFragment'\n    : node.tagName.toLowerCase();\n  if (++depth > config.maxDepth) {\n    return (0, _markup.printElementAsLeaf)(type, config);\n  }\n  return (0, _markup.printElement)(\n    type,\n    (0, _markup.printProps)(\n      nodeIsFragment(node)\n        ? []\n        : Array.from(node.attributes, attr => attr.name).sort(),\n      nodeIsFragment(node)\n        ? {}\n        : Array.from(node.attributes).reduce((props, attribute) => {\n            props[attribute.name] = attribute.value;\n            return props;\n          }, {}),\n      config,\n      indentation + config.indent,\n      depth,\n      refs,\n      printer\n    ),\n    (0, _markup.printChildren)(\n      Array.prototype.slice.call(node.childNodes || node.children),\n      config,\n      indentation + config.indent,\n      depth,\n      refs,\n      printer\n    ),\n    config,\n    indentation\n  );\n};\nexports.serialize = serialize;\nconst plugin = {\n  serialize,\n  test\n};\nvar _default = plugin;\nexports.default = _default;\n"],"version":3}