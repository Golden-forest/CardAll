{"file":"D:\\Projects\\CardEverything\\cardall-prototype\\node_modules\\jest-axe\\node_modules\\jest-diff\\build\\index.js","mappings":"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","names":[],"sources":["D:\\Projects\\CardEverything\\cardall-prototype\\node_modules\\jest-axe\\node_modules\\jest-diff\\build\\index.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nObject.defineProperty(exports, 'DIFF_DELETE', {\n  enumerable: true,\n  get: function () {\n    return _cleanupSemantic.DIFF_DELETE;\n  }\n});\nObject.defineProperty(exports, 'DIFF_EQUAL', {\n  enumerable: true,\n  get: function () {\n    return _cleanupSemantic.DIFF_EQUAL;\n  }\n});\nObject.defineProperty(exports, 'DIFF_INSERT', {\n  enumerable: true,\n  get: function () {\n    return _cleanupSemantic.DIFF_INSERT;\n  }\n});\nObject.defineProperty(exports, 'Diff', {\n  enumerable: true,\n  get: function () {\n    return _cleanupSemantic.Diff;\n  }\n});\nexports.diff = diff;\nObject.defineProperty(exports, 'diffLinesRaw', {\n  enumerable: true,\n  get: function () {\n    return _diffLines.diffLinesRaw;\n  }\n});\nObject.defineProperty(exports, 'diffLinesUnified', {\n  enumerable: true,\n  get: function () {\n    return _diffLines.diffLinesUnified;\n  }\n});\nObject.defineProperty(exports, 'diffLinesUnified2', {\n  enumerable: true,\n  get: function () {\n    return _diffLines.diffLinesUnified2;\n  }\n});\nObject.defineProperty(exports, 'diffStringsRaw', {\n  enumerable: true,\n  get: function () {\n    return _printDiffs.diffStringsRaw;\n  }\n});\nObject.defineProperty(exports, 'diffStringsUnified', {\n  enumerable: true,\n  get: function () {\n    return _printDiffs.diffStringsUnified;\n  }\n});\nvar _chalk = _interopRequireDefault(require('chalk'));\nvar _jestGetType = require('jest-get-type');\nvar _prettyFormat = require('pretty-format');\nvar _cleanupSemantic = require('./cleanupSemantic');\nvar _constants = require('./constants');\nvar _diffLines = require('./diffLines');\nvar _normalizeDiffOptions = require('./normalizeDiffOptions');\nvar _printDiffs = require('./printDiffs');\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\nvar Symbol = globalThis['jest-symbol-do-not-touch'] || globalThis.Symbol;\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst getCommonMessage = (message, options) => {\n  const {commonColor} = (0, _normalizeDiffOptions.normalizeDiffOptions)(\n    options\n  );\n  return commonColor(message);\n};\nconst {\n  AsymmetricMatcher,\n  DOMCollection,\n  DOMElement,\n  Immutable,\n  ReactElement,\n  ReactTestComponent\n} = _prettyFormat.plugins;\nconst PLUGINS = [\n  ReactTestComponent,\n  ReactElement,\n  DOMElement,\n  DOMCollection,\n  Immutable,\n  AsymmetricMatcher\n];\nconst FORMAT_OPTIONS = {\n  plugins: PLUGINS\n};\nconst FALLBACK_FORMAT_OPTIONS = {\n  callToJSON: false,\n  maxDepth: 10,\n  plugins: PLUGINS\n};\n\n// Generate a string that will highlight the difference between two values\n// with green and red. (similar to how github does code diffing)\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction diff(a, b, options) {\n  if (Object.is(a, b)) {\n    return getCommonMessage(_constants.NO_DIFF_MESSAGE, options);\n  }\n  const aType = (0, _jestGetType.getType)(a);\n  let expectedType = aType;\n  let omitDifference = false;\n  if (aType === 'object' && typeof a.asymmetricMatch === 'function') {\n    if (a.$$typeof !== Symbol.for('jest.asymmetricMatcher')) {\n      // Do not know expected type of user-defined asymmetric matcher.\n      return null;\n    }\n    if (typeof a.getExpectedType !== 'function') {\n      // For example, expect.anything() matches either null or undefined\n      return null;\n    }\n    expectedType = a.getExpectedType();\n    // Primitive types boolean and number omit difference below.\n    // For example, omit difference for expect.stringMatching(regexp)\n    omitDifference = expectedType === 'string';\n  }\n  if (expectedType !== (0, _jestGetType.getType)(b)) {\n    return (\n      '  Comparing two different types of values.' +\n      ` Expected ${_chalk.default.green(expectedType)} but ` +\n      `received ${_chalk.default.red((0, _jestGetType.getType)(b))}.`\n    );\n  }\n  if (omitDifference) {\n    return null;\n  }\n  switch (aType) {\n    case 'string':\n      return (0, _diffLines.diffLinesUnified)(\n        a.split('\\n'),\n        b.split('\\n'),\n        options\n      );\n    case 'boolean':\n    case 'number':\n      return comparePrimitive(a, b, options);\n    case 'map':\n      return compareObjects(sortMap(a), sortMap(b), options);\n    case 'set':\n      return compareObjects(sortSet(a), sortSet(b), options);\n    default:\n      return compareObjects(a, b, options);\n  }\n}\nfunction comparePrimitive(a, b, options) {\n  const aFormat = (0, _prettyFormat.format)(a, FORMAT_OPTIONS);\n  const bFormat = (0, _prettyFormat.format)(b, FORMAT_OPTIONS);\n  return aFormat === bFormat\n    ? getCommonMessage(_constants.NO_DIFF_MESSAGE, options)\n    : (0, _diffLines.diffLinesUnified)(\n        aFormat.split('\\n'),\n        bFormat.split('\\n'),\n        options\n      );\n}\nfunction sortMap(map) {\n  return new Map(Array.from(map.entries()).sort());\n}\nfunction sortSet(set) {\n  return new Set(Array.from(set.values()).sort());\n}\nfunction compareObjects(a, b, options) {\n  let difference;\n  let hasThrown = false;\n  try {\n    const formatOptions = getFormatOptions(FORMAT_OPTIONS, options);\n    difference = getObjectsDifference(a, b, formatOptions, options);\n  } catch {\n    hasThrown = true;\n  }\n  const noDiffMessage = getCommonMessage(_constants.NO_DIFF_MESSAGE, options);\n  // If the comparison yields no results, compare again but this time\n  // without calling `toJSON`. It's also possible that toJSON might throw.\n  if (difference === undefined || difference === noDiffMessage) {\n    const formatOptions = getFormatOptions(FALLBACK_FORMAT_OPTIONS, options);\n    difference = getObjectsDifference(a, b, formatOptions, options);\n    if (difference !== noDiffMessage && !hasThrown) {\n      difference = `${getCommonMessage(\n        _constants.SIMILAR_MESSAGE,\n        options\n      )}\\n\\n${difference}`;\n    }\n  }\n  return difference;\n}\nfunction getFormatOptions(formatOptions, options) {\n  const {compareKeys} = (0, _normalizeDiffOptions.normalizeDiffOptions)(\n    options\n  );\n  return {\n    ...formatOptions,\n    compareKeys\n  };\n}\nfunction getObjectsDifference(a, b, formatOptions, options) {\n  const formatOptionsZeroIndent = {\n    ...formatOptions,\n    indent: 0\n  };\n  const aCompare = (0, _prettyFormat.format)(a, formatOptionsZeroIndent);\n  const bCompare = (0, _prettyFormat.format)(b, formatOptionsZeroIndent);\n  if (aCompare === bCompare) {\n    return getCommonMessage(_constants.NO_DIFF_MESSAGE, options);\n  } else {\n    const aDisplay = (0, _prettyFormat.format)(a, formatOptions);\n    const bDisplay = (0, _prettyFormat.format)(b, formatOptions);\n    return (0, _diffLines.diffLinesUnified2)(\n      aDisplay.split('\\n'),\n      bDisplay.split('\\n'),\n      aCompare.split('\\n'),\n      bCompare.split('\\n'),\n      options\n    );\n  }\n}\n"],"version":3}