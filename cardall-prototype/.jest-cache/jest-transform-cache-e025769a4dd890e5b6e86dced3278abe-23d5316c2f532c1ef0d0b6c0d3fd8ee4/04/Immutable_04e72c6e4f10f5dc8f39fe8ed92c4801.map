{"file":"D:\\Projects\\CardEverything\\cardall-prototype\\node_modules\\jest-axe\\node_modules\\pretty-format\\build\\plugins\\Immutable.js","mappings":"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","names":[],"sources":["D:\\Projects\\CardEverything\\cardall-prototype\\node_modules\\jest-axe\\node_modules\\pretty-format\\build\\plugins\\Immutable.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.test = exports.serialize = exports.default = void 0;\nvar _collections = require('../collections');\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// SENTINEL constants are from https://github.com/facebook/immutable-js\nconst IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\nconst IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';\nconst IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\nconst IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';\nconst IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\nconst IS_RECORD_SENTINEL = '@@__IMMUTABLE_RECORD__@@'; // immutable v4\nconst IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';\nconst IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';\nconst IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';\nconst getImmutableName = name => `Immutable.${name}`;\nconst printAsLeaf = name => `[${name}]`;\nconst SPACE = ' ';\nconst LAZY = 'â€¦'; // Seq is lazy if it calls a method like filter\n\nconst printImmutableEntries = (\n  val,\n  config,\n  indentation,\n  depth,\n  refs,\n  printer,\n  type\n) =>\n  ++depth > config.maxDepth\n    ? printAsLeaf(getImmutableName(type))\n    : `${getImmutableName(type) + SPACE}{${(0,\n      _collections.printIteratorEntries)(\n        val.entries(),\n        config,\n        indentation,\n        depth,\n        refs,\n        printer\n      )}}`;\n\n// Record has an entries method because it is a collection in immutable v3.\n// Return an iterator for Immutable Record from version v3 or v4.\nfunction getRecordEntries(val) {\n  let i = 0;\n  return {\n    next() {\n      if (i < val._keys.length) {\n        const key = val._keys[i++];\n        return {\n          done: false,\n          value: [key, val.get(key)]\n        };\n      }\n      return {\n        done: true,\n        value: undefined\n      };\n    }\n  };\n}\nconst printImmutableRecord = (\n  val,\n  config,\n  indentation,\n  depth,\n  refs,\n  printer\n) => {\n  // _name property is defined only for an Immutable Record instance\n  // which was constructed with a second optional descriptive name arg\n  const name = getImmutableName(val._name || 'Record');\n  return ++depth > config.maxDepth\n    ? printAsLeaf(name)\n    : `${name + SPACE}{${(0, _collections.printIteratorEntries)(\n        getRecordEntries(val),\n        config,\n        indentation,\n        depth,\n        refs,\n        printer\n      )}}`;\n};\nconst printImmutableSeq = (val, config, indentation, depth, refs, printer) => {\n  const name = getImmutableName('Seq');\n  if (++depth > config.maxDepth) {\n    return printAsLeaf(name);\n  }\n  if (val[IS_KEYED_SENTINEL]) {\n    return `${name + SPACE}{${\n      // from Immutable collection of entries or from ECMAScript object\n      val._iter || val._object\n        ? (0, _collections.printIteratorEntries)(\n            val.entries(),\n            config,\n            indentation,\n            depth,\n            refs,\n            printer\n          )\n        : LAZY\n    }}`;\n  }\n  return `${name + SPACE}[${\n    val._iter ||\n    // from Immutable collection of values\n    val._array ||\n    // from ECMAScript array\n    val._collection ||\n    // from ECMAScript collection in immutable v4\n    val._iterable // from ECMAScript collection in immutable v3\n      ? (0, _collections.printIteratorValues)(\n          val.values(),\n          config,\n          indentation,\n          depth,\n          refs,\n          printer\n        )\n      : LAZY\n  }]`;\n};\nconst printImmutableValues = (\n  val,\n  config,\n  indentation,\n  depth,\n  refs,\n  printer,\n  type\n) =>\n  ++depth > config.maxDepth\n    ? printAsLeaf(getImmutableName(type))\n    : `${getImmutableName(type) + SPACE}[${(0,\n      _collections.printIteratorValues)(\n        val.values(),\n        config,\n        indentation,\n        depth,\n        refs,\n        printer\n      )}]`;\nconst serialize = (val, config, indentation, depth, refs, printer) => {\n  if (val[IS_MAP_SENTINEL]) {\n    return printImmutableEntries(\n      val,\n      config,\n      indentation,\n      depth,\n      refs,\n      printer,\n      val[IS_ORDERED_SENTINEL] ? 'OrderedMap' : 'Map'\n    );\n  }\n  if (val[IS_LIST_SENTINEL]) {\n    return printImmutableValues(\n      val,\n      config,\n      indentation,\n      depth,\n      refs,\n      printer,\n      'List'\n    );\n  }\n  if (val[IS_SET_SENTINEL]) {\n    return printImmutableValues(\n      val,\n      config,\n      indentation,\n      depth,\n      refs,\n      printer,\n      val[IS_ORDERED_SENTINEL] ? 'OrderedSet' : 'Set'\n    );\n  }\n  if (val[IS_STACK_SENTINEL]) {\n    return printImmutableValues(\n      val,\n      config,\n      indentation,\n      depth,\n      refs,\n      printer,\n      'Stack'\n    );\n  }\n  if (val[IS_SEQ_SENTINEL]) {\n    return printImmutableSeq(val, config, indentation, depth, refs, printer);\n  }\n\n  // For compatibility with immutable v3 and v4, let record be the default.\n  return printImmutableRecord(val, config, indentation, depth, refs, printer);\n};\n\n// Explicitly comparing sentinel properties to true avoids false positive\n// when mock identity-obj-proxy returns the key as the value for any key.\nexports.serialize = serialize;\nconst test = val =>\n  val &&\n  (val[IS_ITERABLE_SENTINEL] === true || val[IS_RECORD_SENTINEL] === true);\nexports.test = test;\nconst plugin = {\n  serialize,\n  test\n};\nvar _default = plugin;\nexports.default = _default;\n"],"version":3}