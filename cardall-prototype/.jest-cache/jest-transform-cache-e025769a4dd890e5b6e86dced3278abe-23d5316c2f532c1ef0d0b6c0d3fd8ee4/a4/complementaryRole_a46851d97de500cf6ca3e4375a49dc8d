115f4596c147397ccfaa195d871c21ae
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var complementaryRole = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ['author'],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
            concept: {
                name: 'aside'
            },
            module: 'HTML'
        }, {
            concept: {
                attributes: [{
                        constraints: ['set'],
                        name: 'aria-label'
                    }],
                constraints: ['scoped to a sectioning content element', 'scoped to a sectioning root element other than body'],
                name: 'aside'
            },
            module: 'HTML'
        }, {
            concept: {
                attributes: [{
                        constraints: ['set'],
                        name: 'aria-labelledby'
                    }],
                constraints: ['scoped to a sectioning content element', 'scoped to a sectioning root element other than body'],
                name: 'aside'
            },
            module: 'HTML'
        }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [['roletype', 'structure', 'section', 'landmark']]
};
var _default = complementaryRole;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiRDpcXFByb2plY3RzXFxDYXJkRXZlcnl0aGluZ1xcY2FyZGFsbC1wcm90b3R5cGVcXG5vZGVfbW9kdWxlc1xcYXJpYS1xdWVyeVxcbGliXFxldGNcXHJvbGVzXFxsaXRlcmFsXFxjb21wbGVtZW50YXJ5Um9sZS5qcyIsIm1hcHBpbmdzIjoiQUFBQSxZQUFZLENBQUM7QUFFYixNQUFNLENBQUMsY0FBYyxDQUFDLE9BQU8sRUFBRSxZQUFZLEVBQUU7SUFDM0MsS0FBSyxFQUFFLElBQUk7Q0FDWixDQUFDLENBQUM7QUFDSCxPQUFPLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQyxDQUFDO0FBQ3pCLElBQUksaUJBQWlCLEdBQUc7SUFDdEIsUUFBUSxFQUFFLEtBQUs7SUFDZixzQkFBc0IsRUFBRSxLQUFLO0lBQzdCLFlBQVksRUFBRSxFQUFFO0lBQ2hCLHNCQUFzQixFQUFFLEtBQUs7SUFDN0IsUUFBUSxFQUFFLENBQUMsUUFBUSxDQUFDO0lBQ3BCLGVBQWUsRUFBRSxFQUFFO0lBQ25CLEtBQUssRUFBRSxFQUFFO0lBQ1QsZUFBZSxFQUFFLENBQUM7WUFDaEIsT0FBTyxFQUFFO2dCQUNQLElBQUksRUFBRSxPQUFPO2FBQ2Q7WUFDRCxNQUFNLEVBQUUsTUFBTTtTQUNmLEVBQUU7WUFDRCxPQUFPLEVBQUU7Z0JBQ1AsVUFBVSxFQUFFLENBQUM7d0JBQ1gsV0FBVyxFQUFFLENBQUMsS0FBSyxDQUFDO3dCQUNwQixJQUFJLEVBQUUsWUFBWTtxQkFDbkIsQ0FBQztnQkFDRixXQUFXLEVBQUUsQ0FBQyx3Q0FBd0MsRUFBRSxxREFBcUQsQ0FBQztnQkFDOUcsSUFBSSxFQUFFLE9BQU87YUFDZDtZQUNELE1BQU0sRUFBRSxNQUFNO1NBQ2YsRUFBRTtZQUNELE9BQU8sRUFBRTtnQkFDUCxVQUFVLEVBQUUsQ0FBQzt3QkFDWCxXQUFXLEVBQUUsQ0FBQyxLQUFLLENBQUM7d0JBQ3BCLElBQUksRUFBRSxpQkFBaUI7cUJBQ3hCLENBQUM7Z0JBQ0YsV0FBVyxFQUFFLENBQUMsd0NBQXdDLEVBQUUscURBQXFELENBQUM7Z0JBQzlHLElBQUksRUFBRSxPQUFPO2FBQ2Q7WUFDRCxNQUFNLEVBQUUsTUFBTTtTQUNmLENBQUM7SUFDRixrQkFBa0IsRUFBRSxFQUFFO0lBQ3RCLG1CQUFtQixFQUFFLEVBQUU7SUFDdkIscUJBQXFCLEVBQUUsRUFBRTtJQUN6QixhQUFhLEVBQUUsRUFBRTtJQUNqQixVQUFVLEVBQUUsQ0FBQyxDQUFDLFVBQVUsRUFBRSxXQUFXLEVBQUUsU0FBUyxFQUFFLFVBQVUsQ0FBQyxDQUFDO0NBQy9ELENBQUM7QUFDRixJQUFJLFFBQVEsR0FBRyxpQkFBaUIsQ0FBQztBQUNqQyxPQUFPLENBQUMsT0FBTyxHQUFHLFFBQVEsQ0FBQyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyJEOlxcUHJvamVjdHNcXENhcmRFdmVyeXRoaW5nXFxjYXJkYWxsLXByb3RvdHlwZVxcbm9kZV9tb2R1bGVzXFxhcmlhLXF1ZXJ5XFxsaWJcXGV0Y1xccm9sZXNcXGxpdGVyYWxcXGNvbXBsZW1lbnRhcnlSb2xlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIGNvbXBsZW1lbnRhcnlSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7fSxcbiAgcmVsYXRlZENvbmNlcHRzOiBbe1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIG5hbWU6ICdhc2lkZSdcbiAgICB9LFxuICAgIG1vZHVsZTogJ0hUTUwnXG4gIH0sIHtcbiAgICBjb25jZXB0OiB7XG4gICAgICBhdHRyaWJ1dGVzOiBbe1xuICAgICAgICBjb25zdHJhaW50czogWydzZXQnXSxcbiAgICAgICAgbmFtZTogJ2FyaWEtbGFiZWwnXG4gICAgICB9XSxcbiAgICAgIGNvbnN0cmFpbnRzOiBbJ3Njb3BlZCB0byBhIHNlY3Rpb25pbmcgY29udGVudCBlbGVtZW50JywgJ3Njb3BlZCB0byBhIHNlY3Rpb25pbmcgcm9vdCBlbGVtZW50IG90aGVyIHRoYW4gYm9keSddLFxuICAgICAgbmFtZTogJ2FzaWRlJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfSwge1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIGF0dHJpYnV0ZXM6IFt7XG4gICAgICAgIGNvbnN0cmFpbnRzOiBbJ3NldCddLFxuICAgICAgICBuYW1lOiAnYXJpYS1sYWJlbGxlZGJ5J1xuICAgICAgfV0sXG4gICAgICBjb25zdHJhaW50czogWydzY29wZWQgdG8gYSBzZWN0aW9uaW5nIGNvbnRlbnQgZWxlbWVudCcsICdzY29wZWQgdG8gYSBzZWN0aW9uaW5nIHJvb3QgZWxlbWVudCBvdGhlciB0aGFuIGJvZHknXSxcbiAgICAgIG5hbWU6ICdhc2lkZSdcbiAgICB9LFxuICAgIG1vZHVsZTogJ0hUTUwnXG4gIH1dLFxuICByZXF1aXJlQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZENvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRPd25lZEVsZW1lbnRzOiBbXSxcbiAgcmVxdWlyZWRQcm9wczoge30sXG4gIHN1cGVyQ2xhc3M6IFtbJ3JvbGV0eXBlJywgJ3N0cnVjdHVyZScsICdzZWN0aW9uJywgJ2xhbmRtYXJrJ11dXG59O1xudmFyIF9kZWZhdWx0ID0gY29tcGxlbWVudGFyeVJvbGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwidmVyc2lvbiI6M30=