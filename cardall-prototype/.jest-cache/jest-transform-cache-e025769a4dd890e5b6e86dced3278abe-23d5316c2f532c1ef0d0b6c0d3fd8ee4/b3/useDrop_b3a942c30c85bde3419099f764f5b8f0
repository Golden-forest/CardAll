bf0439a9b598b285148fab4baaff1b44
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useDrop = useDrop;
const useCollectedProps_js_1 = require("../useCollectedProps.js");
const useOptionalFactory_js_1 = require("../useOptionalFactory.js");
const connectors_js_1 = require("./connectors.js");
const useDropTargetConnector_js_1 = require("./useDropTargetConnector.js");
const useDropTargetMonitor_js_1 = require("./useDropTargetMonitor.js");
const useRegisteredDropTarget_js_1 = require("./useRegisteredDropTarget.js");
/**
 * useDropTarget Hook
 * @param spec The drop target specification (object or function, function preferred)
 * @param deps The memoization deps array to use when evaluating spec changes
 */ function useDrop(specArg, deps) {
    const spec = (0, useOptionalFactory_js_1.useOptionalFactory)(specArg, deps);
    const monitor = (0, useDropTargetMonitor_js_1.useDropTargetMonitor)();
    const connector = (0, useDropTargetConnector_js_1.useDropTargetConnector)(spec.options);
    (0, useRegisteredDropTarget_js_1.useRegisteredDropTarget)(spec, monitor, connector);
    return [
        (0, useCollectedProps_js_1.useCollectedProps)(spec.collect, monitor, connector),
        (0, connectors_js_1.useConnectDropTarget)(connector),
    ];
}
//# sourceMappingURL=useDrop.js.map
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiRDpcXFByb2plY3RzXFxDYXJkRXZlcnl0aGluZ1xcY2FyZGFsbC1wcm90b3R5cGVcXG5vZGVfbW9kdWxlc1xccmVhY3QtZG5kXFxkaXN0XFxob29rc1xcdXNlRHJvcFxcdXNlRHJvcC5qcyIsIm1hcHBpbmdzIjoiOztBQVVJLDBCQVNIO0FBbkJELGtFQUE0RDtBQUM1RCxvRUFBOEQ7QUFDOUQsbURBQXVEO0FBQ3ZELDJFQUFxRTtBQUNyRSx1RUFBaUU7QUFDakUsNkVBQXVFO0FBQ3ZFOzs7O0dBSUcsQ0FBQyxTQUFnQixPQUFPLENBQUMsT0FBTyxFQUFFLElBQUk7SUFDckMsTUFBTSxJQUFJLEdBQUcsSUFBQSwwQ0FBa0IsRUFBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDL0MsTUFBTSxPQUFPLEdBQUcsSUFBQSw4Q0FBb0IsR0FBRSxDQUFDO0lBQ3ZDLE1BQU0sU0FBUyxHQUFHLElBQUEsa0RBQXNCLEVBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ3ZELElBQUEsb0RBQXVCLEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxTQUFTLENBQUMsQ0FBQztJQUNsRCxPQUFPO1FBQ0gsSUFBQSx3Q0FBaUIsRUFBQyxJQUFJLENBQUMsT0FBTyxFQUFFLE9BQU8sRUFBRSxTQUFTLENBQUM7UUFDbkQsSUFBQSxvQ0FBb0IsRUFBQyxTQUFTLENBQUM7S0FDbEMsQ0FBQztBQUNOLENBQUM7QUFFRCxtQ0FBbUMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiRDpcXFByb2plY3RzXFxDYXJkRXZlcnl0aGluZ1xcY2FyZGFsbC1wcm90b3R5cGVcXG5vZGVfbW9kdWxlc1xccmVhY3QtZG5kXFxkaXN0XFxob29rc1xcdXNlRHJvcFxcdXNlRHJvcC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VDb2xsZWN0ZWRQcm9wcyB9IGZyb20gJy4uL3VzZUNvbGxlY3RlZFByb3BzLmpzJztcbmltcG9ydCB7IHVzZU9wdGlvbmFsRmFjdG9yeSB9IGZyb20gJy4uL3VzZU9wdGlvbmFsRmFjdG9yeS5qcyc7XG5pbXBvcnQgeyB1c2VDb25uZWN0RHJvcFRhcmdldCB9IGZyb20gJy4vY29ubmVjdG9ycy5qcyc7XG5pbXBvcnQgeyB1c2VEcm9wVGFyZ2V0Q29ubmVjdG9yIH0gZnJvbSAnLi91c2VEcm9wVGFyZ2V0Q29ubmVjdG9yLmpzJztcbmltcG9ydCB7IHVzZURyb3BUYXJnZXRNb25pdG9yIH0gZnJvbSAnLi91c2VEcm9wVGFyZ2V0TW9uaXRvci5qcyc7XG5pbXBvcnQgeyB1c2VSZWdpc3RlcmVkRHJvcFRhcmdldCB9IGZyb20gJy4vdXNlUmVnaXN0ZXJlZERyb3BUYXJnZXQuanMnO1xuLyoqXG4gKiB1c2VEcm9wVGFyZ2V0IEhvb2tcbiAqIEBwYXJhbSBzcGVjIFRoZSBkcm9wIHRhcmdldCBzcGVjaWZpY2F0aW9uIChvYmplY3Qgb3IgZnVuY3Rpb24sIGZ1bmN0aW9uIHByZWZlcnJlZClcbiAqIEBwYXJhbSBkZXBzIFRoZSBtZW1vaXphdGlvbiBkZXBzIGFycmF5IHRvIHVzZSB3aGVuIGV2YWx1YXRpbmcgc3BlYyBjaGFuZ2VzXG4gKi8gZXhwb3J0IGZ1bmN0aW9uIHVzZURyb3Aoc3BlY0FyZywgZGVwcykge1xuICAgIGNvbnN0IHNwZWMgPSB1c2VPcHRpb25hbEZhY3Rvcnkoc3BlY0FyZywgZGVwcyk7XG4gICAgY29uc3QgbW9uaXRvciA9IHVzZURyb3BUYXJnZXRNb25pdG9yKCk7XG4gICAgY29uc3QgY29ubmVjdG9yID0gdXNlRHJvcFRhcmdldENvbm5lY3RvcihzcGVjLm9wdGlvbnMpO1xuICAgIHVzZVJlZ2lzdGVyZWREcm9wVGFyZ2V0KHNwZWMsIG1vbml0b3IsIGNvbm5lY3Rvcik7XG4gICAgcmV0dXJuIFtcbiAgICAgICAgdXNlQ29sbGVjdGVkUHJvcHMoc3BlYy5jb2xsZWN0LCBtb25pdG9yLCBjb25uZWN0b3IpLFxuICAgICAgICB1c2VDb25uZWN0RHJvcFRhcmdldChjb25uZWN0b3IpLCBcbiAgICBdO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD11c2VEcm9wLmpzLm1hcCJdLCJ2ZXJzaW9uIjozfQ==