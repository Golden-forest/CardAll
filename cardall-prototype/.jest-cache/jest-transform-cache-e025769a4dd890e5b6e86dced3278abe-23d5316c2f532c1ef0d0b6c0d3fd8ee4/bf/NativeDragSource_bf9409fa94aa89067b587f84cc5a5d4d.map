{"file":"D:\\Projects\\CardEverything\\cardall-prototype\\node_modules\\react-dnd-html5-backend\\dist\\NativeDragSources\\NativeDragSource.js","mappings":";;;AAAA,MAAa,gBAAgB;IACzB,2BAA2B;QACvB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAC,EAAE;YAC1D,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE;gBACvC,YAAY,EAAE,IAAI;gBAClB,UAAU,EAAE,IAAI;gBAChB,GAAG;oBACC,sCAAsC;oBACtC,OAAO,CAAC,IAAI,CAAC,kCAAkC,QAAQ,yBAAyB,CAAC,CAAC;oBAClF,OAAO,IAAI,CAAC;gBAChB,CAAC;aACJ,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IACD,gBAAgB,CAAC,YAAY;QACzB,IAAI,YAAY,EAAE,CAAC;YACf,MAAM,aAAa,GAAG,EAAE,CAAC;YACzB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAC,EAAE;gBAC1D,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;gBAC1D,IAAI,UAAU,IAAI,IAAI,EAAE,CAAC;oBACrB,aAAa,CAAC,QAAQ,CAAC,GAAG;wBACtB,KAAK,EAAE,UAAU,CAAC,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;wBACzD,YAAY,EAAE,IAAI;wBAClB,UAAU,EAAE,IAAI;qBACnB,CAAC;gBACN,CAAC;YACL,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;QACtD,CAAC;IACL,CAAC;IACD,OAAO;QACH,OAAO,IAAI,CAAC;IAChB,CAAC;IACD,SAAS;QACL,OAAO,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IACD,UAAU,CAAC,OAAO,EAAE,MAAM;QACtB,OAAO,MAAM,KAAK,OAAO,CAAC,WAAW,EAAE,CAAC;IAC5C,CAAC;IACD,OAAO;QACP,QAAQ;IACR,CAAC;IACD,YAAY,MAAM;QACd,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,2BAA2B,EAAE,CAAC;IACvC,CAAC;CACJ;AA/CD,4CA+CC;AAED,4CAA4C","names":[],"sources":["D:\\Projects\\CardEverything\\cardall-prototype\\node_modules\\react-dnd-html5-backend\\dist\\NativeDragSources\\NativeDragSource.js"],"sourcesContent":["export class NativeDragSource {\n    initializeExposedProperties() {\n        Object.keys(this.config.exposeProperties).forEach((property)=>{\n            Object.defineProperty(this.item, property, {\n                configurable: true,\n                enumerable: true,\n                get () {\n                    // eslint-disable-next-line no-console\n                    console.warn(`Browser doesn't allow reading \"${property}\" until the drop event.`);\n                    return null;\n                }\n            });\n        });\n    }\n    loadDataTransfer(dataTransfer) {\n        if (dataTransfer) {\n            const newProperties = {};\n            Object.keys(this.config.exposeProperties).forEach((property)=>{\n                const propertyFn = this.config.exposeProperties[property];\n                if (propertyFn != null) {\n                    newProperties[property] = {\n                        value: propertyFn(dataTransfer, this.config.matchesTypes),\n                        configurable: true,\n                        enumerable: true\n                    };\n                }\n            });\n            Object.defineProperties(this.item, newProperties);\n        }\n    }\n    canDrag() {\n        return true;\n    }\n    beginDrag() {\n        return this.item;\n    }\n    isDragging(monitor, handle) {\n        return handle === monitor.getSourceId();\n    }\n    endDrag() {\n    // empty\n    }\n    constructor(config){\n        this.config = config;\n        this.item = {};\n        this.initializeExposedProperties();\n    }\n}\n\n//# sourceMappingURL=NativeDragSource.js.map"],"version":3}