{"file":"D:\\Projects\\CardEverything\\cardall-prototype\\node_modules\\jest-get-type\\build\\index.js","mappings":"AAAA,YAAY,CAAC;AAEb,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE;IAC3C,KAAK,EAAE,IAAI;CACZ,CAAC,CAAC;AACH,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC;AAC1B,OAAO,CAAC,WAAW,GAAG,KAAK,CAAC,CAAC;AAC7B;;;;;GAKG;AAEH,wEAAwE;AACxE,oBAAoB;AACpB,SAAS,OAAO,CAAC,KAAK;IACpB,IAAI,KAAK,KAAK,SAAS,EAAE,CAAC;QACxB,OAAO,WAAW,CAAC;IACrB,CAAC;SAAM,IAAI,KAAK,KAAK,IAAI,EAAE,CAAC;QAC1B,OAAO,MAAM,CAAC;IAChB,CAAC;SAAM,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC;QAChC,OAAO,OAAO,CAAC;IACjB,CAAC;SAAM,IAAI,OAAO,KAAK,KAAK,SAAS,EAAE,CAAC;QACtC,OAAO,SAAS,CAAC;IACnB,CAAC;SAAM,IAAI,OAAO,KAAK,KAAK,UAAU,EAAE,CAAC;QACvC,OAAO,UAAU,CAAC;IACpB,CAAC;SAAM,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,CAAC;QACrC,OAAO,QAAQ,CAAC;IAClB,CAAC;SAAM,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,CAAC;QACrC,OAAO,QAAQ,CAAC;IAClB,CAAC;SAAM,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,CAAC;QACrC,OAAO,QAAQ,CAAC;IAClB,CAAC;SAAM,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,CAAC;QACrC,IAAI,KAAK,IAAI,IAAI,EAAE,CAAC;YAClB,IAAI,KAAK,CAAC,WAAW,KAAK,MAAM,EAAE,CAAC;gBACjC,OAAO,QAAQ,CAAC;YAClB,CAAC;iBAAM,IAAI,KAAK,CAAC,WAAW,KAAK,GAAG,EAAE,CAAC;gBACrC,OAAO,KAAK,CAAC;YACf,CAAC;iBAAM,IAAI,KAAK,CAAC,WAAW,KAAK,GAAG,EAAE,CAAC;gBACrC,OAAO,KAAK,CAAC;YACf,CAAC;iBAAM,IAAI,KAAK,CAAC,WAAW,KAAK,IAAI,EAAE,CAAC;gBACtC,OAAO,MAAM,CAAC;YAChB,CAAC;QACH,CAAC;QACD,OAAO,QAAQ,CAAC;IAClB,CAAC;SAAM,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,CAAC;QACrC,OAAO,QAAQ,CAAC;IAClB,CAAC;IACD,MAAM,IAAI,KAAK,CAAC,0BAA0B,KAAK,EAAE,CAAC,CAAC;AACrD,CAAC;AACD,MAAM,WAAW,GAAG,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,KAAK,CAAC;AACrD,OAAO,CAAC,WAAW,GAAG,WAAW,CAAC","names":[],"sources":["D:\\Projects\\CardEverything\\cardall-prototype\\node_modules\\jest-get-type\\build\\index.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.getType = getType;\nexports.isPrimitive = void 0;\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// get the type of a value with handling the edge cases like `typeof []`\n// and `typeof null`\nfunction getType(value) {\n  if (value === undefined) {\n    return 'undefined';\n  } else if (value === null) {\n    return 'null';\n  } else if (Array.isArray(value)) {\n    return 'array';\n  } else if (typeof value === 'boolean') {\n    return 'boolean';\n  } else if (typeof value === 'function') {\n    return 'function';\n  } else if (typeof value === 'number') {\n    return 'number';\n  } else if (typeof value === 'string') {\n    return 'string';\n  } else if (typeof value === 'bigint') {\n    return 'bigint';\n  } else if (typeof value === 'object') {\n    if (value != null) {\n      if (value.constructor === RegExp) {\n        return 'regexp';\n      } else if (value.constructor === Map) {\n        return 'map';\n      } else if (value.constructor === Set) {\n        return 'set';\n      } else if (value.constructor === Date) {\n        return 'date';\n      }\n    }\n    return 'object';\n  } else if (typeof value === 'symbol') {\n    return 'symbol';\n  }\n  throw new Error(`value of unknown type: ${value}`);\n}\nconst isPrimitive = value => Object(value) !== value;\nexports.isPrimitive = isPrimitive;\n"],"version":3}