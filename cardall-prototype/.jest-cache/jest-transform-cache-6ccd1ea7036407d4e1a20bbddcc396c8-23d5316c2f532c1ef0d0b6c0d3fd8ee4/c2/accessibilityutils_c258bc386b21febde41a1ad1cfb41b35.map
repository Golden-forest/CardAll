{"file":"D:\\Projects\\CardEverything\\cardall-prototype\\src\\utils\\accessibility-utils.ts","mappings":";;;AAGa,QAAA,kBAAkB,GAAG;IAChC,UAAU,EAAE,CAAC,MAAc,EAAE,EAAE,CAAC,GAAG,MAAM,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;IACtF,aAAa,EAAE,CAAC,MAAc,EAAE,MAAc,EAAU,EAAE,CAAC,GAAG;IAC9D,YAAY,EAAE,CAAC,OAAoB,EAAW,EAAE;QAC9C,MAAM,IAAI,GAAG,OAAO,CAAC,qBAAqB,EAAE,CAAA;QAC5C,OAAO,CACL,IAAI,CAAC,GAAG,IAAI,CAAC;YACb,IAAI,CAAC,IAAI,IAAI,CAAC;YACd,IAAI,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,WAAW,IAAI,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC;YAC5E,IAAI,CAAC,KAAK,IAAI,CAAC,MAAM,CAAC,UAAU,IAAI,QAAQ,CAAC,eAAe,CAAC,WAAW,CAAC,CAC1E,CAAA;IACH,CAAC;IACD,eAAe,EAAE,CAAC,OAAoB,EAAE,WAA2B,QAAQ,EAAE,EAAE;QAC7E,OAAO,CAAC,cAAc,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,CAAA;IAC1E,CAAC;IACD,SAAS,EAAE,CAAC,SAAsB,EAAE,EAAE;QACpC,MAAM,iBAAiB,GAAG,SAAS,CAAC,gBAAgB,CAClD,0EAA0E,CAC3E,CAAA;QACD,MAAM,YAAY,GAAG,iBAAiB,CAAC,CAAC,CAAgB,CAAA;QACxD,MAAM,WAAW,GAAG,iBAAiB,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAgB,CAAA;QAElF,MAAM,aAAa,GAAG,CAAC,CAAgB,EAAE,EAAE;YACzC,IAAI,CAAC,CAAC,GAAG,KAAK,KAAK,EAAE,CAAC;gBACpB,IAAI,CAAC,CAAC,QAAQ,EAAE,CAAC;oBACf,IAAI,QAAQ,CAAC,aAAa,KAAK,YAAY,EAAE,CAAC;wBAC5C,CAAC,CAAC,cAAc,EAAE,CAAA;wBAClB,WAAW,CAAC,KAAK,EAAE,CAAA;oBACrB,CAAC;gBACH,CAAC;qBAAM,CAAC;oBACN,IAAI,QAAQ,CAAC,aAAa,KAAK,WAAW,EAAE,CAAC;wBAC3C,CAAC,CAAC,cAAc,EAAE,CAAA;wBAClB,YAAY,CAAC,KAAK,EAAE,CAAA;oBACtB,CAAC;gBACH,CAAC;YACH,CAAC;QACH,CAAC,CAAA;QAED,SAAS,CAAC,gBAAgB,CAAC,SAAS,EAAE,aAAa,CAAC,CAAA;QACpD,OAAO,GAAG,EAAE,CAAC,SAAS,CAAC,mBAAmB,CAAC,SAAS,EAAE,aAAa,CAAC,CAAA;IACtE,CAAC;IACD,kBAAkB,EAAE,GAAY,EAAE,CAAC,KAAK;IACxC,kBAAkB,EAAE,CAAC,QAAgB,EAAE,SAAkB,EAAU,EAAE;QACnE,OAAO,SAAS,CAAC,CAAC,CAAC,QAAQ,GAAG,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAA;IAC9C,CAAC;IACD,2BAA2B,EAAE,CAAC,YAAoB,EAAE,aAAsB,EAAU,EAAE;QACpF,OAAO,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAA;IACzC,CAAC;CACF,CAAA","names":[],"sources":["D:\\Projects\\CardEverything\\cardall-prototype\\src\\utils\\accessibility-utils.ts"],"sourcesContent":["// 可访问性工具函数\r\nimport { AccessibilitySettings, KeyboardShortcuts } from '../types/accessibility-types'\r\n\r\nexport const accessibilityUtils = {\r\n  generateId: (prefix: string) => `${prefix}-${Math.random().toString(36).substr(2, 9)}`,\r\n  checkContrast: (color1: string, color2: string): number => 4.5,\r\n  isInViewport: (element: HTMLElement): boolean => {\r\n    const rect = element.getBoundingClientRect()\r\n    return (\r\n      rect.top >= 0 &&\r\n      rect.left >= 0 &&\r\n      rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\r\n      rect.right <= (window.innerWidth || document.documentElement.clientWidth)\r\n    )\r\n  },\r\n  scrollToElement: (element: HTMLElement, behavior: ScrollBehavior = 'smooth') => {\r\n    element.scrollIntoView({ behavior, block: 'center', inline: 'nearest' })\r\n  },\r\n  trapFocus: (container: HTMLElement) => {\r\n    const focusableElements = container.querySelectorAll(\r\n      'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\r\n    )\r\n    const firstElement = focusableElements[0] as HTMLElement\r\n    const lastElement = focusableElements[focusableElements.length - 1] as HTMLElement\r\n\r\n    const handleKeyDown = (e: KeyboardEvent) => {\r\n      if (e.key === 'Tab') {\r\n        if (e.shiftKey) {\r\n          if (document.activeElement === firstElement) {\r\n            e.preventDefault()\r\n            lastElement.focus()\r\n          }\r\n        } else {\r\n          if (document.activeElement === lastElement) {\r\n            e.preventDefault()\r\n            firstElement.focus()\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    container.addEventListener('keydown', handleKeyDown)\r\n    return () => container.removeEventListener('keydown', handleKeyDown)\r\n  },\r\n  detectScreenReader: (): boolean => false,\r\n  getOptimalFontSize: (baseSize: number, largeText: boolean): number => {\r\n    return largeText ? baseSize * 1.2 : baseSize\r\n  },\r\n  getOptimalAnimationDuration: (baseDuration: number, reducedMotion: boolean): number => {\r\n    return reducedMotion ? 0 : baseDuration\r\n  }\r\n}"],"version":3}