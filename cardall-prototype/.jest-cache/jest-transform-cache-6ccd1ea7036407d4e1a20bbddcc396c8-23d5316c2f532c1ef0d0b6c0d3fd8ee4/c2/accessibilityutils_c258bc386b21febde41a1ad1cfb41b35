f865dd352b87259f832468f11139763b
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.accessibilityUtils = void 0;
exports.accessibilityUtils = {
    generateId: (prefix) => `${prefix}-${Math.random().toString(36).substr(2, 9)}`,
    checkContrast: (color1, color2) => 4.5,
    isInViewport: (element) => {
        const rect = element.getBoundingClientRect();
        return (rect.top >= 0 &&
            rect.left >= 0 &&
            rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&
            rect.right <= (window.innerWidth || document.documentElement.clientWidth));
    },
    scrollToElement: (element, behavior = 'smooth') => {
        element.scrollIntoView({ behavior, block: 'center', inline: 'nearest' });
    },
    trapFocus: (container) => {
        const focusableElements = container.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex="-1"])');
        const firstElement = focusableElements[0];
        const lastElement = focusableElements[focusableElements.length - 1];
        const handleKeyDown = (e) => {
            if (e.key === 'Tab') {
                if (e.shiftKey) {
                    if (document.activeElement === firstElement) {
                        e.preventDefault();
                        lastElement.focus();
                    }
                }
                else {
                    if (document.activeElement === lastElement) {
                        e.preventDefault();
                        firstElement.focus();
                    }
                }
            }
        };
        container.addEventListener('keydown', handleKeyDown);
        return () => container.removeEventListener('keydown', handleKeyDown);
    },
    detectScreenReader: () => false,
    getOptimalFontSize: (baseSize, largeText) => {
        return largeText ? baseSize * 1.2 : baseSize;
    },
    getOptimalAnimationDuration: (baseDuration, reducedMotion) => {
        return reducedMotion ? 0 : baseDuration;
    }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiRDpcXFByb2plY3RzXFxDYXJkRXZlcnl0aGluZ1xcY2FyZGFsbC1wcm90b3R5cGVcXHNyY1xcdXRpbHNcXGFjY2Vzc2liaWxpdHktdXRpbHMudHMiLCJtYXBwaW5ncyI6Ijs7O0FBR2EsUUFBQSxrQkFBa0IsR0FBRztJQUNoQyxVQUFVLEVBQUUsQ0FBQyxNQUFjLEVBQUUsRUFBRSxDQUFDLEdBQUcsTUFBTSxJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRTtJQUN0RixhQUFhLEVBQUUsQ0FBQyxNQUFjLEVBQUUsTUFBYyxFQUFVLEVBQUUsQ0FBQyxHQUFHO0lBQzlELFlBQVksRUFBRSxDQUFDLE9BQW9CLEVBQVcsRUFBRTtRQUM5QyxNQUFNLElBQUksR0FBRyxPQUFPLENBQUMscUJBQXFCLEVBQUUsQ0FBQTtRQUM1QyxPQUFPLENBQ0wsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDO1lBQ2IsSUFBSSxDQUFDLElBQUksSUFBSSxDQUFDO1lBQ2QsSUFBSSxDQUFDLE1BQU0sSUFBSSxDQUFDLE1BQU0sQ0FBQyxXQUFXLElBQUksUUFBUSxDQUFDLGVBQWUsQ0FBQyxZQUFZLENBQUM7WUFDNUUsSUFBSSxDQUFDLEtBQUssSUFBSSxDQUFDLE1BQU0sQ0FBQyxVQUFVLElBQUksUUFBUSxDQUFDLGVBQWUsQ0FBQyxXQUFXLENBQUMsQ0FDMUUsQ0FBQTtJQUNILENBQUM7SUFDRCxlQUFlLEVBQUUsQ0FBQyxPQUFvQixFQUFFLFdBQTJCLFFBQVEsRUFBRSxFQUFFO1FBQzdFLE9BQU8sQ0FBQyxjQUFjLENBQUMsRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLENBQUMsQ0FBQTtJQUMxRSxDQUFDO0lBQ0QsU0FBUyxFQUFFLENBQUMsU0FBc0IsRUFBRSxFQUFFO1FBQ3BDLE1BQU0saUJBQWlCLEdBQUcsU0FBUyxDQUFDLGdCQUFnQixDQUNsRCwwRUFBMEUsQ0FDM0UsQ0FBQTtRQUNELE1BQU0sWUFBWSxHQUFHLGlCQUFpQixDQUFDLENBQUMsQ0FBZ0IsQ0FBQTtRQUN4RCxNQUFNLFdBQVcsR0FBRyxpQkFBaUIsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFnQixDQUFBO1FBRWxGLE1BQU0sYUFBYSxHQUFHLENBQUMsQ0FBZ0IsRUFBRSxFQUFFO1lBQ3pDLElBQUksQ0FBQyxDQUFDLEdBQUcsS0FBSyxLQUFLLEVBQUUsQ0FBQztnQkFDcEIsSUFBSSxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUM7b0JBQ2YsSUFBSSxRQUFRLENBQUMsYUFBYSxLQUFLLFlBQVksRUFBRSxDQUFDO3dCQUM1QyxDQUFDLENBQUMsY0FBYyxFQUFFLENBQUE7d0JBQ2xCLFdBQVcsQ0FBQyxLQUFLLEVBQUUsQ0FBQTtvQkFDckIsQ0FBQztnQkFDSCxDQUFDO3FCQUFNLENBQUM7b0JBQ04sSUFBSSxRQUFRLENBQUMsYUFBYSxLQUFLLFdBQVcsRUFBRSxDQUFDO3dCQUMzQyxDQUFDLENBQUMsY0FBYyxFQUFFLENBQUE7d0JBQ2xCLFlBQVksQ0FBQyxLQUFLLEVBQUUsQ0FBQTtvQkFDdEIsQ0FBQztnQkFDSCxDQUFDO1lBQ0gsQ0FBQztRQUNILENBQUMsQ0FBQTtRQUVELFNBQVMsQ0FBQyxnQkFBZ0IsQ0FBQyxTQUFTLEVBQUUsYUFBYSxDQUFDLENBQUE7UUFDcEQsT0FBTyxHQUFHLEVBQUUsQ0FBQyxTQUFTLENBQUMsbUJBQW1CLENBQUMsU0FBUyxFQUFFLGFBQWEsQ0FBQyxDQUFBO0lBQ3RFLENBQUM7SUFDRCxrQkFBa0IsRUFBRSxHQUFZLEVBQUUsQ0FBQyxLQUFLO0lBQ3hDLGtCQUFrQixFQUFFLENBQUMsUUFBZ0IsRUFBRSxTQUFrQixFQUFVLEVBQUU7UUFDbkUsT0FBTyxTQUFTLENBQUMsQ0FBQyxDQUFDLFFBQVEsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQTtJQUM5QyxDQUFDO0lBQ0QsMkJBQTJCLEVBQUUsQ0FBQyxZQUFvQixFQUFFLGFBQXNCLEVBQVUsRUFBRTtRQUNwRixPQUFPLGFBQWEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUE7SUFDekMsQ0FBQztDQUNGLENBQUEiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiRDpcXFByb2plY3RzXFxDYXJkRXZlcnl0aGluZ1xcY2FyZGFsbC1wcm90b3R5cGVcXHNyY1xcdXRpbHNcXGFjY2Vzc2liaWxpdHktdXRpbHMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8g5Y+v6K6/6Zeu5oCn5bel5YW35Ye95pWwXHJcbmltcG9ydCB7IEFjY2Vzc2liaWxpdHlTZXR0aW5ncywgS2V5Ym9hcmRTaG9ydGN1dHMgfSBmcm9tICcuLi90eXBlcy9hY2Nlc3NpYmlsaXR5LXR5cGVzJ1xyXG5cclxuZXhwb3J0IGNvbnN0IGFjY2Vzc2liaWxpdHlVdGlscyA9IHtcclxuICBnZW5lcmF0ZUlkOiAocHJlZml4OiBzdHJpbmcpID0+IGAke3ByZWZpeH0tJHtNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwgOSl9YCxcclxuICBjaGVja0NvbnRyYXN0OiAoY29sb3IxOiBzdHJpbmcsIGNvbG9yMjogc3RyaW5nKTogbnVtYmVyID0+IDQuNSxcclxuICBpc0luVmlld3BvcnQ6IChlbGVtZW50OiBIVE1MRWxlbWVudCk6IGJvb2xlYW4gPT4ge1xyXG4gICAgY29uc3QgcmVjdCA9IGVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KClcclxuICAgIHJldHVybiAoXHJcbiAgICAgIHJlY3QudG9wID49IDAgJiZcclxuICAgICAgcmVjdC5sZWZ0ID49IDAgJiZcclxuICAgICAgcmVjdC5ib3R0b20gPD0gKHdpbmRvdy5pbm5lckhlaWdodCB8fCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0KSAmJlxyXG4gICAgICByZWN0LnJpZ2h0IDw9ICh3aW5kb3cuaW5uZXJXaWR0aCB8fCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGgpXHJcbiAgICApXHJcbiAgfSxcclxuICBzY3JvbGxUb0VsZW1lbnQ6IChlbGVtZW50OiBIVE1MRWxlbWVudCwgYmVoYXZpb3I6IFNjcm9sbEJlaGF2aW9yID0gJ3Ntb290aCcpID0+IHtcclxuICAgIGVsZW1lbnQuc2Nyb2xsSW50b1ZpZXcoeyBiZWhhdmlvciwgYmxvY2s6ICdjZW50ZXInLCBpbmxpbmU6ICduZWFyZXN0JyB9KVxyXG4gIH0sXHJcbiAgdHJhcEZvY3VzOiAoY29udGFpbmVyOiBIVE1MRWxlbWVudCkgPT4ge1xyXG4gICAgY29uc3QgZm9jdXNhYmxlRWxlbWVudHMgPSBjb250YWluZXIucXVlcnlTZWxlY3RvckFsbChcclxuICAgICAgJ2J1dHRvbiwgW2hyZWZdLCBpbnB1dCwgc2VsZWN0LCB0ZXh0YXJlYSwgW3RhYmluZGV4XTpub3QoW3RhYmluZGV4PVwiLTFcIl0pJ1xyXG4gICAgKVxyXG4gICAgY29uc3QgZmlyc3RFbGVtZW50ID0gZm9jdXNhYmxlRWxlbWVudHNbMF0gYXMgSFRNTEVsZW1lbnRcclxuICAgIGNvbnN0IGxhc3RFbGVtZW50ID0gZm9jdXNhYmxlRWxlbWVudHNbZm9jdXNhYmxlRWxlbWVudHMubGVuZ3RoIC0gMV0gYXMgSFRNTEVsZW1lbnRcclxuXHJcbiAgICBjb25zdCBoYW5kbGVLZXlEb3duID0gKGU6IEtleWJvYXJkRXZlbnQpID0+IHtcclxuICAgICAgaWYgKGUua2V5ID09PSAnVGFiJykge1xyXG4gICAgICAgIGlmIChlLnNoaWZ0S2V5KSB7XHJcbiAgICAgICAgICBpZiAoZG9jdW1lbnQuYWN0aXZlRWxlbWVudCA9PT0gZmlyc3RFbGVtZW50KSB7XHJcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKVxyXG4gICAgICAgICAgICBsYXN0RWxlbWVudC5mb2N1cygpXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGlmIChkb2N1bWVudC5hY3RpdmVFbGVtZW50ID09PSBsYXN0RWxlbWVudCkge1xyXG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KClcclxuICAgICAgICAgICAgZmlyc3RFbGVtZW50LmZvY3VzKClcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBjb250YWluZXIuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIGhhbmRsZUtleURvd24pXHJcbiAgICByZXR1cm4gKCkgPT4gY29udGFpbmVyLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBoYW5kbGVLZXlEb3duKVxyXG4gIH0sXHJcbiAgZGV0ZWN0U2NyZWVuUmVhZGVyOiAoKTogYm9vbGVhbiA9PiBmYWxzZSxcclxuICBnZXRPcHRpbWFsRm9udFNpemU6IChiYXNlU2l6ZTogbnVtYmVyLCBsYXJnZVRleHQ6IGJvb2xlYW4pOiBudW1iZXIgPT4ge1xyXG4gICAgcmV0dXJuIGxhcmdlVGV4dCA/IGJhc2VTaXplICogMS4yIDogYmFzZVNpemVcclxuICB9LFxyXG4gIGdldE9wdGltYWxBbmltYXRpb25EdXJhdGlvbjogKGJhc2VEdXJhdGlvbjogbnVtYmVyLCByZWR1Y2VkTW90aW9uOiBib29sZWFuKTogbnVtYmVyID0+IHtcclxuICAgIHJldHVybiByZWR1Y2VkTW90aW9uID8gMCA6IGJhc2VEdXJhdGlvblxyXG4gIH1cclxufSJdLCJ2ZXJzaW9uIjozfQ==