{"file":"D:\\Projects\\CardEverything\\cardall-prototype\\src\\__tests__\\mocks\\supabase.mock.ts","mappings":"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","names":[],"sources":["D:\\Projects\\CardEverything\\cardall-prototype\\src\\__tests__\\mocks\\supabase.mock.ts"],"sourcesContent":["/**\n * Supabase Mock for Testing\n * 提供完整的Supabase API模拟用于单元测试\n */\n\n// Supabase 客户端模拟\nexport const createMockSupabaseClient = () => {\n  const mockClient = {\n    from: jest.fn(),\n    auth: {\n      signUp: jest.fn(),\n      signIn: jest.fn(),\n      signOut: jest.fn(),\n      getUser: jest.fn(),\n      onAuthStateChange: jest.fn(),\n      getSession: jest.fn(),\n    },\n    storage: {\n      from: jest.fn(),\n    },\n    realtime: {\n      channel: jest.fn(),\n    },\n    functions: {\n      invoke: jest.fn(),\n    },\n  }\n\n  return mockClient\n}\n\n// Supabase 查询构建器模拟\nexport const createMockQueryBuilder = (data: any[] = [], error: any = null) => {\n  const mockBuilder = {\n    select: jest.fn().mockReturnThis(),\n    insert: jest.fn().mockReturnThis(),\n    update: jest.fn().mockReturnThis(),\n    delete: jest.fn().mockReturnThis(),\n    eq: jest.fn().mockReturnThis(),\n    neq: jest.fn().mockReturnThis(),\n    gt: jest.fn().mockReturnThis(),\n    gte: jest.fn().mockReturnThis(),\n    lt: jest.fn().mockReturnThis(),\n    lte: jest.fn().mockReturnThis(),\n    like: jest.fn().mockReturnThis(),\n    ilike: jest.fn().mockReturnThis(),\n    in: jest.fn().mockReturnThis(),\n    order: jest.fn().mockReturnThis(),\n    limit: jest.fn().mockReturnThis(),\n    offset: jest.fn().mockReturnThis(),\n    range: jest.fn().mockReturnThis(),\n    single: jest.fn().mockReturnThis(),\n    maybeSingle: jest.fn().mockReturnThis(),\n    execute: jest.fn().mockResolvedValue({ data, error }),\n  }\n\n  return mockBuilder\n}\n\n// Supabase Storage 模拟\nexport const createMockStorage = () => {\n  const mockStorage = {\n    upload: jest.fn(),\n    download: jest.fn(),\n    getPublicUrl: jest.fn(),\n    list: jest.fn(),\n    remove: jest.fn(),\n    createSignedUrl: jest.fn(),\n  }\n\n  return mockStorage\n}\n\n// Supabase Realtime 模拟\nexport const createMockRealtime = () => {\n  const mockChannel = {\n    on: jest.fn().mockReturnThis(),\n    subscribe: jest.fn(),\n    unsubscribe: jest.fn(),\n    send: jest.fn(),\n    listen: jest.fn(),\n  }\n\n  const mockRealtime = {\n    channel: jest.fn().mockReturnValue(mockChannel),\n    channels: jest.fn().mockReturnValue([mockChannel]),\n    closeAllChannels: jest.fn(),\n  }\n\n  return mockRealtime\n}\n\n// 常用测试数据\nexport const mockSupabaseTestData = {\n  cards: [\n    {\n      id: 'test-card-1',\n      title: 'Test Card 1',\n      content: 'Test content 1',\n      created_at: '2024-01-01T00:00:00Z',\n      updated_at: '2024-01-01T00:00:00Z',\n      user_id: 'test-user-1',\n      folder_id: 'test-folder-1',\n    },\n    {\n      id: 'test-card-2',\n      title: 'Test Card 2',\n      content: 'Test content 2',\n      created_at: '2024-01-02T00:00:00Z',\n      updated_at: '2024-01-02T00:00:00Z',\n      user_id: 'test-user-1',\n      folder_id: 'test-folder-1',\n    },\n  ],\n  folders: [\n    {\n      id: 'test-folder-1',\n      name: 'Test Folder',\n      created_at: '2024-01-01T00:00:00Z',\n      updated_at: '2024-01-01T00:00:00Z',\n      user_id: 'test-user-1',\n    },\n  ],\n  tags: [\n    {\n      id: 'test-tag-1',\n      name: 'Test Tag',\n      color: '#ff0000',\n      created_at: '2024-01-01T00:00:00Z',\n      user_id: 'test-user-1',\n    },\n  ],\n  users: [\n    {\n      id: 'test-user-1',\n      email: 'test@example.com',\n      created_at: '2024-01-01T00:00:00Z',\n      updated_at: '2024-01-01T00:00:00Z',\n    },\n  ],\n}\n\n// 模拟错误响应\nexport const mockSupabaseErrors = {\n  networkError: new Error('Network Error'),\n  authError: {\n    message: 'Invalid login credentials',\n    status: 401,\n  },\n  dataError: {\n    message: 'Invalid data format',\n    status: 400,\n  },\n  notFound: {\n    message: 'Not found',\n    status: 404,\n  },\n  serverError: {\n    message: 'Internal server error',\n    status: 500,\n  },\n}\n\n// 创建模拟的Supabase客户端实例\nexport const mockSupabaseClient = createMockSupabaseClient()\n\n// 设置默认的mock行为\nmockSupabaseClient.from.mockImplementation((table: string) => {\n  switch (table) {\n    case 'cards':\n      return createMockQueryBuilder(mockSupabaseTestData.cards)\n    case 'folders':\n      return createMockQueryBuilder(mockSupabaseTestData.folders)\n    case 'tags':\n      return createMockQueryBuilder(mockSupabaseTestData.tags)\n    case 'users':\n      return createMockQueryBuilder(mockSupabaseTestData.users)\n    default:\n      return createMockQueryBuilder([])\n  }\n})\n\nexport default mockSupabaseClient"],"version":3}