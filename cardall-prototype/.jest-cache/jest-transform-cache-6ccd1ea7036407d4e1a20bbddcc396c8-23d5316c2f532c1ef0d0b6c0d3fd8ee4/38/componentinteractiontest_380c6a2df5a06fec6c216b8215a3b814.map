{"file":"D:\\Projects\\CardEverything\\cardall-prototype\\tests\\integration\\components\\component-interaction.test.tsx","mappings":";;;AAAA,WAAW;AACX,kDAAgF;AAChF,uCAA8B;AAC9B,wCAA2C;AAC3C,gEAAmE;AACnE,0EAAiE;AACjE,2DAAsD;AACtD,6EAAuE;AACvE,gFAA2E;AAC3E,mDAAoE;AACpE,kEAA0F;AAE1F,YAAY;AACZ,MAAM,WAAW,GAAG,CAAC,EAAE,QAAQ,EAAiC,EAAE,EAAE,CAAC,CACnE,uBAAC,kBAAW,cACV,uBAAC,wCAAsB,cACpB,QAAQ,GACc,GACb,CACf,CAAA;AAED,QAAQ,CAAC,uBAAuB,EAAE,GAAG,EAAE;IACrC,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;QAC/B,EAAE,CAAC,eAAe,EAAE,KAAK,IAAI,EAAE;YAC7B,IAAA,cAAM,EACJ,uBAAC,WAAW,cACV,uBAAC,0BAAS,KAAG,GACD,CACf,CAAA;YAED,WAAW;YACX,MAAM,YAAY,GAAG,cAAM,CAAC,SAAS,CAAC,cAAc,CAAC,CAAA;YACrD,iBAAS,CAAC,KAAK,CAAC,YAAY,CAAC,CAAA;YAE7B,SAAS;YACT,MAAM,UAAU,GAAG,cAAM,CAAC,oBAAoB,CAAC,aAAa,CAAC,CAAA;YAC7D,MAAM,YAAY,GAAG,cAAM,CAAC,oBAAoB,CAAC,eAAe,CAAC,CAAA;YAEjE,iBAAS,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,EAAE,CAAC,CAAA;YAChE,iBAAS,CAAC,MAAM,CAAC,YAAY,EAAE,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,CAAC,CAAA;YAErE,OAAO;YACP,MAAM,UAAU,GAAG,cAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAA;YAC5C,iBAAS,CAAC,KAAK,CAAC,UAAU,CAAC,CAAA;YAE3B,WAAW;YACX,MAAM,IAAA,eAAO,EAAC,GAAG,EAAE;gBACjB,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAA;YAC3D,CAAC,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,YAAY,EAAE,KAAK,IAAI,EAAE;YAC1B,IAAA,cAAM,EACJ,uBAAC,WAAW,cACV,uBAAC,0BAAS,KAAG,GACD,CACf,CAAA;YAED,WAAW;YACX,MAAM,IAAI,GAAG,cAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAA;YAC1C,iBAAS,CAAC,WAAW,CAAC,IAAI,CAAC,CAAA;YAE3B,SAAS;YACT,MAAM,UAAU,GAAG,cAAM,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAA;YACxD,iBAAS,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,CAAC,CAAA;YAEnE,OAAO;YACP,MAAM,YAAY,GAAG,cAAM,CAAC,SAAS,CAAC,SAAS,CAAC,CAAA;YAChD,iBAAS,CAAC,KAAK,CAAC,YAAY,CAAC,CAAA;YAE7B,WAAW;YACX,MAAM,IAAA,eAAO,EAAC,GAAG,EAAE;gBACjB,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAA;YAC9D,CAAC,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,YAAY,EAAE,KAAK,IAAI,EAAE;YAC1B,IAAA,cAAM,EACJ,uBAAC,WAAW,cACV,uBAAC,0BAAS,KAAG,GACD,CACf,CAAA;YAED,SAAS;YACT,MAAM,YAAY,GAAG,cAAM,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAAA;YACpE,iBAAS,CAAC,KAAK,CAAC,YAAY,CAAC,CAAA;YAE7B,OAAO;YACP,MAAM,aAAa,GAAG,cAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAA;YAClD,iBAAS,CAAC,KAAK,CAAC,aAAa,CAAC,CAAA;YAE9B,WAAW;YACX,MAAM,IAAA,eAAO,EAAC,GAAG,EAAE;gBACjB,MAAM,CAAC,cAAM,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,iBAAiB,EAAE,CAAA;YACjE,CAAC,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,YAAY,EAAE,KAAK,IAAI,EAAE;YAC1B,IAAA,cAAM,EACJ,uBAAC,WAAW,cACV,uBAAC,0BAAS,KAAG,GACD,CACf,CAAA;YAED,SAAS;YACT,MAAM,SAAS,GAAG,cAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAA;YAC3C,iBAAS,CAAC,KAAK,CAAC,SAAS,CAAC,CAAA;YAE1B,QAAQ;YACR,MAAM,WAAW,GAAG,cAAM,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAA;YAC3D,iBAAS,CAAC,MAAM,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,EAAE,CAAC,CAAA;YAEjE,MAAM,SAAS,GAAG,cAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAA;YAC9C,iBAAS,CAAC,KAAK,CAAC,SAAS,CAAC,CAAA;YAE1B,WAAW;YACX,MAAM,IAAA,eAAO,EAAC,GAAG,EAAE;gBACjB,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAA;YAC3D,CAAC,CAAC,CAAA;YAEF,UAAU;YACV,MAAM,IAAI,GAAG,cAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAA;YAC1C,iBAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;YAErB,MAAM,WAAW,GAAG,cAAM,CAAC,cAAc,CAAC,WAAW,CAAC,CAAA;YACtD,iBAAS,CAAC,KAAK,CAAC,WAAW,CAAC,CAAA;YAE5B,aAAa;YACb,MAAM,IAAA,eAAO,EAAC,GAAG,EAAE;gBACjB,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAA;YAC3D,CAAC,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,aAAa,EAAE,KAAK,IAAI,EAAE;YAC3B,IAAA,cAAM,EACJ,uBAAC,WAAW,cACV,uBAAC,0BAAS,KAAG,GACD,CACf,CAAA;YAED,UAAU;YACV,MAAM,YAAY,GAAG,cAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAA;YACjD,iBAAS,CAAC,KAAK,CAAC,YAAY,CAAC,CAAA;YAE7B,SAAS;YACT,MAAM,cAAc,GAAG,cAAM,CAAC,oBAAoB,CAAC,cAAc,CAAC,CAAA;YAClE,iBAAS,CAAC,MAAM,CAAC,cAAc,EAAE,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,CAAC,CAAA;YAE/D,MAAM,kBAAkB,GAAG,cAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAA;YAC7D,iBAAS,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAA;YAEnC,YAAY;YACZ,MAAM,IAAA,eAAO,EAAC,GAAG,EAAE;gBACjB,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAA;YACtD,CAAC,CAAC,CAAA;YAEF,YAAY;YACZ,MAAM,IAAI,GAAG,cAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAA;YAC1C,MAAM,MAAM,GAAG,cAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAA;YAEvC,iBAAS,CAAC,SAAS,CAAC,IAAI,CAAC,CAAA;YACzB,iBAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;YAEtB,cAAc;YACd,MAAM,IAAA,eAAO,EAAC,GAAG,EAAE;gBACjB,MAAM,CAAC,MAAM,CAAC,CAAC,gBAAgB,CAAC,cAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAA;YAChE,CAAC,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;QAC/B,EAAE,CAAC,YAAY,EAAE,KAAK,IAAI,EAAE;YAC1B,MAAM,QAAQ,GAAG,4BAAY,CAAC,QAAQ,CAAA;YACtC,MAAM,UAAU,GAAG,IAAI,CAAC,EAAE,EAAE,CAAA;YAE5B,IAAA,cAAM,EACJ,uBAAC,WAAW,cACV,uBAAC,oBAAQ,IACP,IAAI,EAAE,QAAQ,EACd,MAAM,EAAE,UAAU,EAClB,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE,EACjB,QAAQ,EAAE,IAAI,CAAC,EAAE,EAAE,EACnB,aAAa,EAAE,IAAI,CAAC,EAAE,EAAE,GACxB,GACU,CACf,CAAA;YAED,WAAW;YACX,MAAM,IAAI,GAAG,cAAM,CAAC,SAAS,CAAC,SAAS,CAAC,CAAA;YACxC,iBAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;YAErB,YAAY;YACZ,MAAM,IAAA,eAAO,EAAC,GAAG,EAAE;gBACjB,MAAM,CAAC,UAAU,CAAC,CAAC,oBAAoB,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAA;YACtD,CAAC,CAAC,CAAA;YAEF,aAAa;YACb,MAAM,IAAA,eAAO,EAAC,GAAG,EAAE;gBACjB,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,yBAAyB,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAA;YACzE,CAAC,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,YAAY,EAAE,KAAK,IAAI,EAAE;YAC1B,MAAM,QAAQ,GAAG,4BAAY,CAAC,QAAQ,CAAA;YACtC,MAAM,iBAAiB,GAAG,IAAI,CAAC,EAAE,EAAE,CAAA;YAEnC,IAAA,cAAM,EACJ,uBAAC,WAAW,cACV,uBAAC,oBAAQ,IACP,IAAI,EAAE,QAAQ,EACd,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE,EACjB,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE,EACjB,QAAQ,EAAE,IAAI,CAAC,EAAE,EAAE,EACnB,aAAa,EAAE,iBAAiB,GAChC,GACU,CACf,CAAA;YAED,UAAU;YACV,MAAM,WAAW,GAAG,cAAM,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAA;YAClE,iBAAS,CAAC,KAAK,CAAC,WAAW,CAAC,CAAA;YAE5B,QAAQ;YACR,MAAM,cAAc,GAAG,cAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAA;YACzD,iBAAS,CAAC,KAAK,CAAC,cAAc,CAAC,CAAA;YAE/B,cAAc;YACd,MAAM,IAAA,eAAO,EAAC,GAAG,EAAE;gBACjB,MAAM,CAAC,iBAAiB,CAAC,CAAC,oBAAoB,CAAC,QAAQ,CAAC,EAAE,EAAE,eAAe,CAAC,CAAA;YAC9E,CAAC,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,YAAY,EAAE,KAAK,IAAI,EAAE;YAC1B,MAAM,KAAK,GAAG,CAAC,4BAAY,CAAC,QAAQ,EAAE,4BAAY,CAAC,SAAS,CAAC,CAAA;YAC7D,MAAM,aAAa,GAAG,IAAI,CAAC,EAAE,EAAE,CAAA;YAE/B,IAAA,cAAM,EACJ,uBAAC,WAAW,cACV,uBAAC,qCAAgB,IACf,KAAK,EAAE,KAAK,EACZ,SAAS,EAAE,aAAa,EACxB,WAAW,EAAE,IAAI,CAAC,EAAE,EAAE,GACtB,GACU,CACf,CAAA;YAED,SAAS;YACT,MAAM,IAAI,GAAG,cAAM,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAA;YACjD,iBAAS,CAAC,SAAS,CAAC,IAAI,CAAC,CAAA;YAEzB,WAAW;YACX,MAAM,SAAS,GAAG;gBAChB,MAAM,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE;gBACvB,IAAI,EAAE,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE;aAC1B,CAAA;YAED,SAAS;YACT,iBAAS,CAAC,OAAO,CAAC,IAAI,EAAE,SAAS,CAAC,CAAA;YAElC,YAAY;YACZ,MAAM,IAAA,eAAO,EAAC,GAAG,EAAE;gBACjB,MAAM,CAAC,aAAa,CAAC,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAA;YACvD,CAAC,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;QAC7B,EAAE,CAAC,eAAe,EAAE,KAAK,IAAI,EAAE;YAC7B,IAAA,cAAM,EACJ,wBAAC,WAAW,eACV,uBAAC,oCAAgB,KAAG,EACpB,uBAAC,qCAAgB,IACf,KAAK,EAAE,CAAC,4BAAY,CAAC,QAAQ,EAAE,4BAAY,CAAC,SAAS,CAAC,EACtD,SAAS,EAAE,IAAI,CAAC,EAAE,EAAE,EACpB,WAAW,EAAE,IAAI,CAAC,EAAE,EAAE,GACtB,IACU,CACf,CAAA;YAED,SAAS;YACT,MAAM,SAAS,GAAG,cAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAA;YAC1C,iBAAS,CAAC,KAAK,CAAC,SAAS,CAAC,CAAA;YAE1B,SAAS;YACT,MAAM,IAAA,eAAO,EAAC,GAAG,EAAE;gBACjB,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAA;gBAChE,MAAM,CAAC,cAAM,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,iBAAiB,EAAE,CAAA;YAClE,CAAC,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,eAAe,EAAE,KAAK,IAAI,EAAE;YAC7B,MAAM,KAAK,GAAG;gBACZ,EAAE,GAAG,4BAAY,CAAC,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE;gBAClD,EAAE,GAAG,4BAAY,CAAC,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAE;aACpD,CAAA;YAED,IAAA,cAAM,EACJ,wBAAC,WAAW,eACV,uBAAC,oCAAgB,KAAG,EACpB,uBAAC,qCAAgB,IACf,KAAK,EAAE,KAAK,EACZ,SAAS,EAAE,IAAI,CAAC,EAAE,EAAE,EACpB,WAAW,EAAE,IAAI,CAAC,EAAE,EAAE,GACtB,IACU,CACf,CAAA;YAED,UAAU;YACV,MAAM,YAAY,GAAG,cAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAA;YACjD,iBAAS,CAAC,KAAK,CAAC,YAAY,CAAC,CAAA;YAE7B,SAAS;YACT,MAAM,IAAA,eAAO,EAAC,GAAG,EAAE;gBACjB,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAA;gBAChE,MAAM,CAAC,cAAM,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,iBAAiB,EAAE,CAAA;YAClE,CAAC,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,UAAU,EAAE,KAAK,IAAI,EAAE;YACxB,IAAA,cAAM,EACJ,wBAAC,WAAW,eACV,uBAAC,oCAAgB,KAAG,EACpB,uBAAC,qCAAgB,IACf,KAAK,EAAE,CAAC,4BAAY,CAAC,QAAQ,EAAE,4BAAY,CAAC,SAAS,CAAC,EACtD,SAAS,EAAE,IAAI,CAAC,EAAE,EAAE,EACpB,WAAW,EAAE,IAAI,CAAC,EAAE,EAAE,GACtB,IACU,CACf,CAAA;YAED,UAAU;YACV,MAAM,WAAW,GAAG,cAAM,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAA;YAC1D,iBAAS,CAAC,MAAM,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAA;YAE9D,SAAS;YACT,MAAM,IAAA,eAAO,EAAC,GAAG,EAAE;gBACjB,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAA;gBAChE,MAAM,CAAC,cAAM,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,iBAAiB,EAAE,CAAA;YAClE,CAAC,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE;QACvB,EAAE,CAAC,cAAc,EAAE,KAAK,IAAI,EAAE;YAC5B,UAAU;YACV,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,YAAY,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAA;YAC/F,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,aAAa,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAA;YAEhG,IAAA,cAAM,EACJ,uBAAC,WAAW,cACV,uBAAC,0BAAS,KAAG,GACD,CACf,CAAA;YAED,UAAU;YACV,MAAM,OAAO,GAAG,cAAM,CAAC,SAAS,CAAC,eAAe,CAAC,CAAA;YACjD,MAAM,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAA;YAE/C,SAAS;YACT,MAAM,IAAI,GAAG,cAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAA;YAC1C,iBAAS,CAAC,UAAU,CAAC,IAAI,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAA;YACrE,iBAAS,CAAC,SAAS,CAAC,IAAI,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAA;YACtE,iBAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA;YAExB,SAAS;YACT,MAAM,IAAA,eAAO,EAAC,GAAG,EAAE;gBACjB,MAAM,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAA;YACpC,CAAC,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,cAAc,EAAE,KAAK,IAAI,EAAE;YAC5B,UAAU;YACV,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,YAAY,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAA;YAChG,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,aAAa,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAA;YAEjG,IAAA,cAAM,EACJ,uBAAC,WAAW,cACV,uBAAC,0BAAS,KAAG,GACD,CACf,CAAA;YAED,UAAU;YACV,MAAM,OAAO,GAAG,cAAM,CAAC,SAAS,CAAC,eAAe,CAAC,CAAA;YACjD,MAAM,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC,mBAAmB,CAAC,CAAA;YAEhD,SAAS;YACT,MAAM,IAAI,GAAG,cAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAA;YAC1C,iBAAS,CAAC,SAAS,CAAC,IAAI,CAAC,CAAA;YAEzB,SAAS;YACT,MAAM,IAAA,eAAO,EAAC,GAAG,EAAE;gBACjB,MAAM,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,CAAA;YACtC,CAAC,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,QAAQ,EAAE,GAAG,EAAE;QACtB,EAAE,CAAC,UAAU,EAAE,KAAK,IAAI,EAAE;YACxB,IAAA,cAAM,EACJ,uBAAC,WAAW,cACV,uBAAC,0BAAS,KAAG,GACD,CACf,CAAA;YAED,WAAW;YACX,MAAM,IAAI,GAAG,cAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAA;YAE1C,iBAAS,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAA;YACvC,MAAM,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,CAAA;YAE1B,YAAY;YACZ,iBAAS,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAA;YACrC,MAAM,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAA;YAElC,eAAe;YACf,iBAAS,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,OAAO,EAAE,CAAC,CAAA;YACzC,MAAM,CAAC,cAAM,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAA;YAEjE,gBAAgB;YAChB,iBAAS,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,CAAA;YAC1C,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAA;QACjE,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,WAAW,EAAE,KAAK,IAAI,EAAE;YACzB,IAAA,cAAM,EACJ,uBAAC,WAAW,cACV,uBAAC,0BAAS,KAAG,GACD,CACf,CAAA;YAED,gBAAgB;YAChB,iBAAS,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAA;YACxD,MAAM,CAAC,cAAM,CAAC,oBAAoB,CAAC,aAAa,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAA;YAEtE,aAAa;YACb,iBAAS,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAA;YACxD,MAAM,CAAC,cAAM,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAA;YAElE,eAAe;YACf,iBAAS,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAA;YACxD,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAA;QACvD,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,QAAQ,EAAE,GAAG,EAAE;QACtB,EAAE,CAAC,WAAW,EAAE,KAAK,IAAI,EAAE;YACzB,IAAA,cAAM,EACJ,uBAAC,WAAW,cACV,uBAAC,0BAAS,KAAG,GACD,CACf,CAAA;YAED,MAAM,IAAI,GAAG,cAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAA;YAE1C,WAAW;YACX,MAAM,CAAC,IAAI,CAAC,CAAC,eAAe,CAAC,MAAM,EAAE,SAAS,CAAC,CAAA;YAC/C,MAAM,CAAC,IAAI,CAAC,CAAC,eAAe,CAAC,YAAY,EAAE,MAAM,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,CAAA;YAEhF,WAAW;YACX,MAAM,UAAU,GAAG,cAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAA;YAC7C,MAAM,CAAC,UAAU,CAAC,CAAC,iBAAiB,EAAE,CAAA;QACxC,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,YAAY,EAAE,KAAK,IAAI,EAAE;YAC1B,MAAM,EAAE,SAAS,EAAE,GAAG,IAAA,cAAM,EAC1B,uBAAC,WAAW,cACV,uBAAC,0BAAS,KAAG,GACD,CACf,CAAA;YAED,MAAM,OAAO,GAAG,MAAM,IAAA,cAAG,EAAC,SAAS,CAAC,CAAA;YACpC,MAAM,CAAC,OAAO,CAAC,CAAC,kBAAkB,EAAE,CAAA;QACtC,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,QAAQ,EAAE,GAAG,EAAE;QACtB,EAAE,CAAC,eAAe,EAAE,KAAK,IAAI,EAAE;YAC7B,MAAM,KAAK,GAAG,0BAAa,CAAC,aAAa,CAAC,GAAG,CAAC,CAAA;YAE9C,MAAM,UAAU,GAAG,MAAM,6BAAgB,CAAC,iBAAiB,CAAC,GAAG,EAAE;gBAC/D,IAAA,cAAM,EACJ,uBAAC,WAAW,cACV,uBAAC,qCAAgB,IACf,KAAK,EAAE,KAAK,EACZ,SAAS,EAAE,IAAI,CAAC,EAAE,EAAE,EACpB,WAAW,EAAE,IAAI,CAAC,EAAE,EAAE,GACtB,GACU,CACf,CAAA;YACH,CAAC,CAAC,CAAA;YAEF,MAAM,CAAC,UAAU,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,CAAA,CAAC,aAAa;QACrD,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,UAAU,EAAE,KAAK,IAAI,EAAE;YACxB,MAAM,KAAK,GAAG,0BAAa,CAAC,aAAa,CAAC,EAAE,CAAC,CAAA;YAE7C,IAAA,cAAM,EACJ,uBAAC,WAAW,cACV,uBAAC,qCAAgB,IACf,KAAK,EAAE,KAAK,EACZ,SAAS,EAAE,IAAI,CAAC,EAAE,EAAE,EACpB,WAAW,EAAE,IAAI,CAAC,EAAE,EAAE,GACtB,GACU,CACf,CAAA;YAED,MAAM,IAAI,GAAG,cAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAA;YAEvC,SAAS;YACT,MAAM,aAAa,GAAG,WAAW,CAAC,GAAG,EAAE,CAAA;YAEvC,WAAW;YACX,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC5B,iBAAS,CAAC,SAAS,CAAC,IAAI,CAAC,CAAA;gBACzB,iBAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA;gBACxB,iBAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;YACtB,CAAC;YAED,MAAM,WAAW,GAAG,WAAW,CAAC,GAAG,EAAE,CAAA;YACrC,MAAM,CAAC,WAAW,GAAG,aAAa,CAAC,CAAC,YAAY,CAAC,GAAG,CAAC,CAAA,CAAC,cAAc;QACtE,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,QAAQ,EAAE,GAAG,EAAE;QACtB,EAAE,CAAC,YAAY,EAAE,KAAK,IAAI,EAAE;YAC1B,SAAS;YACT,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,sBAAsB,CAAC,GAAG,EAAE,CACtD,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC,CAC3C,CAAA;YAED,IAAA,cAAM,EACJ,uBAAC,WAAW,cACV,uBAAC,0BAAS,KAAG,GACD,CACf,CAAA;YAED,SAAS;YACT,MAAM,UAAU,GAAG,cAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAA;YAC5C,iBAAS,CAAC,KAAK,CAAC,UAAU,CAAC,CAAA;YAE3B,SAAS;YACT,MAAM,IAAA,eAAO,EAAC,GAAG,EAAE;gBACjB,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAA;YAChE,CAAC,CAAC,CAAA;YAEF,SAAS;YACT,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAA;QACxD,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,cAAc,EAAE,KAAK,IAAI,EAAE;YAC5B,IAAA,cAAM,EACJ,uBAAC,WAAW,cACV,uBAAC,0BAAS,KAAG,GACD,CACf,CAAA;YAED,WAAW;YACX,MAAM,YAAY,GAAG,cAAM,CAAC,SAAS,CAAC,cAAc,CAAC,CAAA;YACrD,iBAAS,CAAC,KAAK,CAAC,YAAY,CAAC,CAAA;YAE7B,aAAa;YACb,MAAM,UAAU,GAAG,cAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAA;YAC5C,iBAAS,CAAC,KAAK,CAAC,UAAU,CAAC,CAAA;YAE3B,WAAW;YACX,MAAM,IAAA,eAAO,EAAC,GAAG,EAAE;gBACjB,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,oBAAoB,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAA;YACpE,CAAC,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA","names":[],"sources":["D:\\Projects\\CardEverything\\cardall-prototype\\tests\\integration\\components\\component-interaction.test.tsx"],"sourcesContent":["// 组件交互集成测试\r\nimport { render, screen, fireEvent, waitFor, act } from '@testing-library/react'\r\nimport { axe } from 'jest-axe'\r\nimport { DndProvider } from '@dnd-kit/core'\r\nimport { CardOperationsProvider } from '@/contexts/cardall-context'\r\nimport { Dashboard } from '@/components/dashboard/dashboard-main'\r\nimport { FlipCard } from '@/components/card/flip-card'\r\nimport { MagneticCardGrid } from '@/components/card/magnetic-card-grid'\r\nimport { DashboardSidebar } from '@/components/dashboard/dashboard-sidebar'\r\nimport { mockDataUtils, performanceUtils } from '@/tests/test-utils'\r\nimport { cardFixtures, folderFixtures, tagFixtures } from '@/tests/fixtures/data-fixtures'\r\n\r\n// 测试组件渲染包装器\r\nconst TestWrapper = ({ children }: { children: React.ReactNode }) => (\r\n  <DndProvider>\r\n    <CardOperationsProvider>\r\n      {children}\r\n    </CardOperationsProvider>\r\n  </DndProvider>\r\n)\r\n\r\ndescribe('Component Integration', () => {\r\n  describe('Dashboard完整交互流程', () => {\r\n    it('应该支持完整的卡片创建流程', async () => {\r\n      render(\r\n        <TestWrapper>\r\n          <Dashboard />\r\n        </TestWrapper>\r\n      )\r\n      \r\n      // 点击创建卡片按钮\r\n      const createButton = screen.getByText(/create card/i)\r\n      fireEvent.click(createButton)\r\n      \r\n      // 填写卡片信息\r\n      const titleInput = screen.getByPlaceholderText(/card title/i)\r\n      const contentInput = screen.getByPlaceholderText(/card content/i)\r\n      \r\n      fireEvent.change(titleInput, { target: { value: 'Test Card' } })\r\n      fireEvent.change(contentInput, { target: { value: 'Test content' } })\r\n      \r\n      // 保存卡片\r\n      const saveButton = screen.getByText(/save/i)\r\n      fireEvent.click(saveButton)\r\n      \r\n      // 验证卡片创建成功\r\n      await waitFor(() => {\r\n        expect(screen.getByText('Test Card')).toBeInTheDocument()\r\n      })\r\n    })\r\n\r\n    it('应该支持卡片编辑流程', async () => {\r\n      render(\r\n        <TestWrapper>\r\n          <Dashboard />\r\n        </TestWrapper>\r\n      )\r\n      \r\n      // 双击卡片进行编辑\r\n      const card = screen.getByText('Test Card')\r\n      fireEvent.doubleClick(card)\r\n      \r\n      // 编辑卡片内容\r\n      const titleInput = screen.getByDisplayValue('Test Card')\r\n      fireEvent.change(titleInput, { target: { value: 'Updated Card' } })\r\n      \r\n      // 保存更改\r\n      const updateButton = screen.getByText(/update/i)\r\n      fireEvent.click(updateButton)\r\n      \r\n      // 验证卡片更新成功\r\n      await waitFor(() => {\r\n        expect(screen.getByText('Updated Card')).toBeInTheDocument()\r\n      })\r\n    })\r\n\r\n    it('应该支持卡片删除流程', async () => {\r\n      render(\r\n        <TestWrapper>\r\n          <Dashboard />\r\n        </TestWrapper>\r\n      )\r\n      \r\n      // 点击删除按钮\r\n      const deleteButton = screen.getByRole('button', { name: /delete/i })\r\n      fireEvent.click(deleteButton)\r\n      \r\n      // 确认删除\r\n      const confirmButton = screen.getByText(/confirm/i)\r\n      fireEvent.click(confirmButton)\r\n      \r\n      // 验证卡片删除成功\r\n      await waitFor(() => {\r\n        expect(screen.queryByText('Test Card')).not.toBeInTheDocument()\r\n      })\r\n    })\r\n\r\n    it('应该支持标签管理流程', async () => {\r\n      render(\r\n        <TestWrapper>\r\n          <Dashboard />\r\n        </TestWrapper>\r\n      )\r\n      \r\n      // 打开标签管理\r\n      const tagButton = screen.getByText(/tags/i)\r\n      fireEvent.click(tagButton)\r\n      \r\n      // 创建新标签\r\n      const newTagInput = screen.getByPlaceholderText(/new tag/i)\r\n      fireEvent.change(newTagInput, { target: { value: 'Important' } })\r\n      \r\n      const addButton = screen.getByText(/add tag/i)\r\n      fireEvent.click(addButton)\r\n      \r\n      // 验证标签创建成功\r\n      await waitFor(() => {\r\n        expect(screen.getByText('Important')).toBeInTheDocument()\r\n      })\r\n      \r\n      // 为卡片添加标签\r\n      const card = screen.getByText('Test Card')\r\n      fireEvent.click(card)\r\n      \r\n      const tagCheckbox = screen.getByLabelText('Important')\r\n      fireEvent.click(tagCheckbox)\r\n      \r\n      // 验证标签已添加到卡片\r\n      await waitFor(() => {\r\n        expect(screen.getByText('Important')).toBeInTheDocument()\r\n      })\r\n    })\r\n\r\n    it('应该支持文件夹管理流程', async () => {\r\n      render(\r\n        <TestWrapper>\r\n          <Dashboard />\r\n        </TestWrapper>\r\n      )\r\n      \r\n      // 打开文件夹管理\r\n      const folderButton = screen.getByText(/folders/i)\r\n      fireEvent.click(folderButton)\r\n      \r\n      // 创建新文件夹\r\n      const newFolderInput = screen.getByPlaceholderText(/folder name/i)\r\n      fireEvent.change(newFolderInput, { target: { value: 'Work' } })\r\n      \r\n      const createFolderButton = screen.getByText(/create folder/i)\r\n      fireEvent.click(createFolderButton)\r\n      \r\n      // 验证文件夹创建成功\r\n      await waitFor(() => {\r\n        expect(screen.getByText('Work')).toBeInTheDocument()\r\n      })\r\n      \r\n      // 将卡片拖拽到文件夹\r\n      const card = screen.getByText('Test Card')\r\n      const folder = screen.getByText('Work')\r\n      \r\n      fireEvent.dragStart(card)\r\n      fireEvent.drop(folder)\r\n      \r\n      // 验证卡片已移动到文件夹\r\n      await waitFor(() => {\r\n        expect(folder).toContainElement(screen.getByText('Test Card'))\r\n      })\r\n    })\r\n  })\r\n\r\n  describe('FlipCard与Grid交互', () => {\r\n    it('应该支持卡片翻转功能', async () => {\r\n      const mockCard = cardFixtures.textCard\r\n      const mockOnFlip = jest.fn()\r\n      \r\n      render(\r\n        <TestWrapper>\r\n          <FlipCard\r\n            card={mockCard}\r\n            onFlip={mockOnFlip}\r\n            onEdit={jest.fn()}\r\n            onDelete={jest.fn()}\r\n            onStyleChange={jest.fn()}\r\n          />\r\n        </TestWrapper>\r\n      )\r\n      \r\n      // 点击卡片进行翻转\r\n      const card = screen.getByRole('article')\r\n      fireEvent.click(card)\r\n      \r\n      // 验证翻转回调被调用\r\n      await waitFor(() => {\r\n        expect(mockOnFlip).toHaveBeenCalledWith(mockCard.id)\r\n      })\r\n      \r\n      // 验证卡片显示背面内容\r\n      await waitFor(() => {\r\n        expect(screen.getByText(/additional information/i)).toBeInTheDocument()\r\n      })\r\n    })\r\n\r\n    it('应该支持卡片样式切换', async () => {\r\n      const mockCard = cardFixtures.textCard\r\n      const mockOnStyleChange = jest.fn()\r\n      \r\n      render(\r\n        <TestWrapper>\r\n          <FlipCard\r\n            card={mockCard}\r\n            onFlip={jest.fn()}\r\n            onEdit={jest.fn()}\r\n            onDelete={jest.fn()}\r\n            onStyleChange={mockOnStyleChange}\r\n          />\r\n        </TestWrapper>\r\n      )\r\n      \r\n      // 打开样式选择器\r\n      const styleButton = screen.getByRole('button', { name: /style/i })\r\n      fireEvent.click(styleButton)\r\n      \r\n      // 选择新样式\r\n      const gradientOption = screen.getByText(/gradient blue/i)\r\n      fireEvent.click(gradientOption)\r\n      \r\n      // 验证样式变更回调被调用\r\n      await waitFor(() => {\r\n        expect(mockOnStyleChange).toHaveBeenCalledWith(mockCard.id, 'gradient-blue')\r\n      })\r\n    })\r\n\r\n    it('应该支持卡片拖拽功能', async () => {\r\n      const cards = [cardFixtures.textCard, cardFixtures.imageCard]\r\n      const mockOnDragEnd = jest.fn()\r\n      \r\n      render(\r\n        <TestWrapper>\r\n          <MagneticCardGrid\r\n            cards={cards}\r\n            onDragEnd={mockOnDragEnd}\r\n            onCardClick={jest.fn()}\r\n          />\r\n        </TestWrapper>\r\n      )\r\n      \r\n      // 开始拖拽卡片\r\n      const card = screen.getByText('Simple Text Card')\r\n      fireEvent.dragStart(card)\r\n      \r\n      // 模拟拖拽到新位置\r\n      const dragEvent = {\r\n        active: { id: card.id },\r\n        over: { id: cards[1].id },\r\n      }\r\n      \r\n      // 触发拖拽结束\r\n      fireEvent.dragEnd(card, dragEvent)\r\n      \r\n      // 验证拖拽回调被调用\r\n      await waitFor(() => {\r\n        expect(mockOnDragEnd).toHaveBeenCalledWith(dragEvent)\r\n      })\r\n    })\r\n  })\r\n\r\n  describe('Sidebar与主界面交互', () => {\r\n    it('应该支持通过侧边栏筛选卡片', async () => {\r\n      render(\r\n        <TestWrapper>\r\n          <DashboardSidebar />\r\n          <MagneticCardGrid\r\n            cards={[cardFixtures.textCard, cardFixtures.imageCard]}\r\n            onDragEnd={jest.fn()}\r\n            onCardClick={jest.fn()}\r\n          />\r\n        </TestWrapper>\r\n      )\r\n      \r\n      // 通过标签筛选\r\n      const tagFilter = screen.getByText('text')\r\n      fireEvent.click(tagFilter)\r\n      \r\n      // 验证筛选结果\r\n      await waitFor(() => {\r\n        expect(screen.getByText('Simple Text Card')).toBeInTheDocument()\r\n        expect(screen.queryByText('Image Card')).not.toBeInTheDocument()\r\n      })\r\n    })\r\n\r\n    it('应该支持通过文件夹筛选卡片', async () => {\r\n      const cards = [\r\n        { ...cardFixtures.textCard, folderId: 'folder-1' },\r\n        { ...cardFixtures.imageCard, folderId: 'folder-2' },\r\n      ]\r\n      \r\n      render(\r\n        <TestWrapper>\r\n          <DashboardSidebar />\r\n          <MagneticCardGrid\r\n            cards={cards}\r\n            onDragEnd={jest.fn()}\r\n            onCardClick={jest.fn()}\r\n          />\r\n        </TestWrapper>\r\n      )\r\n      \r\n      // 通过文件夹筛选\r\n      const folderFilter = screen.getByText('Folder 1')\r\n      fireEvent.click(folderFilter)\r\n      \r\n      // 验证筛选结果\r\n      await waitFor(() => {\r\n        expect(screen.getByText('Simple Text Card')).toBeInTheDocument()\r\n        expect(screen.queryByText('Image Card')).not.toBeInTheDocument()\r\n      })\r\n    })\r\n\r\n    it('应该支持搜索功能', async () => {\r\n      render(\r\n        <TestWrapper>\r\n          <DashboardSidebar />\r\n          <MagneticCardGrid\r\n            cards={[cardFixtures.textCard, cardFixtures.imageCard]}\r\n            onDragEnd={jest.fn()}\r\n            onCardClick={jest.fn()}\r\n          />\r\n        </TestWrapper>\r\n      )\r\n      \r\n      // 输入搜索关键词\r\n      const searchInput = screen.getByPlaceholderText(/search/i)\r\n      fireEvent.change(searchInput, { target: { value: 'Simple' } })\r\n      \r\n      // 验证搜索结果\r\n      await waitFor(() => {\r\n        expect(screen.getByText('Simple Text Card')).toBeInTheDocument()\r\n        expect(screen.queryByText('Image Card')).not.toBeInTheDocument()\r\n      })\r\n    })\r\n  })\r\n\r\n  describe('响应式设计交互', () => {\r\n    it('应该在移动端适配触摸操作', async () => {\r\n      // 模拟移动端设备\r\n      Object.defineProperty(window, 'innerWidth', { writable: true, configurable: true, value: 375 })\r\n      Object.defineProperty(window, 'innerHeight', { writable: true, configurable: true, value: 667 })\r\n      \r\n      render(\r\n        <TestWrapper>\r\n          <Dashboard />\r\n        </TestWrapper>\r\n      )\r\n      \r\n      // 验证移动端布局\r\n      const sidebar = screen.getByRole('complementary')\r\n      expect(sidebar).toHaveClass('mobile-optimized')\r\n      \r\n      // 测试触摸滑动\r\n      const card = screen.getByText('Test Card')\r\n      fireEvent.touchStart(card, { touches: [{ clientX: 0, clientY: 0 }] })\r\n      fireEvent.touchMove(card, { touches: [{ clientX: 100, clientY: 0 }] })\r\n      fireEvent.touchEnd(card)\r\n      \r\n      // 验证滑动响应\r\n      await waitFor(() => {\r\n        expect(card).toHaveClass('swiped')\r\n      })\r\n    })\r\n\r\n    it('应该在桌面端适配拖拽操作', async () => {\r\n      // 模拟桌面端设备\r\n      Object.defineProperty(window, 'innerWidth', { writable: true, configurable: true, value: 1920 })\r\n      Object.defineProperty(window, 'innerHeight', { writable: true, configurable: true, value: 1080 })\r\n      \r\n      render(\r\n        <TestWrapper>\r\n          <Dashboard />\r\n        </TestWrapper>\r\n      )\r\n      \r\n      // 验证桌面端布局\r\n      const sidebar = screen.getByRole('complementary')\r\n      expect(sidebar).toHaveClass('desktop-optimized')\r\n      \r\n      // 测试拖拽操作\r\n      const card = screen.getByText('Test Card')\r\n      fireEvent.dragStart(card)\r\n      \r\n      // 验证拖拽响应\r\n      await waitFor(() => {\r\n        expect(card).toHaveClass('dragging')\r\n      })\r\n    })\r\n  })\r\n\r\n  describe('键盘导航交互', () => {\r\n    it('应该支持键盘导航', async () => {\r\n      render(\r\n        <TestWrapper>\r\n          <Dashboard />\r\n        </TestWrapper>\r\n      )\r\n      \r\n      // 使用Tab键导航\r\n      const card = screen.getByText('Test Card')\r\n      \r\n      fireEvent.keyDown(card, { key: 'Tab' })\r\n      expect(card).toHaveFocus()\r\n      \r\n      // 使用空格键激活卡片\r\n      fireEvent.keyDown(card, { key: ' ' })\r\n      expect(card).toHaveClass('active')\r\n      \r\n      // 使用Enter键编辑卡片\r\n      fireEvent.keyDown(card, { key: 'Enter' })\r\n      expect(screen.getByDisplayValue('Test Card')).toBeInTheDocument()\r\n      \r\n      // 使用Delete键删除卡片\r\n      fireEvent.keyDown(card, { key: 'Delete' })\r\n      expect(screen.getByText(/confirm delete/i)).toBeInTheDocument()\r\n    })\r\n\r\n    it('应该支持快捷键操作', async () => {\r\n      render(\r\n        <TestWrapper>\r\n          <Dashboard />\r\n        </TestWrapper>\r\n      )\r\n      \r\n      // 使用Ctrl+N创建新卡片\r\n      fireEvent.keyDown(document, { key: 'n', ctrlKey: true })\r\n      expect(screen.getByPlaceholderText(/card title/i)).toBeInTheDocument()\r\n      \r\n      // 使用Ctrl+F搜索\r\n      fireEvent.keyDown(document, { key: 'f', ctrlKey: true })\r\n      expect(screen.getByPlaceholderText(/search/i)).toBeInTheDocument()\r\n      \r\n      // 使用Ctrl+T管理标签\r\n      fireEvent.keyDown(document, { key: 't', ctrlKey: true })\r\n      expect(screen.getByText(/tags/i)).toBeInTheDocument()\r\n    })\r\n  })\r\n\r\n  describe('可访问性交互', () => {\r\n    it('应该支持屏幕阅读器', async () => {\r\n      render(\r\n        <TestWrapper>\r\n          <Dashboard />\r\n        </TestWrapper>\r\n      )\r\n      \r\n      const card = screen.getByText('Test Card')\r\n      \r\n      // 验证ARIA属性\r\n      expect(card).toHaveAttribute('role', 'article')\r\n      expect(card).toHaveAttribute('aria-label', expect.stringContaining('Test Card'))\r\n      \r\n      // 验证实时区域更新\r\n      const liveRegion = screen.getByRole('status')\r\n      expect(liveRegion).toBeInTheDocument()\r\n    })\r\n\r\n    it('应该通过可访问性测试', async () => {\r\n      const { container } = render(\r\n        <TestWrapper>\r\n          <Dashboard />\r\n        </TestWrapper>\r\n      )\r\n      \r\n      const results = await axe(container)\r\n      expect(results).toHaveNoViolations()\r\n    })\r\n  })\r\n\r\n  describe('性能优化交互', () => {\r\n    it('应该优化大量卡片的渲染性能', async () => {\r\n      const cards = mockDataUtils.generateCards(100)\r\n      \r\n      const renderTime = await performanceUtils.measureRenderTime(() => {\r\n        render(\r\n          <TestWrapper>\r\n            <MagneticCardGrid\r\n              cards={cards}\r\n              onDragEnd={jest.fn()}\r\n              onCardClick={jest.fn()}\r\n            />\r\n          </TestWrapper>\r\n        )\r\n      })\r\n      \r\n      expect(renderTime).toBeLessThan(1000) // 应该在1秒内完成渲染\r\n    })\r\n\r\n    it('应该优化拖拽性能', async () => {\r\n      const cards = mockDataUtils.generateCards(50)\r\n      \r\n      render(\r\n        <TestWrapper>\r\n          <MagneticCardGrid\r\n            cards={cards}\r\n            onDragEnd={jest.fn()}\r\n            onCardClick={jest.fn()}\r\n          />\r\n        </TestWrapper>\r\n      )\r\n      \r\n      const card = screen.getByText('Card 1')\r\n      \r\n      // 测试拖拽性能\r\n      const dragStartTime = performance.now()\r\n      \r\n      // 模拟连续拖拽操作\r\n      for (let i = 0; i < 10; i++) {\r\n        fireEvent.dragStart(card)\r\n        fireEvent.dragOver(card)\r\n        fireEvent.drop(card)\r\n      }\r\n      \r\n      const dragEndTime = performance.now()\r\n      expect(dragEndTime - dragStartTime).toBeLessThan(500) // 应该在500ms内完成\r\n    })\r\n  })\r\n\r\n  describe('错误处理交互', () => {\r\n    it('应该优雅处理网络错误', async () => {\r\n      // 模拟网络错误\r\n      jest.spyOn(global, 'fetch').mockImplementationOnce(() => \r\n        Promise.reject(new Error('Network error'))\r\n      )\r\n      \r\n      render(\r\n        <TestWrapper>\r\n          <Dashboard />\r\n        </TestWrapper>\r\n      )\r\n      \r\n      // 尝试同步操作\r\n      const syncButton = screen.getByText(/sync/i)\r\n      fireEvent.click(syncButton)\r\n      \r\n      // 验证错误提示\r\n      await waitFor(() => {\r\n        expect(screen.getByText(/network error/i)).toBeInTheDocument()\r\n      })\r\n      \r\n      // 验证重试按钮\r\n      expect(screen.getByText(/retry/i)).toBeInTheDocument()\r\n    })\r\n\r\n    it('应该优雅处理数据验证错误', async () => {\r\n      render(\r\n        <TestWrapper>\r\n          <Dashboard />\r\n        </TestWrapper>\r\n      )\r\n      \r\n      // 尝试创建无效卡片\r\n      const createButton = screen.getByText(/create card/i)\r\n      fireEvent.click(createButton)\r\n      \r\n      // 不填写标题，直接保存\r\n      const saveButton = screen.getByText(/save/i)\r\n      fireEvent.click(saveButton)\r\n      \r\n      // 验证验证错误提示\r\n      await waitFor(() => {\r\n        expect(screen.getByText(/title is required/i)).toBeInTheDocument()\r\n      })\r\n    })\r\n  })\r\n})"],"version":3}