{"file":"D:\\Projects\\CardEverything\\cardall-prototype\\src\\components\\card\\rich-text-editor.tsx","mappings":"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","names":[],"sources":["D:\\Projects\\CardEverything\\cardall-prototype\\src\\components\\card\\rich-text-editor.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useState, useRef } from 'react'\nimport { useEditor, EditorContent } from '@tiptap/react'\nimport StarterKit from '@tiptap/starter-kit'\nimport Image from '@tiptap/extension-image'\nimport Placeholder from '@tiptap/extension-placeholder'\nimport TaskList from '@tiptap/extension-task-list'\nimport TaskItem from '@tiptap/extension-task-item'\nimport Link from '@tiptap/extension-link'\nimport Blockquote from '@tiptap/extension-blockquote'\nimport Code from '@tiptap/extension-code'\nimport CodeBlock from '@tiptap/extension-code-block'\nimport Strike from '@tiptap/extension-strike'\nimport { Markdown } from 'tiptap-markdown-3'\nimport { Button } from '@/components/ui/button'\nimport { ImageIcon, Check, X, Smile } from 'lucide-react'\nimport { cn } from '@/lib/utils'\nimport { EmojiPicker } from './emoji-picker'\nimport './editor-styles.css'\n\ninterface RichTextEditorProps {\n  content: string\n  placeholder?: string\n  onUpdate: (content: string) => void\n  onSave: () => void\n  onCancel: () => void\n  className?: string\n  autoFocus?: boolean\n}\n\nexport function RichTextEditor({\n  content,\n  placeholder = \"Start typing...\",\n  onUpdate,\n  onSave,\n  onCancel,\n  className,\n  autoFocus = false\n}: RichTextEditorProps) {\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false)\n  const [emojiQuery, setEmojiQuery] = useState('')\n  const [emojiPosition, setEmojiPosition] = useState<{ x: number; y: number } | null>(null)\n  const editorRef = useRef<HTMLDivElement>(null)\n\n  const editor = useEditor({\n    extensions: [\n      StarterKit.configure({\n        // 禁用默认的一些扩展，因为我们要单独配置\n        strike: false,\n        code: false,\n        blockquote: false,\n      }),\n      // Markdown 支持\n      Markdown.configure({\n        html: true, // 允许HTML输出\n        transformPastedText: true, // 自动转换粘贴的Markdown\n        transformCopiedText: false, // 复制时保持HTML格式\n      }),\n      // 任务列表支持 (复选框)\n      TaskList,\n      TaskItem.configure({\n        nested: true,\n      }),\n      // 链接支持\n      Link.configure({\n        openOnClick: false, // 在编辑模式下禁用自动打开，由我们手动处理\n        HTMLAttributes: {\n          class: 'text-blue-600 underline hover:text-blue-800 cursor-pointer',\n          target: '_blank', // 新窗口打开\n          rel: 'noopener noreferrer', // 安全性\n        },\n        protocols: ['http', 'https', 'ftp', 'mailto'], // 支持的协议\n        validate: href => /^https?:\\/\\//.test(href), // 验证链接格式\n      }),\n      // 引用块\n      Blockquote.configure({\n        HTMLAttributes: {\n          class: 'border-l-4 border-gray-300 pl-4 italic',\n        },\n      }),\n      // 行内代码\n      Code.configure({\n        HTMLAttributes: {\n          class: 'inline-code',\n        },\n      }),\n      // 代码块\n      CodeBlock.configure({\n        HTMLAttributes: {\n          class: 'code-block',\n        },\n      }),\n      // 删除线\n      Strike.configure({\n        HTMLAttributes: {\n          class: 'line-through',\n        },\n      }),\n      // 图片\n      Image.configure({\n        inline: true,\n        allowBase64: true,\n        HTMLAttributes: {\n          class: 'rounded-md max-w-full h-auto',\n        },\n      }),\n      // 占位符\n      Placeholder.configure({\n        placeholder,\n      }),\n    ],\n    content,\n    onUpdate: ({ editor }) => {\n      onUpdate(editor.getHTML())\n    },\n    editorProps: {\n      attributes: {\n        class: 'tiptap-editor text-sm leading-relaxed focus:outline-none min-h-[100px] w-full',\n      },\n      handleKeyDown: (view, event) => {\n        // 只有在行首或空白处按 \"/\" 才触发 emoji 选择器\n        if (event.key === '/' && !showEmojiPicker) {\n          const { selection } = view.state\n          const { from } = selection\n          const $pos = view.state.doc.resolve(from)\n          \n          // 检查光标前的文本，如果前面有非空白字符，则不触发emoji选择器\n          const textBefore = $pos.parent.textBetween(0, $pos.parentOffset)\n          const isAtStartOrAfterSpace = !textBefore.trim() || textBefore.endsWith(' ')\n          \n          if (isAtStartOrAfterSpace) {\n            const coords = view.coordsAtPos(from)\n            \n            setEmojiPosition({\n              x: coords.left,\n              y: coords.bottom + 5\n            })\n            setShowEmojiPicker(true)\n            setEmojiQuery('')\n            \n            // 阻止默认的 \"/\" 输入\n            event.preventDefault()\n            return true\n          }\n        }\n        \n        // 如果emoji选择器打开，处理查询输入\n        if (showEmojiPicker) {\n          if (event.key === 'Escape') {\n            setShowEmojiPicker(false)\n            setEmojiQuery('')\n            return true\n          }\n          \n          if (event.key === 'Backspace') {\n            if (emojiQuery.length > 0) {\n              setEmojiQuery(prev => prev.slice(0, -1))\n            } else {\n              setShowEmojiPicker(false)\n            }\n            return true\n          }\n          \n          // 添加字符到查询\n          if (event.key.length === 1 && !event.ctrlKey && !event.metaKey && event.key !== ' ') {\n            setEmojiQuery(prev => prev + event.key)\n            return true\n          }\n          \n          // 空格键选择第一个emoji或关闭选择器\n          if (event.key === ' ') {\n            setShowEmojiPicker(false)\n            setEmojiQuery('')\n            return true\n          }\n        }\n        \n        return false\n      },\n    },\n  })\n\n  // Handle image upload\n  const handleImageUpload = useCallback(() => {\n    const input = document.createElement('input')\n    input.type = 'file'\n    input.accept = 'image/*'\n    input.onchange = (e) => {\n      const file = (e.target as HTMLInputElement).files?.[0]\n      if (file && editor) {\n        const reader = new FileReader()\n        reader.onload = (e) => {\n          const base64 = e.target?.result as string\n          editor.chain().focus().setImage({ src: base64 }).run()\n        }\n        reader.readAsDataURL(file)\n      }\n    }\n    input.click()\n  }, [editor])\n\n  // Handle paste images\n  useEffect(() => {\n    if (!editor) return\n\n    const handlePaste = (event: ClipboardEvent) => {\n      const items = event.clipboardData?.items\n      if (!items) return\n\n      for (let i = 0; i < items.length; i++) {\n        const item = items[i]\n        if (item.type.indexOf('image') !== -1) {\n          event.preventDefault()\n          const file = item.getAsFile()\n          if (file) {\n            const reader = new FileReader()\n            reader.onload = (e) => {\n              const base64 = e.target?.result as string\n              editor.chain().focus().setImage({ src: base64 }).run()\n            }\n            reader.readAsDataURL(file)\n          }\n        }\n      }\n    }\n\n    const editorElement = editor.view.dom\n    editorElement.addEventListener('paste', handlePaste)\n    \n    return () => {\n      editorElement.removeEventListener('paste', handlePaste)\n    }\n  }, [editor])\n\n  // Handle emoji selection\n  const handleEmojiSelect = useCallback((emoji: string) => {\n    if (editor) {\n      editor.chain().focus().insertContent(emoji).run()\n    }\n    setShowEmojiPicker(false)\n    setEmojiQuery('')\n  }, [editor])\n\n  // Handle emoji picker close\n  const handleEmojiPickerClose = useCallback(() => {\n    setShowEmojiPicker(false)\n    setEmojiQuery('')\n  }, [])\n\n  // Handle keyboard shortcuts\n  useEffect(() => {\n    if (!editor) return\n\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === 'Escape') {\n        if (showEmojiPicker) {\n          setShowEmojiPicker(false)\n          setEmojiQuery('')\n        } else {\n          onCancel()\n        }\n      } else if (event.key === 'Enter' && (event.ctrlKey || event.metaKey)) {\n        onSave()\n      }\n    }\n\n    const editorElement = editor.view.dom\n    editorElement.addEventListener('keydown', handleKeyDown)\n    \n    return () => {\n      editorElement.removeEventListener('keydown', handleKeyDown)\n    }\n  }, [editor, onSave, onCancel, showEmojiPicker])\n\n  // Auto focus\n  useEffect(() => {\n    if (editor && autoFocus) {\n      editor.commands.focus()\n    }\n  }, [editor, autoFocus])\n\n  if (!editor) {\n    return null\n  }\n\n  return (\n    <div className={cn(\"relative z-20\", className)} ref={editorRef}>\n      {/* Editor Content */}\n      <div className=\"relative p-2 -m-2\">\n        <EditorContent \n          editor={editor} \n          className=\"min-h-[100px]\"\n        />\n        \n        {/* Floating Toolbar */}\n        <div className=\"absolute top-0 right-0 flex gap-1 opacity-60 hover:opacity-100 transition-opacity\">\n          <Button\n            size=\"sm\"\n            variant=\"ghost\"\n            className=\"h-6 w-6 p-0 bg-white/90 hover:bg-white shadow-sm rounded\"\n            onClick={() => setShowEmojiPicker(!showEmojiPicker)}\n            title=\"Insert Emoji (Press / to open)\"\n          >\n            <Smile className=\"h-3 w-3\" />\n          </Button>\n          <Button\n            size=\"sm\"\n            variant=\"ghost\"\n            className=\"h-6 w-6 p-0 bg-white/90 hover:bg-white shadow-sm rounded\"\n            onClick={handleImageUpload}\n            title=\"Insert Image\"\n          >\n            <ImageIcon className=\"h-3 w-3\" />\n          </Button>\n        </div>\n      </div>\n\n      {/* Emoji Picker */}\n      {showEmojiPicker && (\n        <EmojiPicker\n          onEmojiSelect={handleEmojiSelect}\n          onClose={handleEmojiPickerClose}\n          query={emojiQuery}\n          position={emojiPosition || undefined}\n        />\n      )}\n\n      {/* Action Buttons */}\n      <div className=\"flex justify-end gap-2 mt-2 pt-2 border-t border-border/30\">\n        <Button\n          size=\"sm\"\n          variant=\"ghost\"\n          onClick={onCancel}\n          className=\"h-7 px-3 text-xs\"\n        >\n          <X className=\"h-3 w-3 mr-1\" />\n          Cancel\n        </Button>\n        <Button\n          size=\"sm\"\n          onClick={onSave}\n          className=\"h-7 px-3 text-xs\"\n        >\n          <Check className=\"h-3 w-3 mr-1\" />\n          Accept\n        </Button>\n      </div>\n\n      {/* Markdown Help Tooltip - 移到右上角，避免遮挡按钮 */}\n      {editor && (\n        <div className=\"absolute top-0 right-0 text-xs text-muted-foreground bg-white/90 px-2 py-1 rounded shadow-sm opacity-0 hover:opacity-100 transition-opacity pointer-events-none z-10 max-w-xs\">\n          **bold** *italic* # heading - list {'>'} quote `code` ~~strike~~ [link](url) [] task / emoji\n        </div>\n      )}\n    </div>\n  )\n}"],"version":3}