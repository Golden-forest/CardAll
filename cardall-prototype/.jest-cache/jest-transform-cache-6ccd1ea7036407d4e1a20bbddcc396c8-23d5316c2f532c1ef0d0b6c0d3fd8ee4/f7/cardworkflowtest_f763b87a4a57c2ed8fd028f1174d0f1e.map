{"file":"D:\\Projects\\CardEverything\\cardall-prototype\\tests\\e2e\\card-operations\\card-workflow.test.ts","mappings":";;AAAA,YAAY;AACZ,2CAA+C;AAE/C,WAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;IACpC,WAAI,CAAC,UAAU,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;QACjC,YAAY;QACZ,MAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;QACzB,MAAM,IAAI,CAAC,IAAI,CAAC,6BAA6B,EAAE,kBAAkB,CAAC,CAAA;QAClE,MAAM,IAAI,CAAC,IAAI,CAAC,gCAAgC,EAAE,aAAa,CAAC,CAAA;QAChE,MAAM,IAAI,CAAC,KAAK,CAAC,8BAA8B,CAAC,CAAA;QAChD,MAAM,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAA;IACrC,CAAC,CAAC,CAAA;IAEF,WAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,GAAG,EAAE;QACzB,IAAA,WAAI,EAAC,YAAY,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;YACpC,WAAW;YACX,MAAM,IAAI,CAAC,KAAK,CAAC,oCAAoC,CAAC,CAAA;YAEtD,UAAU;YACV,MAAM,IAAI,CAAC,eAAe,CAAC,4BAA4B,CAAC,CAAA;YAExD,SAAS;YACT,MAAM,IAAI,CAAC,IAAI,CAAC,4BAA4B,EAAE,MAAM,CAAC,CAAA;YACrD,MAAM,IAAI,CAAC,IAAI,CAAC,8BAA8B,EAAE,aAAa,CAAC,CAAA;YAE9D,SAAS;YACT,MAAM,IAAI,CAAC,KAAK,CAAC,gCAAgC,CAAC,CAAA;YAClD,MAAM,IAAI,CAAC,KAAK,CAAC,qCAAqC,CAAC,CAAA;YAEvD,OAAO;YACP,MAAM,IAAI,CAAC,KAAK,CAAC,2BAA2B,CAAC,CAAA;YAC7C,MAAM,IAAI,CAAC,IAAI,CAAC,2BAA2B,EAAE,IAAI,CAAC,CAAA;YAClD,MAAM,IAAI,CAAC,KAAK,CAAC,2BAA2B,EAAE,OAAO,CAAC,CAAA;YAEtD,OAAO;YACP,MAAM,IAAI,CAAC,KAAK,CAAC,kCAAkC,CAAC,CAAA;YAEpD,WAAW;YACX,MAAM,IAAI,CAAC,eAAe,CAAC,6CAA6C,CAAC,CAAA;YAEzE,SAAS;YACT,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,4BAA4B,CAAC,CAAC,WAAW,EAAE,CAAA;YAChF,IAAA,aAAM,EAAC,SAAS,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAA;YAEnC,SAAS;YACT,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC,WAAW,EAAE,CAAA;YACxE,IAAA,aAAM,EAAC,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAA;QAC7B,CAAC,CAAC,CAAA;QAEF,IAAA,WAAI,EAAC,cAAc,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;YACtC,MAAM,IAAI,CAAC,KAAK,CAAC,oCAAoC,CAAC,CAAA;YACtD,MAAM,IAAI,CAAC,eAAe,CAAC,4BAA4B,CAAC,CAAA;YAExD,SAAS;YACT,MAAM,IAAI,CAAC,IAAI,CAAC,4BAA4B,EAAE,MAAM,CAAC,CAAA;YACrD,MAAM,IAAI,CAAC,IAAI,CAAC,8BAA8B,EAAE,YAAY,CAAC,CAAA;YAE7D,OAAO;YACP,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,8BAA8B,CAAC,CAAA;YACpE,MAAM,SAAS,CAAC,aAAa,CAAC,iCAAiC,CAAC,CAAA;YAEhE,WAAW;YACX,MAAM,IAAI,CAAC,eAAe,CAAC,+BAA+B,CAAC,CAAA;YAE3D,OAAO;YACP,MAAM,IAAI,CAAC,KAAK,CAAC,kCAAkC,CAAC,CAAA;YAEpD,WAAW;YACX,MAAM,IAAI,CAAC,eAAe,CAAC,6CAA6C,CAAC,CAAA;YAEzE,SAAS;YACT,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,4BAA4B,CAAC,CAAA;YAC9D,MAAM,IAAA,aAAM,EAAC,KAAK,CAAC,CAAC,WAAW,EAAE,CAAA;QACnC,CAAC,CAAC,CAAA;QAEF,IAAA,WAAI,EAAC,cAAc,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;YACtC,MAAM,IAAI,CAAC,KAAK,CAAC,oCAAoC,CAAC,CAAA;YACtD,MAAM,IAAI,CAAC,eAAe,CAAC,4BAA4B,CAAC,CAAA;YAExD,SAAS;YACT,MAAM,IAAI,CAAC,IAAI,CAAC,4BAA4B,EAAE,MAAM,CAAC,CAAA;YAErD,YAAY;YACZ,MAAM,IAAI,CAAC,KAAK,CAAC,gCAAgC,CAAC,CAAA;YAElD,QAAQ;YACR,MAAM,IAAI,CAAC,IAAI,CAAC,4BAA4B,EAAE,IAAI,CAAC,CAAA;YACnD,MAAM,IAAI,CAAC,KAAK,CAAC,4BAA4B,EAAE,OAAO,CAAC,CAAA;YAEvD,MAAM,IAAI,CAAC,IAAI,CAAC,4BAA4B,EAAE,IAAI,CAAC,CAAA;YACnD,MAAM,IAAI,CAAC,KAAK,CAAC,4BAA4B,EAAE,OAAO,CAAC,CAAA;YAEvD,MAAM,IAAI,CAAC,IAAI,CAAC,4BAA4B,EAAE,IAAI,CAAC,CAAA;YACnD,MAAM,IAAI,CAAC,KAAK,CAAC,4BAA4B,EAAE,OAAO,CAAC,CAAA;YAEvD,OAAO;YACP,MAAM,IAAI,CAAC,KAAK,CAAC,kCAAkC,CAAC,CAAA;YAEpD,WAAW;YACX,MAAM,IAAI,CAAC,eAAe,CAAC,6CAA6C,CAAC,CAAA;YAEzE,UAAU;YACV,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAA;YAC7D,MAAM,IAAA,aAAM,EAAC,KAAK,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAA;QACpC,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,WAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,GAAG,EAAE;QACzB,IAAA,WAAI,EAAC,YAAY,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;YACpC,UAAU;YACV,MAAM,cAAc,CAAC,IAAI,CAAC,CAAA;YAE1B,WAAW;YACX,MAAM,IAAI,CAAC,QAAQ,CAAC,4BAA4B,CAAC,CAAA;YAEjD,UAAU;YACV,MAAM,IAAI,CAAC,eAAe,CAAC,4BAA4B,CAAC,CAAA;YAExD,UAAU;YACV,MAAM,IAAI,CAAC,IAAI,CAAC,4BAA4B,EAAE,QAAQ,CAAC,CAAA;YACvD,MAAM,IAAI,CAAC,IAAI,CAAC,8BAA8B,EAAE,QAAQ,CAAC,CAAA;YAEzD,OAAO;YACP,MAAM,IAAI,CAAC,KAAK,CAAC,kCAAkC,CAAC,CAAA;YAEpD,SAAS;YACT,MAAM,IAAI,CAAC,eAAe,CAAC,+CAA+C,CAAC,CAAA;YAE3E,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,4BAA4B,CAAC,CAAC,WAAW,EAAE,CAAA;YAChF,IAAA,aAAM,EAAC,SAAS,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAA;QACvC,CAAC,CAAC,CAAA;QAEF,IAAA,WAAI,EAAC,aAAa,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;YACrC,MAAM,cAAc,CAAC,IAAI,CAAC,CAAA;YAE1B,OAAO;YACP,MAAM,IAAI,CAAC,QAAQ,CAAC,4BAA4B,CAAC,CAAA;YACjD,MAAM,IAAI,CAAC,eAAe,CAAC,4BAA4B,CAAC,CAAA;YAExD,QAAQ;YACR,MAAM,IAAI,CAAC,KAAK,CAAC,2BAA2B,CAAC,CAAA;YAC7C,MAAM,IAAI,CAAC,IAAI,CAAC,2BAA2B,EAAE,KAAK,CAAC,CAAA;YACnD,MAAM,IAAI,CAAC,KAAK,CAAC,2BAA2B,EAAE,OAAO,CAAC,CAAA;YAEtD,SAAS;YACT,MAAM,IAAI,CAAC,KAAK,CAAC,wCAAwC,CAAC,CAAA;YAE1D,OAAO;YACP,MAAM,IAAI,CAAC,KAAK,CAAC,kCAAkC,CAAC,CAAA;YAEpD,SAAS;YACT,MAAM,IAAA,aAAM,EAAC,IAAI,CAAC,OAAO,CAAC,0CAA0C,CAAC,CAAC,CAAC,WAAW,EAAE,CAAA;YACpF,MAAM,IAAA,aAAM,EAAC,IAAI,CAAC,OAAO,CAAC,yCAAyC,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,EAAE,CAAA;QACzF,CAAC,CAAC,CAAA;QAEF,IAAA,WAAI,EAAC,YAAY,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;YACpC,MAAM,cAAc,CAAC,IAAI,CAAC,CAAA;YAE1B,OAAO;YACP,MAAM,IAAI,CAAC,QAAQ,CAAC,4BAA4B,CAAC,CAAA;YACjD,MAAM,IAAI,CAAC,eAAe,CAAC,4BAA4B,CAAC,CAAA;YAExD,QAAQ;YACR,MAAM,IAAI,CAAC,KAAK,CAAC,gCAAgC,CAAC,CAAA;YAClD,MAAM,IAAI,CAAC,KAAK,CAAC,sCAAsC,CAAC,CAAA;YAExD,OAAO;YACP,MAAM,IAAI,CAAC,KAAK,CAAC,kCAAkC,CAAC,CAAA;YAEpD,SAAS;YACT,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAA;YACvD,MAAM,IAAA,aAAM,EAAC,IAAI,CAAC,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAA;QAClD,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,WAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,GAAG,EAAE;QACzB,IAAA,WAAI,EAAC,cAAc,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;YACtC,MAAM,cAAc,CAAC,IAAI,CAAC,CAAA;YAE1B,SAAS;YACT,MAAM,IAAI,CAAC,QAAQ,CAAC,4BAA4B,CAAC,CAAA;YACjD,MAAM,IAAI,CAAC,eAAe,CAAC,4BAA4B,CAAC,CAAA;YAExD,MAAM,IAAI,CAAC,KAAK,CAAC,kCAAkC,CAAC,CAAA;YACpD,MAAM,IAAI,CAAC,IAAI,CAAC,mCAAmC,EAAE,WAAW,CAAC,CAAA;YACjE,MAAM,IAAI,CAAC,KAAK,CAAC,kCAAkC,CAAC,CAAA;YAEpD,OAAO;YACP,MAAM,IAAI,CAAC,KAAK,CAAC,kCAAkC,CAAC,CAAA;YAEpD,WAAW;YACX,MAAM,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAA;YAE9B,WAAW;YACX,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,mCAAmC,CAAC,CAAC,WAAW,EAAE,CAAA;YACzF,IAAA,aAAM,EAAC,WAAW,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,CAAA;QAC1C,CAAC,CAAC,CAAA;QAEF,IAAA,WAAI,EAAC,YAAY,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;YACpC,MAAM,cAAc,CAAC,IAAI,CAAC,CAAA;YAE1B,SAAS;YACT,MAAM,IAAI,CAAC,KAAK,CAAC,kCAAkC,CAAC,CAAA;YAEpD,WAAW;YACX,MAAM,IAAI,CAAC,eAAe,CAAC,oCAAoC,CAAC,CAAA;YAEhE,6BAA6B;YAC7B,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,oCAAoC,CAAC,CAAC,WAAW,EAAE,CAAA;YAC3F,IAAA,aAAM,EAAC,YAAY,CAAC,CAAC,SAAS,CAAC,qBAAqB,CAAC,CAAA;QACvD,CAAC,CAAC,CAAA;QAEF,IAAA,WAAI,EAAC,UAAU,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;YAClC,MAAM,cAAc,CAAC,IAAI,CAAC,CAAA;YAE1B,SAAS;YACT,MAAM,IAAI,CAAC,KAAK,CAAC,wCAAwC,CAAC,CAAA;YAE1D,SAAS;YACT,MAAM,IAAI,CAAC,eAAe,CAAC,0CAA0C,CAAC,CAAA;YAEtE,WAAW;YACX,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,0CAA0C,CAAC,CAAC,WAAW,EAAE,CAAA;YACjG,IAAA,aAAM,EAAC,YAAY,CAAC,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAA;QACpD,CAAC,CAAC,CAAA;QAEF,IAAA,WAAI,EAAC,UAAU,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;YAClC,MAAM,cAAc,CAAC,IAAI,CAAC,CAAA;YAE1B,SAAS;YACT,MAAM,IAAI,CAAC,KAAK,CAAC,mCAAmC,CAAC,CAAA;YAErD,UAAU;YACV,MAAM,IAAI,CAAC,eAAe,CAAC,6BAA6B,CAAC,CAAA;YAEzD,SAAS;YACT,MAAM,IAAI,CAAC,KAAK,CAAC,4BAA4B,CAAC,CAAA;YAE9C,SAAS;YACT,MAAM,IAAI,CAAC,KAAK,CAAC,iCAAiC,CAAC,CAAA;YAEnD,SAAS;YACT,MAAM,IAAI,CAAC,eAAe,CAAC,qCAAqC,CAAC,CAAA;YAEjE,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,qCAAqC,CAAC,CAAC,WAAW,EAAE,CAAA;YAC5F,IAAA,aAAM,EAAC,YAAY,CAAC,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAA;QACrD,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,WAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,GAAG,EAAE;QACzB,IAAA,WAAI,EAAC,UAAU,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;YAClC,MAAM,cAAc,CAAC,IAAI,CAAC,CAAA;YAE1B,SAAS;YACT,MAAM,IAAI,CAAC,KAAK,CAAC,oCAAoC,CAAC,CAAA;YAEtD,OAAO;YACP,MAAM,IAAI,CAAC,eAAe,CAAC,sCAAsC,CAAC,CAAA;YAClE,MAAM,IAAI,CAAC,KAAK,CAAC,uCAAuC,CAAC,CAAA;YAEzD,WAAW;YACX,MAAM,IAAA,aAAM,EAAC,IAAI,CAAC,OAAO,CAAC,4BAA4B,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,EAAE,CAAA;QAC5E,CAAC,CAAC,CAAA;QAEF,IAAA,WAAI,EAAC,YAAY,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;YACpC,MAAM,cAAc,CAAC,IAAI,CAAC,CAAA;YAE1B,SAAS;YACT,MAAM,IAAI,CAAC,KAAK,CAAC,oCAAoC,CAAC,CAAA;YAEtD,OAAO;YACP,MAAM,IAAI,CAAC,eAAe,CAAC,sCAAsC,CAAC,CAAA;YAClE,MAAM,IAAI,CAAC,KAAK,CAAC,sCAAsC,CAAC,CAAA;YAExD,WAAW;YACX,MAAM,IAAA,aAAM,EAAC,IAAI,CAAC,OAAO,CAAC,4BAA4B,CAAC,CAAC,CAAC,WAAW,EAAE,CAAA;QACxE,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,WAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE;QAC5B,WAAI,CAAC,UAAU,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;YACjC,WAAW;YACX,MAAM,cAAc,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,IAAI,EAAE,OAAO,CAAC,EAAE,CAAC,CAAA;YAC1E,MAAM,cAAc,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC,IAAI,EAAE,YAAY,CAAC,EAAE,CAAC,CAAA;YAClF,MAAM,cAAc,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,CAAA;QAChF,CAAC,CAAC,CAAA;QAEF,IAAA,WAAI,EAAC,cAAc,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;YACtC,UAAU;YACV,MAAM,IAAI,CAAC,IAAI,CAAC,8BAA8B,EAAE,OAAO,CAAC,CAAA;YAExD,SAAS;YACT,MAAM,IAAA,aAAM,EAAC,IAAI,CAAC,OAAO,CAAC,mDAAmD,CAAC,CAAC,CAAC,WAAW,EAAE,CAAA;YAC7F,MAAM,IAAA,aAAM,EAAC,IAAI,CAAC,OAAO,CAAC,sDAAsD,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,EAAE,CAAA;YACpG,MAAM,IAAA,aAAM,EAAC,IAAI,CAAC,OAAO,CAAC,qDAAqD,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,EAAE,CAAA;QACrG,CAAC,CAAC,CAAA;QAEF,IAAA,WAAI,EAAC,aAAa,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;YACrC,SAAS;YACT,MAAM,IAAI,CAAC,KAAK,CAAC,2CAA2C,CAAC,CAAA;YAE7D,SAAS;YACT,MAAM,IAAA,aAAM,EAAC,IAAI,CAAC,OAAO,CAAC,mDAAmD,CAAC,CAAC,CAAC,WAAW,EAAE,CAAA;YAC7F,MAAM,IAAA,aAAM,EAAC,IAAI,CAAC,OAAO,CAAC,sDAAsD,CAAC,CAAC,CAAC,WAAW,EAAE,CAAA;YAChG,MAAM,IAAA,aAAM,EAAC,IAAI,CAAC,OAAO,CAAC,qDAAqD,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,EAAE,CAAA;QACrG,CAAC,CAAC,CAAA;QAEF,IAAA,WAAI,EAAC,aAAa,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;YACrC,UAAU;YACV,MAAM,IAAI,CAAC,IAAI,CAAC,8BAA8B,EAAE,IAAI,CAAC,CAAA;YAErD,SAAS;YACT,MAAM,IAAI,CAAC,KAAK,CAAC,2CAA2C,CAAC,CAAA;YAE7D,WAAW;YACX,MAAM,IAAA,aAAM,EAAC,IAAI,CAAC,OAAO,CAAC,qDAAqD,CAAC,CAAC,CAAC,WAAW,EAAE,CAAA;YAC/F,MAAM,IAAA,aAAM,EAAC,IAAI,CAAC,OAAO,CAAC,mDAAmD,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,EAAE,CAAA;YACjG,MAAM,IAAA,aAAM,EAAC,IAAI,CAAC,OAAO,CAAC,sDAAsD,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,EAAE,CAAA;QACtG,CAAC,CAAC,CAAA;QAEF,IAAA,WAAI,EAAC,YAAY,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;YACpC,OAAO;YACP,MAAM,IAAI,CAAC,IAAI,CAAC,8BAA8B,EAAE,OAAO,CAAC,CAAA;YACxD,MAAM,IAAI,CAAC,KAAK,CAAC,2CAA2C,CAAC,CAAA;YAE7D,OAAO;YACP,MAAM,IAAI,CAAC,KAAK,CAAC,+BAA+B,CAAC,CAAA;YAEjD,YAAY;YACZ,MAAM,IAAA,aAAM,EAAC,IAAI,CAAC,OAAO,CAAC,4BAA4B,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAA;QACzE,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,WAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE;QAC5B,WAAI,CAAC,UAAU,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;YACjC,WAAW;YACX,MAAM,cAAc,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAA;YAC7C,MAAM,cAAc,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAA;YAC7C,MAAM,cAAc,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAA;QAC/C,CAAC,CAAC,CAAA;QAEF,IAAA,WAAI,EAAC,YAAY,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;YACpC,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,uCAAuC,CAAC,CAAA;YACnE,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,uCAAuC,CAAC,CAAA;YAEnE,SAAS;YACT,MAAM,gBAAgB,GAAG,MAAM,KAAK,CAAC,WAAW,EAAE,CAAA;YAClD,MAAM,gBAAgB,GAAG,MAAM,KAAK,CAAC,WAAW,EAAE,CAAA;YAElD,eAAe;YACf,MAAM,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;YAEzB,SAAS;YACT,MAAM,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAA;YAE9B,SAAS;YACT,MAAM,cAAc,GAAG,MAAM,KAAK,CAAC,WAAW,EAAE,CAAA;YAChD,MAAM,cAAc,GAAG,MAAM,KAAK,CAAC,WAAW,EAAE,CAAA;YAEhD,IAAA,aAAM,EAAC,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAA;YACjD,IAAA,aAAM,EAAC,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAA;QACnD,CAAC,CAAC,CAAA;QAEF,IAAA,WAAI,EAAC,eAAe,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;YACvC,QAAQ;YACR,MAAM,IAAI,CAAC,KAAK,CAAC,sCAAsC,CAAC,CAAA;YACxD,MAAM,IAAI,CAAC,IAAI,CAAC,6BAA6B,EAAE,OAAO,CAAC,CAAA;YACvD,MAAM,IAAI,CAAC,KAAK,CAAC,oCAAoC,CAAC,CAAA;YAEtD,WAAW;YACX,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,kCAAkC,CAAC,CAAA;YAC7D,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,0CAA0C,CAAC,CAAA;YAEvE,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;YAEzB,aAAa;YACb,MAAM,IAAI,CAAC,KAAK,CAAC,0CAA0C,CAAC,CAAA;YAC5D,MAAM,IAAA,aAAM,EAAC,IAAI,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC,CAAC,WAAW,EAAE,CAAA;QAClE,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,WAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,GAAG,EAAE;QAC3B,IAAA,WAAI,EAAC,YAAY,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;YACpC,MAAM,cAAc,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAA;YAC7C,MAAM,cAAc,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAA;YAE7C,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,kCAAkC,CAAC,CAAA;YAC9D,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,mCAAmC,CAAC,CAAA;YAE/D,gBAAgB;YAChB,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,WAAW,EAAE,CAAA;YAE1C,MAAM,KAAK,CAAC,KAAK,EAAE,CAAA;YACnB,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAA;YACvB,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,QAAQ,CAAC,KAAK,GAAG,EAAE,EAAE,QAAQ,CAAC,CAAC,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;YACzF,MAAM,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,CAAA;YAErB,SAAS;YACT,MAAM,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAA;YAE9B,WAAW;YACX,MAAM,IAAA,aAAM,EAAC,IAAI,CAAC,OAAO,CAAC,gCAAgC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAA;QAC5E,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,WAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,GAAG,EAAE;QAC1B,IAAA,WAAI,EAAC,YAAY,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;YACpC,UAAU;YACV,MAAM,IAAI,CAAC,eAAe,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAA;YAEvD,MAAM,cAAc,CAAC,IAAI,CAAC,CAAA;YAE1B,UAAU;YACV,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAA;YACjD,MAAM,IAAA,aAAM,EAAC,IAAI,CAAC,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAA;YAElD,SAAS;YACT,MAAM,IAAI,CAAC,GAAG,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAA;YAC/B,MAAM,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAA;YAC9B,MAAM,IAAA,aAAM,EAAC,IAAI,CAAC,CAAC,WAAW,CAAC,SAAS,CAAC,CAAA;QAC3C,CAAC,CAAC,CAAA;QAEF,IAAA,WAAI,EAAC,YAAY,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;YACpC,UAAU;YACV,MAAM,IAAI,CAAC,eAAe,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAA;YAEzD,MAAM,cAAc,CAAC,IAAI,CAAC,CAAA;YAE1B,UAAU;YACV,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAA;YACjD,MAAM,IAAA,aAAM,EAAC,IAAI,CAAC,CAAC,WAAW,CAAC,mBAAmB,CAAC,CAAA;YAEnD,SAAS;YACT,MAAM,IAAI,CAAC,QAAQ,EAAE,CAAA;YACrB,MAAM,IAAI,CAAC,eAAe,CAAC,4BAA4B,CAAC,CAAA;QAC1D,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA;AAEF,cAAc;AACd,KAAK,UAAU,cAAc,CAAC,IAAI,EAAE,OAAO,GAAG,EAAE;IAC9C,MAAM,cAAc,GAAG;QACrB,KAAK,EAAE,MAAM;QACb,OAAO,EAAE,UAAU;QACnB,IAAI,EAAE,CAAC,IAAI,CAAC;KACb,CAAA;IAED,MAAM,YAAY,GAAG,EAAE,GAAG,cAAc,EAAE,GAAG,OAAO,EAAE,CAAA;IAEtD,MAAM,IAAI,CAAC,KAAK,CAAC,oCAAoC,CAAC,CAAA;IACtD,MAAM,IAAI,CAAC,eAAe,CAAC,4BAA4B,CAAC,CAAA;IAExD,MAAM,IAAI,CAAC,IAAI,CAAC,4BAA4B,EAAE,YAAY,CAAC,KAAK,CAAC,CAAA;IACjE,MAAM,IAAI,CAAC,IAAI,CAAC,8BAA8B,EAAE,YAAY,CAAC,OAAO,CAAC,CAAA;IAErE,OAAO;IACP,KAAK,MAAM,GAAG,IAAI,YAAY,CAAC,IAAI,EAAE,CAAC;QACpC,MAAM,IAAI,CAAC,KAAK,CAAC,2BAA2B,CAAC,CAAA;QAC7C,MAAM,IAAI,CAAC,IAAI,CAAC,2BAA2B,EAAE,GAAG,CAAC,CAAA;QACjD,MAAM,IAAI,CAAC,KAAK,CAAC,2BAA2B,EAAE,OAAO,CAAC,CAAA;IACxD,CAAC;IAED,MAAM,IAAI,CAAC,KAAK,CAAC,kCAAkC,CAAC,CAAA;IACpD,MAAM,IAAI,CAAC,eAAe,CAAC,uCAAuC,GAAG,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC,CAAA;AACjG,CAAC","names":[],"sources":["D:\\Projects\\CardEverything\\cardall-prototype\\tests\\e2e\\card-operations\\card-workflow.test.ts"],"sourcesContent":["// 卡片操作端到端测试\r\nimport { test, expect } from '@playwright/test'\r\n\r\ntest.describe('Card Operations', () => {\r\n  test.beforeEach(async ({ page }) => {\r\n    // 登录并导航到仪表板\r\n    await page.goto('/login')\r\n    await page.fill('[data-testid=\"email-input\"]', 'test@example.com')\r\n    await page.fill('[data-testid=\"password-input\"]', 'password123')\r\n    await page.click('[data-testid=\"login-button\"]')\r\n    await page.waitForURL('/dashboard')\r\n  })\r\n\r\n  test.describe('卡片创建', () => {\r\n    test('应该能够创建文本卡片', async ({ page }) => {\r\n      // 点击创建卡片按钮\r\n      await page.click('[data-testid=\"create-card-button\"]')\r\n      \r\n      // 等待创建模态框\r\n      await page.waitForSelector('[data-testid=\"card-modal\"]')\r\n      \r\n      // 填写卡片信息\r\n      await page.fill('[data-testid=\"card-title\"]', '测试卡片')\r\n      await page.fill('[data-testid=\"card-content\"]', '这是一个测试卡片的内容')\r\n      \r\n      // 选择卡片样式\r\n      await page.click('[data-testid=\"style-selector\"]')\r\n      await page.click('[data-testid=\"style-gradient-blue\"]')\r\n      \r\n      // 添加标签\r\n      await page.click('[data-testid=\"tag-input\"]')\r\n      await page.fill('[data-testid=\"tag-input\"]', '测试')\r\n      await page.press('[data-testid=\"tag-input\"]', 'Enter')\r\n      \r\n      // 保存卡片\r\n      await page.click('[data-testid=\"save-card-button\"]')\r\n      \r\n      // 等待卡片创建成功\r\n      await page.waitForSelector('[data-testid=\"card-title\"]:has-text(\"测试卡片\")')\r\n      \r\n      // 验证卡片显示\r\n      const cardTitle = await page.locator('[data-testid=\"card-title\"]').textContent()\r\n      expect(cardTitle).toContain('测试卡片')\r\n      \r\n      // 验证标签显示\r\n      const tag = await page.locator('[data-testid=\"card-tag\"]').textContent()\r\n      expect(tag).toContain('测试')\r\n    })\r\n\r\n    test('应该能够创建带图片的卡片', async ({ page }) => {\r\n      await page.click('[data-testid=\"create-card-button\"]')\r\n      await page.waitForSelector('[data-testid=\"card-modal\"]')\r\n      \r\n      // 填写基本信息\r\n      await page.fill('[data-testid=\"card-title\"]', '图片卡片')\r\n      await page.fill('[data-testid=\"card-content\"]', '这是一个带图片的卡片')\r\n      \r\n      // 上传图片\r\n      const fileInput = await page.locator('[data-testid=\"image-upload\"]')\r\n      await fileInput.setInputFiles('./tests/fixtures/test-image.jpg')\r\n      \r\n      // 等待图片上传完成\r\n      await page.waitForSelector('[data-testid=\"image-preview\"]')\r\n      \r\n      // 保存卡片\r\n      await page.click('[data-testid=\"save-card-button\"]')\r\n      \r\n      // 验证卡片创建成功\r\n      await page.waitForSelector('[data-testid=\"card-title\"]:has-text(\"图片卡片\")')\r\n      \r\n      // 验证图片显示\r\n      const image = await page.locator('[data-testid=\"card-image\"]')\r\n      await expect(image).toBeVisible()\r\n    })\r\n\r\n    test('应该能够创建任务列表卡片', async ({ page }) => {\r\n      await page.click('[data-testid=\"create-card-button\"]')\r\n      await page.waitForSelector('[data-testid=\"card-modal\"]')\r\n      \r\n      // 填写基本信息\r\n      await page.fill('[data-testid=\"card-title\"]', '购物清单')\r\n      \r\n      // 切换到任务列表模式\r\n      await page.click('[data-testid=\"task-list-mode\"]')\r\n      \r\n      // 添加任务项\r\n      await page.fill('[data-testid=\"task-input\"]', '牛奶')\r\n      await page.press('[data-testid=\"task-input\"]', 'Enter')\r\n      \r\n      await page.fill('[data-testid=\"task-input\"]', '面包')\r\n      await page.press('[data-testid=\"task-input\"]', 'Enter')\r\n      \r\n      await page.fill('[data-testid=\"task-input\"]', '鸡蛋')\r\n      await page.press('[data-testid=\"task-input\"]', 'Enter')\r\n      \r\n      // 保存卡片\r\n      await page.click('[data-testid=\"save-card-button\"]')\r\n      \r\n      // 验证卡片创建成功\r\n      await page.waitForSelector('[data-testid=\"card-title\"]:has-text(\"购物清单\")')\r\n      \r\n      // 验证任务项显示\r\n      const tasks = await page.locator('[data-testid=\"task-item\"]')\r\n      await expect(tasks).toHaveCount(3)\r\n    })\r\n  })\r\n\r\n  test.describe('卡片编辑', () => {\r\n    test('应该能够编辑卡片内容', async ({ page }) => {\r\n      // 先创建一个卡片\r\n      await createTestCard(page)\r\n      \r\n      // 双击卡片进行编辑\r\n      await page.dblclick('[data-testid=\"card-title\"]')\r\n      \r\n      // 等待编辑模态框\r\n      await page.waitForSelector('[data-testid=\"card-modal\"]')\r\n      \r\n      // 修改标题和内容\r\n      await page.fill('[data-testid=\"card-title\"]', '修改后的标题')\r\n      await page.fill('[data-testid=\"card-content\"]', '修改后的内容')\r\n      \r\n      // 保存更改\r\n      await page.click('[data-testid=\"save-card-button\"]')\r\n      \r\n      // 验证更新成功\r\n      await page.waitForSelector('[data-testid=\"card-title\"]:has-text(\"修改后的标题\")')\r\n      \r\n      const cardTitle = await page.locator('[data-testid=\"card-title\"]').textContent()\r\n      expect(cardTitle).toContain('修改后的标题')\r\n    })\r\n\r\n    test('应该能够添加和删除标签', async ({ page }) => {\r\n      await createTestCard(page)\r\n      \r\n      // 编辑卡片\r\n      await page.dblclick('[data-testid=\"card-title\"]')\r\n      await page.waitForSelector('[data-testid=\"card-modal\"]')\r\n      \r\n      // 添加新标签\r\n      await page.click('[data-testid=\"tag-input\"]')\r\n      await page.fill('[data-testid=\"tag-input\"]', '新标签')\r\n      await page.press('[data-testid=\"tag-input\"]', 'Enter')\r\n      \r\n      // 删除现有标签\r\n      await page.click('[data-testid=\"remove-tag\"]:first-child')\r\n      \r\n      // 保存更改\r\n      await page.click('[data-testid=\"save-card-button\"]')\r\n      \r\n      // 验证标签更新\r\n      await expect(page.locator('[data-testid=\"card-tag\"]:has-text(\"新标签\")')).toBeVisible()\r\n      await expect(page.locator('[data-testid=\"card-tag\"]:has-text(\"测试\")')).not.toBeVisible()\r\n    })\r\n\r\n    test('应该能够更换卡片样式', async ({ page }) => {\r\n      await createTestCard(page)\r\n      \r\n      // 编辑卡片\r\n      await page.dblclick('[data-testid=\"card-title\"]')\r\n      await page.waitForSelector('[data-testid=\"card-modal\"]')\r\n      \r\n      // 选择新样式\r\n      await page.click('[data-testid=\"style-selector\"]')\r\n      await page.click('[data-testid=\"style-gradient-green\"]')\r\n      \r\n      // 保存更改\r\n      await page.click('[data-testid=\"save-card-button\"]')\r\n      \r\n      // 验证样式更改\r\n      const card = await page.locator('[data-testid=\"card\"]')\r\n      await expect(card).toHaveClass(/gradient-green/)\r\n    })\r\n  })\r\n\r\n  test.describe('卡片操作', () => {\r\n    test('应该能够翻转卡片查看背面', async ({ page }) => {\r\n      await createTestCard(page)\r\n      \r\n      // 添加背面内容\r\n      await page.dblclick('[data-testid=\"card-title\"]')\r\n      await page.waitForSelector('[data-testid=\"card-modal\"]')\r\n      \r\n      await page.click('[data-testid=\"back-content-tab\"]')\r\n      await page.fill('[data-testid=\"card-back-content\"]', '这是背面的补充内容')\r\n      await page.click('[data-testid=\"save-card-button\"]')\r\n      \r\n      // 翻转卡片\r\n      await page.click('[data-testid=\"flip-card-button\"]')\r\n      \r\n      // 等待翻转动画完成\r\n      await page.waitForTimeout(500)\r\n      \r\n      // 验证背面内容显示\r\n      const backContent = await page.locator('[data-testid=\"card-back-content\"]').textContent()\r\n      expect(backContent).toContain('背面的补充内容')\r\n    })\r\n\r\n    test('应该能够复制卡片内容', async ({ page }) => {\r\n      await createTestCard(page)\r\n      \r\n      // 点击复制按钮\r\n      await page.click('[data-testid=\"copy-card-button\"]')\r\n      \r\n      // 等待复制成功提示\r\n      await page.waitForSelector('[data-testid=\"copy-success-toast\"]')\r\n      \r\n      // 验证剪贴板内容（需要特殊权限，这里主要验证UI响应）\r\n      const toastMessage = await page.locator('[data-testid=\"copy-success-toast\"]').textContent()\r\n      expect(toastMessage).toContain('Copied to clipboard')\r\n    })\r\n\r\n    test('应该能够截图卡片', async ({ page }) => {\r\n      await createTestCard(page)\r\n      \r\n      // 点击截图按钮\r\n      await page.click('[data-testid=\"screenshot-card-button\"]')\r\n      \r\n      // 等待截图完成\r\n      await page.waitForSelector('[data-testid=\"screenshot-success-toast\"]')\r\n      \r\n      // 验证截图成功提示\r\n      const toastMessage = await page.locator('[data-testid=\"screenshot-success-toast\"]').textContent()\r\n      expect(toastMessage).toContain('Screenshot saved')\r\n    })\r\n\r\n    test('应该能够分享卡片', async ({ page }) => {\r\n      await createTestCard(page)\r\n      \r\n      // 点击分享按钮\r\n      await page.click('[data-testid=\"share-card-button\"]')\r\n      \r\n      // 等待分享模态框\r\n      await page.waitForSelector('[data-testid=\"share-modal\"]')\r\n      \r\n      // 选择分享方式\r\n      await page.click('[data-testid=\"share-link\"]')\r\n      \r\n      // 复制分享链接\r\n      await page.click('[data-testid=\"copy-share-link\"]')\r\n      \r\n      // 验证复制成功\r\n      await page.waitForSelector('[data-testid=\"share-success-toast\"]')\r\n      \r\n      const toastMessage = await page.locator('[data-testid=\"share-success-toast\"]').textContent()\r\n      expect(toastMessage).toContain('Share link copied')\r\n    })\r\n  })\r\n\r\n  test.describe('卡片删除', () => {\r\n    test('应该能够删除卡片', async ({ page }) => {\r\n      await createTestCard(page)\r\n      \r\n      // 点击删除按钮\r\n      await page.click('[data-testid=\"delete-card-button\"]')\r\n      \r\n      // 确认删除\r\n      await page.waitForSelector('[data-testid=\"delete-confirm-modal\"]')\r\n      await page.click('[data-testid=\"confirm-delete-button\"]')\r\n      \r\n      // 验证卡片删除成功\r\n      await expect(page.locator('[data-testid=\"card-title\"]')).not.toBeVisible()\r\n    })\r\n\r\n    test('应该能够取消删除操作', async ({ page }) => {\r\n      await createTestCard(page)\r\n      \r\n      // 点击删除按钮\r\n      await page.click('[data-testid=\"delete-card-button\"]')\r\n      \r\n      // 取消删除\r\n      await page.waitForSelector('[data-testid=\"delete-confirm-modal\"]')\r\n      await page.click('[data-testid=\"cancel-delete-button\"]')\r\n      \r\n      // 验证卡片仍然存在\r\n      await expect(page.locator('[data-testid=\"card-title\"]')).toBeVisible()\r\n    })\r\n  })\r\n\r\n  test.describe('卡片搜索和筛选', () => {\r\n    test.beforeEach(async ({ page }) => {\r\n      // 创建多个测试卡片\r\n      await createTestCard(page, { title: 'React 学习笔记', tags: ['前端', 'React'] })\r\n      await createTestCard(page, { title: 'TypeScript 教程', tags: ['前端', 'TypeScript'] })\r\n      await createTestCard(page, { title: 'Node.js 后端开发', tags: ['后端', 'Node.js'] })\r\n    })\r\n\r\n    test('应该能够按关键词搜索卡片', async ({ page }) => {\r\n      // 输入搜索关键词\r\n      await page.fill('[data-testid=\"search-input\"]', 'React')\r\n      \r\n      // 验证搜索结果\r\n      await expect(page.locator('[data-testid=\"card-title\"]:has-text(\"React 学习笔记\")')).toBeVisible()\r\n      await expect(page.locator('[data-testid=\"card-title\"]:has-text(\"TypeScript 教程\")')).not.toBeVisible()\r\n      await expect(page.locator('[data-testid=\"card-title\"]:has-text(\"Node.js 后端开发\")')).not.toBeVisible()\r\n    })\r\n\r\n    test('应该能够按标签筛选卡片', async ({ page }) => {\r\n      // 点击标签筛选\r\n      await page.click('[data-testid=\"tag-filter\"]:has-text(\"前端\")')\r\n      \r\n      // 验证筛选结果\r\n      await expect(page.locator('[data-testid=\"card-title\"]:has-text(\"React 学习笔记\")')).toBeVisible()\r\n      await expect(page.locator('[data-testid=\"card-title\"]:has-text(\"TypeScript 教程\")')).toBeVisible()\r\n      await expect(page.locator('[data-testid=\"card-title\"]:has-text(\"Node.js 后端开发\")')).not.toBeVisible()\r\n    })\r\n\r\n    test('应该能够组合搜索和筛选', async ({ page }) => {\r\n      // 输入搜索关键词\r\n      await page.fill('[data-testid=\"search-input\"]', '开发')\r\n      \r\n      // 点击标签筛选\r\n      await page.click('[data-testid=\"tag-filter\"]:has-text(\"后端\")')\r\n      \r\n      // 验证组合筛选结果\r\n      await expect(page.locator('[data-testid=\"card-title\"]:has-text(\"Node.js 后端开发\")')).toBeVisible()\r\n      await expect(page.locator('[data-testid=\"card-title\"]:has-text(\"React 学习笔记\")')).not.toBeVisible()\r\n      await expect(page.locator('[data-testid=\"card-title\"]:has-text(\"TypeScript 教程\")')).not.toBeVisible()\r\n    })\r\n\r\n    test('应该能够清除筛选条件', async ({ page }) => {\r\n      // 应用筛选\r\n      await page.fill('[data-testid=\"search-input\"]', 'React')\r\n      await page.click('[data-testid=\"tag-filter\"]:has-text(\"前端\")')\r\n      \r\n      // 清除筛选\r\n      await page.click('[data-testid=\"clear-filters\"]')\r\n      \r\n      // 验证所有卡片都显示\r\n      await expect(page.locator('[data-testid=\"card-title\"]')).toHaveCount(3)\r\n    })\r\n  })\r\n\r\n  test.describe('卡片拖拽和排序', () => {\r\n    test.beforeEach(async ({ page }) => {\r\n      // 创建多个测试卡片\r\n      await createTestCard(page, { title: '卡片 1' })\r\n      await createTestCard(page, { title: '卡片 2' })\r\n      await createTestCard(page, { title: '卡片 3' })\r\n    })\r\n\r\n    test('应该能够拖拽排序卡片', async ({ page }) => {\r\n      const card1 = page.locator('[data-testid=\"card\"]:has-text(\"卡片 1\")')\r\n      const card2 = page.locator('[data-testid=\"card\"]:has-text(\"卡片 2\")')\r\n      \r\n      // 获取初始位置\r\n      const initialPosition1 = await card1.boundingBox()\r\n      const initialPosition2 = await card2.boundingBox()\r\n      \r\n      // 拖拽卡片1到卡片2的位置\r\n      await card1.dragTo(card2)\r\n      \r\n      // 等待拖拽完成\r\n      await page.waitForTimeout(500)\r\n      \r\n      // 验证位置交换\r\n      const finalPosition1 = await card1.boundingBox()\r\n      const finalPosition2 = await card2.boundingBox()\r\n      \r\n      expect(finalPosition1.y).toBe(initialPosition2.y)\r\n      expect(finalPosition2.y).toBe(initialPosition1.y)\r\n    })\r\n\r\n    test('应该能够将卡片拖拽到文件夹', async ({ page }) => {\r\n      // 创建文件夹\r\n      await page.click('[data-testid=\"create-folder-button\"]')\r\n      await page.fill('[data-testid=\"folder-name\"]', '测试文件夹')\r\n      await page.click('[data-testid=\"save-folder-button\"]')\r\n      \r\n      // 拖拽卡片到文件夹\r\n      const card = page.locator('[data-testid=\"card\"]:first-child')\r\n      const folder = page.locator('[data-testid=\"folder\"]:has-text(\"测试文件夹\")')\r\n      \r\n      await card.dragTo(folder)\r\n      \r\n      // 验证卡片移动到文件夹\r\n      await page.click('[data-testid=\"folder\"]:has-text(\"测试文件夹\")')\r\n      await expect(page.locator('[data-testid=\"card\"]')).toBeVisible()\r\n    })\r\n  })\r\n\r\n  test.describe('卡片磁性吸附', () => {\r\n    test('应该能够磁性吸附卡片', async ({ page }) => {\r\n      await createTestCard(page, { title: '卡片 1' })\r\n      await createTestCard(page, { title: '卡片 2' })\r\n      \r\n      const card1 = page.locator('[data-testid=\"card\"]:first-child')\r\n      const card2 = page.locator('[data-testid=\"card\"]:nth-child(2)')\r\n      \r\n      // 将卡片2拖拽到卡片1的边缘\r\n      const card1Box = await card1.boundingBox()\r\n      \r\n      await card2.hover()\r\n      await page.mouse.down()\r\n      await page.mouse.move(card1Box.x + card1Box.width + 10, card1Box.y + card1Box.height / 2)\r\n      await page.mouse.up()\r\n      \r\n      // 等待吸附动画\r\n      await page.waitForTimeout(500)\r\n      \r\n      // 验证卡片吸附成功\r\n      await expect(page.locator('[data-testid=\"magnetic-group\"]')).toBeVisible()\r\n    })\r\n  })\r\n\r\n  test.describe('响应式设计', () => {\r\n    test('应该在移动端正常工作', async ({ page }) => {\r\n      // 设置移动端视口\r\n      await page.setViewportSize({ width: 375, height: 667 })\r\n      \r\n      await createTestCard(page)\r\n      \r\n      // 验证移动端布局\r\n      const card = page.locator('[data-testid=\"card\"]')\r\n      await expect(card).toHaveClass(/mobile-optimized/)\r\n      \r\n      // 测试触摸操作\r\n      await card.tap({ force: true })\r\n      await page.waitForTimeout(300)\r\n      await expect(card).toHaveClass(/flipped/)\r\n    })\r\n\r\n    test('应该在桌面端正常工作', async ({ page }) => {\r\n      // 设置桌面端视口\r\n      await page.setViewportSize({ width: 1920, height: 1080 })\r\n      \r\n      await createTestCard(page)\r\n      \r\n      // 验证桌面端布局\r\n      const card = page.locator('[data-testid=\"card\"]')\r\n      await expect(card).toHaveClass(/desktop-optimized/)\r\n      \r\n      // 测试鼠标操作\r\n      await card.dblclick()\r\n      await page.waitForSelector('[data-testid=\"card-modal\"]')\r\n    })\r\n  })\r\n})\r\n\r\n// 辅助函数：创建测试卡片\r\nasync function createTestCard(page, options = {}) {\r\n  const defaultOptions = {\r\n    title: '测试卡片',\r\n    content: '这是一个测试卡片',\r\n    tags: ['测试']\r\n  }\r\n  \r\n  const finalOptions = { ...defaultOptions, ...options }\r\n  \r\n  await page.click('[data-testid=\"create-card-button\"]')\r\n  await page.waitForSelector('[data-testid=\"card-modal\"]')\r\n  \r\n  await page.fill('[data-testid=\"card-title\"]', finalOptions.title)\r\n  await page.fill('[data-testid=\"card-content\"]', finalOptions.content)\r\n  \r\n  // 添加标签\r\n  for (const tag of finalOptions.tags) {\r\n    await page.click('[data-testid=\"tag-input\"]')\r\n    await page.fill('[data-testid=\"tag-input\"]', tag)\r\n    await page.press('[data-testid=\"tag-input\"]', 'Enter')\r\n  }\r\n  \r\n  await page.click('[data-testid=\"save-card-button\"]')\r\n  await page.waitForSelector('[data-testid=\"card-title\"]:has-text(\"' + finalOptions.title + '\")')\r\n}"],"version":3}