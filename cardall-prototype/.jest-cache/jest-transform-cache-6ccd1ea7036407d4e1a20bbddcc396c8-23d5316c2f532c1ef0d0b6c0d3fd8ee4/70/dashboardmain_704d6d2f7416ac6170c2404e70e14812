d5dd9210c91ec50696e9b58e898c6225
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Dashboard = Dashboard;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = __importStar(require("react"));
const cardall_context_1 = require("@/contexts/cardall-context");
const auth_1 = require("@/services/auth");
const folder_panel_context_1 = require("@/contexts/folder-panel-context");
const optimized_masonry_grid_1 = require("../card/optimized-masonry-grid");
const dashboard_header_1 = require("./dashboard-header");
const dashboard_sidebar_1 = require("./dashboard-sidebar");
const utils_1 = require("@/lib/utils");
function Dashboard({ className }) {
    // Authentication state
    const [authState, setAuthState] = (0, react_1.useState)({
        user: null,
        session: null,
        loading: false,
        error: null
    });
    // UI state
    const [sidebarCollapsed, setSidebarCollapsed] = (0, react_1.useState)(false);
    // Context hooks
    const { cards, filter, setFilter, viewSettings, setViewSettings } = (0, cardall_context_1.useCardAllCards)();
    const { selectedFolderId, setSelectedFolderId, folders, isLoading: foldersLoading } = (0, cardall_context_1.useCardAllFolders)();
    const { tags } = (0, cardall_context_1.useCardAllTags)();
    // Listen for auth state changes
    (0, react_1.useEffect)(() => {
        const unsubscribe = auth_1.authService.onAuthStateChange(setAuthState);
        return unsubscribe;
    }, []);
    // 计算过滤后的卡片
    const filteredCards = (0, react_1.useMemo)(() => {
        let cardsToShow = cards.allCards || [];
        // 按文件夹筛选
        if (selectedFolderId) {
            cardsToShow = cardsToShow.filter(card => card.folderId === selectedFolderId);
        }
        // 按标签筛选
        if (filter.tag) {
            cardsToShow = cardsToShow.filter(card => card.frontContent.tags?.includes(filter.tag) ||
                card.backContent.tags?.includes(filter.tag));
        }
        // 按搜索词筛选
        if (filter.search) {
            const searchLower = filter.search.toLowerCase();
            cardsToShow = cardsToShow.filter(card => {
                const searchableContent = [
                    ...extractTextFromContent(card.frontContent),
                    ...extractTextFromContent(card.backContent)
                ].join(' ').toLowerCase();
                return searchableContent.includes(searchLower);
            });
        }
        // 按创建时间倒序排序
        return cardsToShow.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime());
    }, [cards.allCards, selectedFolderId, filter.tag, filter.search]);
    // 提取文本内容的辅助函数
    const extractTextFromContent = (content) => {
        if (!content)
            return [];
        const texts = [];
        if (content.type === 'doc') {
            content.content?.forEach((node) => {
                if (node.type === 'paragraph') {
                    const paragraphText = node.content?.map((textNode) => textNode.text || '').join('') || '';
                    if (paragraphText.trim()) {
                        texts.push(paragraphText);
                    }
                }
                else if (node.type === 'heading') {
                    const headingText = node.content?.map((textNode) => textNode.text || '').join('') || '';
                    if (headingText.trim()) {
                        texts.push(headingText);
                    }
                }
            });
        }
        return texts;
    };
    // 切换侧边栏
    const toggleSidebar = () => {
        setSidebarCollapsed(!sidebarCollapsed);
    };
    return ((0, jsx_runtime_1.jsx)(folder_panel_context_1.FolderPanelProvider, { children: (0, jsx_runtime_1.jsxs)("div", { className: (0, utils_1.cn)('flex flex-col h-screen bg-background', className), children: [(0, jsx_runtime_1.jsx)(dashboard_header_1.DashboardHeader, { authState: authState }), (0, jsx_runtime_1.jsxs)("div", { className: "flex flex-1 overflow-hidden", children: [(0, jsx_runtime_1.jsx)(dashboard_sidebar_1.DashboardSidebar, { collapsed: sidebarCollapsed, onToggle: toggleSidebar }), (0, jsx_runtime_1.jsx)("main", { className: "flex-1 overflow-hidden p-6", children: (0, jsx_runtime_1.jsxs)("div", { className: "max-w-7xl mx-auto h-full", children: [(foldersLoading || cards.loading) && ((0, jsx_runtime_1.jsx)("div", { className: "flex items-center justify-center h-32", children: (0, jsx_runtime_1.jsxs)("div", { className: "text-center", children: [(0, jsx_runtime_1.jsx)("div", { className: "animate-spin rounded-full h-8 w-8 border-b-2 border-primary mx-auto mb-2" }), (0, jsx_runtime_1.jsx)("p", { className: "text-sm text-muted-foreground", children: "\u52A0\u8F7D\u4E2D..." })] }) })), !foldersLoading && !cards.loading && ((0, jsx_runtime_1.jsx)(optimized_masonry_grid_1.OptimizedMasonryGrid, { cards: filteredCards, gap: viewSettings.gap || 16, enableVirtualization: filteredCards.length > 50 })), !foldersLoading && !cards.loading && filteredCards.length === 0 && ((0, jsx_runtime_1.jsxs)("div", { className: "flex flex-col items-center justify-center h-64 text-center", children: [(0, jsx_runtime_1.jsx)("div", { className: "text-6xl mb-4", children: "\uD83D\uDCDD" }), (0, jsx_runtime_1.jsx)("h3", { className: "text-lg font-semibold mb-2", children: "\u8FD8\u6CA1\u6709\u5361\u7247" }), (0, jsx_runtime_1.jsx)("p", { className: "text-muted-foreground mb-4", children: selectedFolderId || filter.tag || filter.search
                                                    ? '没有找到符合条件的卡片'
                                                    : '创建你的第一张知识卡片吧！' })] }))] }) })] })] }) }));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,