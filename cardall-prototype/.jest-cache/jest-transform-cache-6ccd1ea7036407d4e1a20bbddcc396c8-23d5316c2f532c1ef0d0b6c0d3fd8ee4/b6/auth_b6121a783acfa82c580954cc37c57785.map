{"file":"D:\\Projects\\CardEverything\\cardall-prototype\\src\\services\\auth.ts","mappings":"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","names":[],"sources":["D:\\Projects\\CardEverything\\cardall-prototype\\src\\services\\auth.ts"],"sourcesContent":["import { supabase, type User } from './supabase'\r\nimport { AuthError, Session, AuthChangeEvent } from '@supabase/supabase-js'\r\n\r\nexport interface AuthState {\r\n  user: User | null\r\n  session: Session | null\r\n  loading: boolean\r\n  error: string | null\r\n}\r\n\r\nclass AuthService {\r\n  private listeners: ((state: AuthState) => void)[] = []\r\n  private currentState: AuthState = {\r\n    user: null,\r\n    session: null,\r\n    loading: true,\r\n    error: null\r\n  }\r\n\r\n  constructor() {\r\n    this.initialize()\r\n    // 延迟设置认证服务到同步服务，避免循环依赖\r\n    setTimeout(() => {\r\n      this.setupSyncService()\r\n    }, 0)\r\n  }\r\n\r\n  // 设置统一同步服务（解决循环依赖）\r\n  private setupSyncService() {\r\n    try {\r\n      // 动态导入避免循环依赖\r\n      import('./unified-sync-service').then(({ unifiedSyncService }) => {\r\n        unifiedSyncService.setAuthService(this)\r\n      }).catch(error => {\r\n        console.warn('Failed to setup unified sync service:', error)\r\n      })\r\n    } catch (error) {\r\n      console.warn('Failed to setup unified sync service:', error)\r\n    }\r\n  }\r\n\r\n  // 初始化认证服务\r\n  private async initialize() {\r\n    try {\r\n      // 获取当前会话\r\n      const { data: { session }, error } = await supabase.auth.getSession()\r\n      \r\n      if (error) {\r\n        this.updateState({ error: error.message, loading: false })\r\n        return\r\n      }\r\n\r\n      if (session?.user) {\r\n        const user = await this.fetchUserProfile(session.user.id)\r\n        this.updateState({ \r\n          user, \r\n          session, \r\n          loading: false, \r\n          error: null \r\n        })\r\n      } else {\r\n        this.updateState({ loading: false })\r\n      }\r\n\r\n      // 监听认证状态变化\r\n      supabase.auth.onAuthStateChange(async (event: AuthChangeEvent, session: Session | null) => {\r\n        console.log('Auth state changed:', event, session?.user?.id)\r\n        \r\n        if (event === 'SIGNED_OUT') {\r\n          // 用户登出，清理同步状态但保留本地数据\r\n          try {\r\n            // 动态获取同步服务\r\n            const { unifiedSyncService } = await import('./unified-sync-service')\r\n            await unifiedSyncService.clearHistory()\r\n          } catch (error) {\r\n            console.warn('Failed to clear sync history on signout:', error)\r\n          }\r\n          \r\n          this.updateState({ \r\n            user: null, \r\n            session: null, \r\n            loading: false, \r\n            error: null \r\n          })\r\n        } else if (session?.user) {\r\n          const user = await this.fetchUserProfile(session.user.id)\r\n          this.updateState({ \r\n            user, \r\n            session, \r\n            loading: false, \r\n            error: null \r\n          })\r\n          \r\n          // 触发完整同步\r\n          if (event === 'SIGNED_IN') {\r\n            try {\r\n              const { unifiedSyncService } = await import('./unified-sync-service')\r\n              await unifiedSyncService.performFullSync()\r\n            } catch (error) {\r\n              console.warn('Failed to perform full sync after signin:', error)\r\n            }\r\n          }\r\n        } else {\r\n          this.updateState({ \r\n            user: null, \r\n            session: null, \r\n            loading: false, \r\n            error: null \r\n          })\r\n        }\r\n      })\r\n    } catch (error) {\r\n      console.error('Auth initialization failed:', error)\r\n      this.updateState({ \r\n        error: error instanceof Error ? error.message : 'Authentication failed',\r\n        loading: false \r\n      })\r\n    }\r\n  }\r\n\r\n  // 获取用户资料\r\n  private async fetchUserProfile(userId: string): Promise<User | null> {\r\n    try {\r\n      // 等待一小段时间，让数据库触发器有时间创建用户资料\r\n      await new Promise(resolve => setTimeout(resolve, 100))\r\n      \r\n      const { data, error } = await supabase\r\n        .from('users')\r\n        .select('*')\r\n        .eq('id', userId)\r\n        .single()\r\n\r\n      if (error) {\r\n        console.error('Failed to fetch user profile:', error)\r\n        // 如果用户资料不存在，返回null，让触发器处理\r\n        return null\r\n      }\r\n\r\n      return data\r\n    } catch (error) {\r\n      console.error('Error fetching user profile:', error)\r\n      return null\r\n    }\r\n  }\r\n\r\n  // 更新状态并通知监听器\r\n  private updateState(updates: Partial<AuthState>) {\r\n    this.currentState = { ...this.currentState, ...updates }\r\n    this.listeners.forEach(listener => listener(this.currentState))\r\n  }\r\n\r\n  // 添加状态监听器\r\n  onAuthStateChange(callback: (state: AuthState) => void): () => void {\r\n    this.listeners.push(callback)\r\n    // 立即调用一次以获取当前状态\r\n    callback(this.currentState)\r\n    \r\n    return () => {\r\n      const index = this.listeners.indexOf(callback)\r\n      if (index > -1) {\r\n        this.listeners.splice(index, 1)\r\n      }\r\n    }\r\n  }\r\n\r\n  // 获取当前状态\r\n  getCurrentState(): AuthState {\r\n    return this.currentState\r\n  }\r\n\r\n  // 邮件注册\r\n  async signUpWithEmail(email: string, password: string, userData?: { name?: string }): Promise<{ error: AuthError | null }> {\r\n    try {\r\n      this.updateState({ loading: true, error: null })\r\n      \r\n      const { data, error } = await supabase.auth.signUp({\r\n        email,\r\n        password,\r\n        options: {\r\n          data: {\r\n            name: userData?.name || email.split('@')[0],\r\n            full_name: userData?.name || email.split('@')[0]\r\n          }\r\n        }\r\n      })\r\n\r\n      if (error) {\r\n        this.updateState({ error: error.message, loading: false })\r\n        return { error }\r\n      }\r\n\r\n      // 用户资料将由数据库触发器自动创建\r\n      // 注册成功，显示验证邮件提示\r\n      this.updateState({ loading: false, error: null })\r\n      return { error: null }\r\n    } catch (error) {\r\n      const errorMessage = error instanceof Error ? error.message : 'Registration failed'\r\n      this.updateState({ error: errorMessage, loading: false })\r\n      return { error: error as AuthError }\r\n    }\r\n  }\r\n\r\n  // 邮件登录\r\n  async signInWithEmail(email: string, password: string): Promise<{ error: AuthError | null }> {\r\n    try {\r\n      this.updateState({ loading: true, error: null })\r\n      \r\n      const { error } = await supabase.auth.signInWithPassword({\r\n        email,\r\n        password\r\n      })\r\n\r\n      if (error) {\r\n        this.updateState({ error: error.message, loading: false })\r\n        return { error }\r\n      }\r\n\r\n      return { error: null }\r\n    } catch (error) {\r\n      const errorMessage = error instanceof Error ? error.message : 'Login failed'\r\n      this.updateState({ error: errorMessage, loading: false })\r\n      return { error: error as AuthError }\r\n    }\r\n  }\r\n\r\n  // 重置密码\r\n  async resetPassword(email: string): Promise<{ error: AuthError | null }> {\r\n    try {\r\n      this.updateState({ loading: true, error: null })\r\n      \r\n      const { error } = await supabase.auth.resetPasswordForEmail(email, {\r\n        redirectTo: `${window.location.origin}/auth/reset-password`\r\n      })\r\n\r\n      if (error) {\r\n        this.updateState({ error: error.message, loading: false })\r\n        return { error }\r\n      }\r\n\r\n      this.updateState({ loading: false, error: null })\r\n      return { error: null }\r\n    } catch (error) {\r\n      const errorMessage = error instanceof Error ? error.message : 'Password reset failed'\r\n      this.updateState({ error: errorMessage, loading: false })\r\n      return { error: error as AuthError }\r\n    }\r\n  }\r\n\r\n  // GitHub OAuth登录\r\n  async signInWithGitHub(): Promise<{ error: AuthError | null }> {\r\n    try {\r\n      this.updateState({ loading: true, error: null })\r\n      \r\n      const { error } = await supabase.auth.signInWithOAuth({\r\n        provider: 'github',\r\n        options: {\r\n          redirectTo: `${window.location.origin}`\r\n        }\r\n      })\r\n\r\n      if (error) {\r\n        this.updateState({ error: error.message, loading: false })\r\n        return { error }\r\n      }\r\n\r\n      return { error: null }\r\n    } catch (error) {\r\n      const errorMessage = error instanceof Error ? error.message : 'Login failed'\r\n      this.updateState({ error: errorMessage, loading: false })\r\n      return { error: error as AuthError }\r\n    }\r\n  }\r\n\r\n  // 登出\r\n  async signOut(): Promise<{ error: AuthError | null }> {\r\n    try {\r\n      this.updateState({ loading: true, error: null })\r\n      \r\n      const { error } = await supabase.auth.signOut()\r\n      \r\n      if (error) {\r\n        this.updateState({ error: error.message, loading: false })\r\n        return { error }\r\n      }\r\n\r\n      this.updateState({ \r\n        user: null, \r\n        session: null, \r\n        loading: false, \r\n        error: null \r\n      })\r\n      \r\n      return { error: null }\r\n    } catch (error) {\r\n      const errorMessage = error instanceof Error ? error.message : 'Logout failed'\r\n      this.updateState({ error: errorMessage, loading: false })\r\n      return { error: error as AuthError }\r\n    }\r\n  }\r\n\r\n  // 创建或更新用户资料\r\n  async upsertUserProfile(userData: {\r\n    github_id?: string\r\n    email: string\r\n    username: string\r\n    avatar_url?: string\r\n  }): Promise<User | null> {\r\n    try {\r\n      if (!this.currentState.session?.user.id) {\r\n        console.error('No authenticated user found')\r\n        return null\r\n      }\r\n\r\n      const { data, error } = await supabase\r\n        .from('users')\r\n        .upsert({\r\n          id: this.currentState.session.user.id,\r\n          ...userData,\r\n          updated_at: new Date().toISOString()\r\n        })\r\n        .select()\r\n        .single()\r\n\r\n      if (error) {\r\n        console.error('Failed to upsert user profile:', error)\r\n        return null\r\n      }\r\n\r\n      return data\r\n    } catch (error) {\r\n      console.error('Error upserting user profile:', error)\r\n      return null\r\n    }\r\n  }\r\n\r\n  // 检查用户是否已认证\r\n  isAuthenticated(): boolean {\r\n    return !!this.currentState.user && !!this.currentState.session\r\n  }\r\n\r\n  // 获取当前用户\r\n  getCurrentUser(): User | null {\r\n    return this.currentState.user\r\n  }\r\n\r\n  // 获取当前会话\r\n  getCurrentSession(): Session | null {\r\n    return this.currentState.session\r\n  }\r\n}\r\n\r\n// 导出单例实例\r\nexport const authService = new AuthService()"],"version":3}