{"file":"D:\\Projects\\CardEverything\\cardall-prototype\\src\\__tests__\\services\\data-migration\\index.test.ts","mappings":"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","names":[],"sources":["D:\\Projects\\CardEverything\\cardall-prototype\\src\\__tests__\\services\\data-migration\\index.test.ts"],"sourcesContent":["/**\n * 数据迁移功能测试套件入口\n */\n\n// 导入所有测试模块\nimport './DataMigrationTool.core.test'\nimport './DataMigrationTool.source-analysis.test'\nimport './DataMigrationTool.plan-execution.test'\nimport './DataMigrationTool.accuracy.test'\nimport './DataMigrationTool.backup.test'\nimport './DataMigrationTool.error-handling.test'\n\n// 测试套件描述\ndescribe('DataMigrationTool - 完整测试套件', () => {\n  test('应该导出所有必要的测试工具和模块', () => {\n    // 验证数据迁移工具可以导入\n    expect(() => require('@/services/data-migration-tool')).not.toThrow()\n\n    // 验证数据库可以导入\n    expect(() => require('@/services/database-unified')).not.toThrow()\n\n    // 验证测试工具可以导入\n    expect(() => require('./test-utils')).not.toThrow()\n  })\n\n  test('测试环境应该正确配置', () => {\n    // 验证Jest环境\n    expect(jest).toBeDefined()\n    expect(global.describe).toBeDefined()\n    expect(global.test).toBeDefined()\n    expect(global.beforeEach).toBeDefined()\n    expect(global.afterEach).toBeDefined()\n\n    // 验证浏览器API模拟\n    expect(global.localStorage).toBeDefined()\n    expect(global.crypto).toBeDefined()\n    expect(crypto.randomUUID).toBeDefined()\n    expect(typeof crypto.randomUUID).toBe('function')\n\n    // 验证fetch API\n    expect(global.fetch).toBeDefined()\n  })\n\n  test('应该能够创建测试数据', () => {\n    const { TestDataFactory } = require('./test-utils')\n\n    // 验证可以创建测试卡片\n    const testCard = TestDataFactory.createTestCard()\n    expect(testCard.id).toBeDefined()\n    expect(testCard.frontContent.title).toBeDefined()\n    expect(testCard.backContent.title).toBeDefined()\n\n    // 验证可以创建测试文件夹\n    const testFolder = TestDataFactory.createTestFolder()\n    expect(testFolder.id).toBeDefined()\n    expect(testFolder.name).toBeDefined()\n\n    // 验证可以创建测试标签\n    const testTag = TestDataFactory.createTestTag()\n    expect(testTag.id).toBeDefined()\n    expect(testTag.name).toBeDefined()\n\n    // 验证可以创建批量数据\n    const bulkData = TestDataFactory.createBulkTestData(5, 2, 3)\n    expect(bulkData.cards.length).toBe(5)\n    expect(bulkData.folders.length).toBe(2)\n    expect(bulkData.tags.length).toBe(3)\n  })\n})"],"version":3}