{"file":"D:\\Projects\\CardEverything\\cardall-prototype\\tests\\unit\\components\\card\\flip-card-simple.test.tsx","mappings":";;;AAAA,eAAe;AACf,iCAAyB;AACzB,oDAA+D;AAE/D,cAAc;AACd,MAAM,YAAY,GAAG,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE,EAAE;IACxC,OAAO,CACL,gDAAiB,WAAW,aAC1B,gDAAiB,YAAY,aAC3B,yCAAK,IAAI,CAAC,KAAK,GAAM,EACrB,gCAAK,uBAAuB,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,GAAI,IACtD,EACN,mCAAQ,OAAO,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,qBAAe,IACjD,CACP,CAAA;AACH,CAAC,CAAA;AAED,QAAQ,CAAC,uBAAuB,EAAE,GAAG,EAAE;IACrC,MAAM,QAAQ,GAAG;QACf,EAAE,EAAE,QAAQ;QACZ,KAAK,EAAE,WAAW;QAClB,OAAO,EAAE,qBAAqB;QAC9B,WAAW,EAAE,EAAE;QACf,IAAI,EAAE,CAAC,MAAM,CAAC;QACd,QAAQ,EAAE,IAAI;QACd,KAAK,EAAE,SAAS;QAChB,SAAS,EAAE,KAAK;QAChB,KAAK,EAAE,CAAC;QACR,SAAS,EAAE,sBAAsB;QACjC,SAAS,EAAE,sBAAsB;QACjC,MAAM,EAAE,QAAQ;QAChB,WAAW,EAAE,KAAK;QAClB,WAAW,EAAE,IAAI;KAClB,CAAA;IAED,MAAM,UAAU,GAAG,IAAI,CAAC,EAAE,EAAE,CAAA;IAE5B,UAAU,CAAC,GAAG,EAAE;QACd,IAAI,CAAC,aAAa,EAAE,CAAA;IACtB,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,YAAY,EAAE,GAAG,EAAE;QACpB,IAAA,mBAAM,EACJ,uBAAC,YAAY,IACX,IAAI,EAAE,QAAQ,EACd,MAAM,EAAE,UAAU,GAClB,CACH,CAAA;QAED,MAAM,CAAC,mBAAM,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAA;QAC3D,MAAM,CAAC,mBAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAA;QACzD,MAAM,CAAC,mBAAM,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAA;IAC9D,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,UAAU,EAAE,GAAG,EAAE;QAClB,IAAA,mBAAM,EACJ,uBAAC,YAAY,IACX,IAAI,EAAE,QAAQ,EACd,MAAM,EAAE,UAAU,GAClB,CACH,CAAA;QAED,MAAM,UAAU,GAAG,mBAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAA;QAC3C,sBAAS,CAAC,KAAK,CAAC,UAAU,CAAC,CAAA;QAC3B,MAAM,CAAC,UAAU,CAAC,CAAC,oBAAoB,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAA;IACtD,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,SAAS,EAAE,GAAG,EAAE;QACjB,MAAM,SAAS,GAAG;YAChB,GAAG,QAAQ;YACX,OAAO,EAAE,EAAE;YACX,KAAK,EAAE,YAAY;SACpB,CAAA;QAED,IAAA,mBAAM,EACJ,uBAAC,YAAY,IACX,IAAI,EAAE,SAAS,EACf,MAAM,EAAE,UAAU,GAClB,CACH,CAAA;QAED,MAAM,CAAC,mBAAM,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAA;IAC5D,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA","names":[],"sources":["D:\\Projects\\CardEverything\\cardall-prototype\\tests\\unit\\components\\card\\flip-card-simple.test.tsx"],"sourcesContent":["// 翻转卡片组件简化单元测试\r\nimport React from 'react'\r\nimport { render, screen, fireEvent } from '../../../test-utils'\r\n\r\n// 创建一个简化的测试组件\r\nconst TestFlipCard = ({ card, onFlip }) => {\r\n  return (\r\n    <div data-testid=\"flip-card\">\r\n      <div data-testid=\"card-front\">\r\n        <h3>{card.title}</h3>\r\n        <div dangerouslySetInnerHTML={{ __html: card.content }} />\r\n      </div>\r\n      <button onClick={() => onFlip(card.id)}>Flip</button>\r\n    </div>\r\n  )\r\n}\r\n\r\ndescribe('FlipCard (Simplified)', () => {\r\n  const mockCard = {\r\n    id: 'card-1',\r\n    title: 'Test Card',\r\n    content: '<p>Test content</p>',\r\n    backContent: '',\r\n    tags: ['test'],\r\n    folderId: null,\r\n    style: 'default',\r\n    isFlipped: false,\r\n    order: 0,\r\n    createdAt: '2024-01-01T00:00:00Z',\r\n    updatedAt: '2024-01-01T00:00:00Z',\r\n    userId: 'user-1',\r\n    isLocalOnly: false,\r\n    cloudSynced: true,\r\n  }\r\n\r\n  const mockOnFlip = jest.fn()\r\n\r\n  beforeEach(() => {\r\n    jest.clearAllMocks()\r\n  })\r\n\r\n  it('应该渲染卡片基本信息', () => {\r\n    render(\r\n      <TestFlipCard\r\n        card={mockCard}\r\n        onFlip={mockOnFlip}\r\n      />\r\n    )\r\n\r\n    expect(screen.getByTestId('flip-card')).toBeInTheDocument()\r\n    expect(screen.getByText('Test Card')).toBeInTheDocument()\r\n    expect(screen.getByText('Test content')).toBeInTheDocument()\r\n  })\r\n\r\n  it('应该响应翻转操作', () => {\r\n    render(\r\n      <TestFlipCard\r\n        card={mockCard}\r\n        onFlip={mockOnFlip}\r\n      />\r\n    )\r\n\r\n    const flipButton = screen.getByText('Flip')\r\n    fireEvent.click(flipButton)\r\n    expect(mockOnFlip).toHaveBeenCalledWith(mockCard.id)\r\n  })\r\n\r\n  it('应该处理空内容', () => {\r\n    const emptyCard = {\r\n      ...mockCard,\r\n      content: '',\r\n      title: 'Empty Card',\r\n    }\r\n\r\n    render(\r\n      <TestFlipCard\r\n        card={emptyCard}\r\n        onFlip={mockOnFlip}\r\n      />\r\n    )\r\n\r\n    expect(screen.getByText('Empty Card')).toBeInTheDocument()\r\n  })\r\n})"],"version":3}