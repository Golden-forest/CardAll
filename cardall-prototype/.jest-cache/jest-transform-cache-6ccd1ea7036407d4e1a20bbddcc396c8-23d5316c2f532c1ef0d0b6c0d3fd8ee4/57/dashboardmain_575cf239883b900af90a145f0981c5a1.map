{"file":"D:\\Projects\\CardEverything\\cardall-prototype\\src\\components\\dashboard\\dashboard-main.tsx","mappings":"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","names":[],"sources":["D:\\Projects\\CardEverything\\cardall-prototype\\src\\components\\dashboard\\dashboard-main.tsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react'\r\nimport { useCardAllCards, useCardAllFolders, useCardAllTags } from '@/contexts/cardall-context'\r\nimport { authService, type AuthState } from '@/services/auth'\r\nimport { FolderPanelProvider } from '@/contexts/folder-panel-context'\r\nimport { OptimizedMasonryGrid } from '../card/optimized-masonry-grid'\r\nimport { DashboardHeader } from './dashboard-header'\r\nimport { DashboardSidebar } from './dashboard-sidebar'\r\nimport { cn } from '@/lib/utils'\r\n\r\ninterface DashboardProps {\r\n  className?: string\r\n}\r\n\r\nexport function Dashboard({ className }: DashboardProps) {\r\n  // Authentication state\r\n  const [authState, setAuthState] = useState<AuthState>({\r\n    user: null,\r\n    session: null,\r\n    loading: false,\r\n    error: null\r\n  })\r\n\r\n  // UI state\r\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false)\r\n\r\n  // Context hooks\r\n  const { \r\n    cards, \r\n    filter, \r\n    setFilter, \r\n    viewSettings, \r\n    setViewSettings \r\n  } = useCardAllCards()\r\n  \r\n  const { \r\n    selectedFolderId, \r\n    setSelectedFolderId,\r\n    folders,\r\n    isLoading: foldersLoading\r\n  } = useCardAllFolders()\r\n  \r\n  const { tags } = useCardAllTags()\r\n\r\n  // Listen for auth state changes\r\n  useEffect(() => {\r\n    const unsubscribe = authService.onAuthStateChange(setAuthState)\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  // ËÆ°ÁÆóËøáÊª§ÂêéÁöÑÂç°Áâá\r\n  const filteredCards = useMemo(() => {\r\n    let cardsToShow = cards.allCards || []\r\n\r\n    // ÊåâÊñá‰ª∂Â§πÁ≠õÈÄâ\r\n    if (selectedFolderId) {\r\n      cardsToShow = cardsToShow.filter(card => card.folderId === selectedFolderId)\r\n    }\r\n\r\n    // ÊåâÊ†áÁ≠æÁ≠õÈÄâ\r\n    if (filter.tag) {\r\n      cardsToShow = cardsToShow.filter(card => \r\n        card.frontContent.tags?.includes(filter.tag) || \r\n        card.backContent.tags?.includes(filter.tag)\r\n      )\r\n    }\r\n\r\n    // ÊåâÊêúÁ¥¢ËØçÁ≠õÈÄâ\r\n    if (filter.search) {\r\n      const searchLower = filter.search.toLowerCase()\r\n      cardsToShow = cardsToShow.filter(card => {\r\n        const searchableContent = [\r\n          ...extractTextFromContent(card.frontContent),\r\n          ...extractTextFromContent(card.backContent)\r\n        ].join(' ').toLowerCase()\r\n        \r\n        return searchableContent.includes(searchLower)\r\n      })\r\n    }\r\n\r\n    // ÊåâÂàõÂª∫Êó∂Èó¥ÂÄíÂ∫èÊéíÂ∫è\r\n    return cardsToShow.sort((a, b) => \r\n      new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()\r\n    )\r\n  }, [cards.allCards, selectedFolderId, filter.tag, filter.search])\r\n\r\n  // ÊèêÂèñÊñáÊú¨ÂÜÖÂÆπÁöÑËæÖÂä©ÂáΩÊï∞\r\n  const extractTextFromContent = (content: any): string[] => {\r\n    if (!content) return []\r\n    \r\n    const texts: string[] = []\r\n    \r\n    if (content.type === 'doc') {\r\n      content.content?.forEach((node: any) => {\r\n        if (node.type === 'paragraph') {\r\n          const paragraphText = node.content?.map((textNode: any) => \r\n            textNode.text || ''\r\n          ).join('') || ''\r\n          if (paragraphText.trim()) {\r\n            texts.push(paragraphText)\r\n          }\r\n        } else if (node.type === 'heading') {\r\n          const headingText = node.content?.map((textNode: any) => \r\n            textNode.text || ''\r\n          ).join('') || ''\r\n          if (headingText.trim()) {\r\n            texts.push(headingText)\r\n          }\r\n        }\r\n      })\r\n    }\r\n    \r\n    return texts\r\n  }\r\n\r\n  // ÂàáÊç¢‰æßËæπÊ†è\r\n  const toggleSidebar = () => {\r\n    setSidebarCollapsed(!sidebarCollapsed)\r\n  }\r\n\r\n  return (\r\n    <FolderPanelProvider>\r\n      <div className={cn('flex flex-col h-screen bg-background', className)}>\r\n        {/* Â§¥ÈÉ® */}\r\n        <DashboardHeader authState={authState} />\r\n        \r\n        {/* ‰∏ª‰ΩìÂÜÖÂÆπ */}\r\n        <div className=\"flex flex-1 overflow-hidden\">\r\n          {/* ‰æßËæπÊ†è */}\r\n          <DashboardSidebar \r\n            collapsed={sidebarCollapsed}\r\n            onToggle={toggleSidebar}\r\n          />\r\n          \r\n          {/* ‰∏ªÂÜÖÂÆπÂå∫ */}\r\n          <main className=\"flex-1 overflow-hidden p-6\">\r\n            <div className=\"max-w-7xl mx-auto h-full\">\r\n              {/* Áä∂ÊÄÅÊåáÁ§∫Âô® */}\r\n              {(foldersLoading || cards.loading) && (\r\n                <div className=\"flex items-center justify-center h-32\">\r\n                  <div className=\"text-center\">\r\n                    <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary mx-auto mb-2\"></div>\r\n                    <p className=\"text-sm text-muted-foreground\">Âä†ËΩΩ‰∏≠...</p>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              \r\n              {/* Âç°ÁâáÁΩëÊ†º */}\r\n              {!foldersLoading && !cards.loading && (\r\n                <OptimizedMasonryGrid\r\n                  cards={filteredCards}\r\n                  gap={viewSettings.gap || 16}\r\n                  enableVirtualization={filteredCards.length > 50}\r\n                />\r\n              )}\r\n              \r\n              {/* Á©∫Áä∂ÊÄÅ */}\r\n              {!foldersLoading && !cards.loading && filteredCards.length === 0 && (\r\n                <div className=\"flex flex-col items-center justify-center h-64 text-center\">\r\n                  <div className=\"text-6xl mb-4\">üìù</div>\r\n                  <h3 className=\"text-lg font-semibold mb-2\">ËøòÊ≤°ÊúâÂç°Áâá</h3>\r\n                  <p className=\"text-muted-foreground mb-4\">\r\n                    {selectedFolderId || filter.tag || filter.search\r\n                      ? 'Ê≤°ÊúâÊâæÂà∞Á¨¶ÂêàÊù°‰ª∂ÁöÑÂç°Áâá'\r\n                      : 'ÂàõÂª∫‰Ω†ÁöÑÁ¨¨‰∏ÄÂº†Áü•ËØÜÂç°ÁâáÂêßÔºÅ'\r\n                    }\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </main>\r\n        </div>\r\n      </div>\r\n    </FolderPanelProvider>\r\n  )\r\n}"],"version":3}