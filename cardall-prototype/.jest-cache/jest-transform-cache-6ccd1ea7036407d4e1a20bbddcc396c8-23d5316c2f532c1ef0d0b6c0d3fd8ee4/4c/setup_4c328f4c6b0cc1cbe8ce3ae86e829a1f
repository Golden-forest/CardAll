a107957a8f845f603a502b0e4b3d1672
"use strict";
/**
 * 数据迁移测试环境设置
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MigrationTestHelpers = void 0;
const database_unified_1 = require("@/services/database-unified");
const data_migration_tool_1 = require("@/services/data-migration-tool");
const test_utils_1 = require("./test-utils");
Object.defineProperty(exports, "MigrationTestHelpers", { enumerable: true, get: function () { return test_utils_1.MigrationTestHelpers; } });
// 测试前全局设置
beforeAll(async () => {
    console.log('🧪 数据迁移测试环境初始化...');
    // 设置测试环境变量
    process.env.NODE_ENV = 'test';
    // 模拟必要的浏览器API
    if (!global.crypto) {
        global.crypto = {};
    }
    if (!global.crypto.randomUUID) {
        global.crypto.randomUUID = () => {
            return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {
                const r = (Math.random() * 16) | 0;
                const v = c === 'x' ? r : (r & 0x3) | 0x8;
                return v.toString(16);
            });
        };
    }
    // 模拟fetch API（用于图片处理）
    global.fetch = jest.fn();
    // 模拟fileSystemService
    jest.mock('@/services/file-system', () => ({
        fileSystemService: {
            saveImage: jest.fn().mockImplementation(async (file, cardId, folderId) => {
                return {
                    filePath: `/images/${cardId}/${file.name}`,
                    metadata: {
                        width: 100,
                        height: 100,
                        format: file.type.split('/')[1],
                        size: file.size
                    }
                };
            })
        }
    }));
    console.log('✅ 数据迁移测试环境初始化完成');
});
// 每个测试前的设置
beforeEach(async () => {
    // 清理localStorage
    test_utils_1.MigrationTestHelpers.cleanupLocalStorage();
    // 清理数据库
    try {
        await database_unified_1.db.clearAll();
    }
    catch (error) {
        console.warn('数据库清理失败:', error);
    }
    // 重置所有mock
    jest.clearAllMocks();
    data_migration_tool_1.dataMigrationTool.isMigrating = false;
    data_migration_tool_1.dataMigrationTool.currentPlan = null;
    data_migration_tool_1.dataMigrationTool.progressCallbacks.clear();
    data_migration_tool_1.dataMigrationTool.migrationQueue = [];
    data_migration_tool_1.dataMigrationTool.activeMigrations.clear();
});
// 所有测试后的清理
afterAll(async () => {
    console.log('🧪 数据迁移测试环境清理...');
    // 清理localStorage
    test_utils_1.MigrationTestHelpers.cleanupLocalStorage();
    // 清理数据库
    try {
        await database_unified_1.db.clearAll();
    }
    catch (error) {
        console.warn('数据库最终清理失败:', error);
    }
    // 重置全局mock
    jest.restoreAllMocks();
    console.log('✅ 数据迁移测试环境清理完成');
});
// 全局测试超时设置
jest.setTimeout(30000);
// 抑制控制台警告（测试期间）
beforeAll(() => {
    const originalConsoleWarn = console.warn;
    const originalConsoleError = console.error;
    console.warn = (...args) => {
        if (!args[0]?.includes?.('Failed to cleanup')) {
            originalConsoleWarn(...args);
        }
    };
    console.error = (...args) => {
        if (!args[0]?.includes?.('cleanup failed')) {
            originalConsoleError(...args);
        }
    };
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,