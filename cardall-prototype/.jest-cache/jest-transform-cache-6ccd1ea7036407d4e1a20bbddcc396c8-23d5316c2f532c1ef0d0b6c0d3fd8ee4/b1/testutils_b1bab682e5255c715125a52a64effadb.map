{"file":"D:\\Projects\\CardEverything\\cardall-prototype\\tests\\test-utils.tsx","mappings":"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","names":[],"sources":["D:\\Projects\\CardEverything\\cardall-prototype\\tests\\test-utils.tsx"],"sourcesContent":["// 测试工具函数和辅助方法\r\nimport { render, RenderOptions } from '@testing-library/react'\r\nimport { ReactElement } from 'react'\r\nimport { axe, toHaveNoViolations } from 'jest-axe'\r\n\r\n// 扩展 Jest 匹配器\r\nexpect.extend(toHaveNoViolations)\r\n\r\n// 自定义渲染器，包含默认提供者\r\nconst AllTheProviders = ({ children }: { children: React.ReactNode }) => {\r\n  // 这里可以添加默认的上下文提供者\r\n  return <>{children}</>\r\n}\r\n\r\nconst customRender = (\r\n  ui: ReactElement,\r\n  options?: Omit<RenderOptions, 'wrapper'>\r\n) => render(ui, { wrapper: AllTheProviders, ...options })\r\n\r\n// 重新导出所有 testing-library 工具\r\nexport * from '@testing-library/react'\r\nexport { customRender as render }\r\n\r\n// 测试数据生成器\r\nexport const testData = {\r\n  // 用户数据\r\n  user: {\r\n    id: 'test-user-id',\r\n    email: 'test@example.com',\r\n    name: 'Test User',\r\n    avatar: null,\r\n    created_at: '2024-01-01T00:00:00Z',\r\n    updated_at: '2024-01-01T00:00:00Z',\r\n  },\r\n\r\n  // 卡片数据\r\n  card: {\r\n    id: 'test-card-id',\r\n    title: 'Test Card',\r\n    content: '<p>Test content</p>',\r\n    backContent: '',\r\n    tags: ['test-tag'],\r\n    folderId: null,\r\n    style: 'default',\r\n    isFlipped: false,\r\n    order: 0,\r\n    createdAt: '2024-01-01T00:00:00Z',\r\n    updatedAt: '2024-01-01T00:00:00Z',\r\n    userId: 'test-user-id',\r\n    isLocalOnly: false,\r\n    cloudSynced: true,\r\n  },\r\n\r\n  // 文件夹数据\r\n  folder: {\r\n    id: 'test-folder-id',\r\n    name: 'Test Folder',\r\n    parentId: null,\r\n    userId: 'test-user-id',\r\n    order: 0,\r\n    createdAt: '2024-01-01T00:00:00Z',\r\n    updatedAt: '2024-01-01T00:00:00Z',\r\n    isLocalOnly: false,\r\n    cloudSynced: true,\r\n  },\r\n\r\n  // 标签数据\r\n  tag: {\r\n    id: 'test-tag-id',\r\n    name: 'Test Tag',\r\n    color: '#3b82f6',\r\n    userId: 'test-user-id',\r\n    count: 1,\r\n    createdAt: '2024-01-01T00:00:00Z',\r\n    updatedAt: '2024-01-01T00:00:00Z',\r\n  },\r\n\r\n  // 同步数据\r\n  syncQueue: {\r\n    id: 'test-sync-id',\r\n    operation: 'create' as const,\r\n    entityType: 'card' as const,\r\n    entityId: 'test-card-id',\r\n    data: {},\r\n    timestamp: '2024-01-01T00:00:00Z',\r\n    retryCount: 0,\r\n    status: 'pending' as const,\r\n    error: null,\r\n  },\r\n}\r\n\r\n// 模拟函数生成器\r\nexport const createMockFunction = <T extends any[], R>(\r\n  implementation?: (...args: T) => R\r\n) => {\r\n  const mockFn = jest.fn(implementation)\r\n  return mockFn as jest.MockedFunction<(...args: T) => R>\r\n}\r\n\r\n// 异步等待工具\r\nexport const waitForAsync = (ms: number = 0) => {\r\n  return new Promise(resolve => setTimeout(resolve, ms))\r\n}\r\n\r\n// 模拟事件工具\r\nexport const createMockEvent = (type: string, data: any = {}) => {\r\n  return {\r\n    type,\r\n    preventDefault: jest.fn(),\r\n    stopPropagation: jest.fn(),\r\n    currentTarget: { value: '' },\r\n    target: { value: '' },\r\n    ...data,\r\n  }\r\n}\r\n\r\n// 模拟文件对象\r\nexport const createMockFile = (name: string, type: string, size: number = 1024) => {\r\n  const file = new File(['test'], name, { type })\r\n  Object.defineProperty(file, 'size', { value: size })\r\n  return file\r\n}\r\n\r\n// 模拟图片对象\r\nexport const createMockImage = (src: string = 'test.jpg') => {\r\n  const img = new Image()\r\n  img.src = src\r\n  return img\r\n}\r\n\r\n// 模拟拖拽事件\r\nexport const createMockDragEvent = (type: string, data: any = {}) => {\r\n  return {\r\n    type,\r\n    dataTransfer: {\r\n      getData: jest.fn(),\r\n      setData: jest.fn(),\r\n      clearData: jest.fn(),\r\n      items: [],\r\n      files: [],\r\n    },\r\n    clientX: 0,\r\n    clientY: 0,\r\n    preventDefault: jest.fn(),\r\n    stopPropagation: jest.fn(),\r\n    ...data,\r\n  }\r\n}\r\n\r\n// 模拟键盘事件\r\nexport const createMockKeyboardEvent = (type: string, key: string, options: any = {}) => {\r\n  return new KeyboardEvent(type, {\r\n    key,\r\n    bubbles: true,\r\n    cancelable: true,\r\n    ...options,\r\n  })\r\n}\r\n\r\n// 模拟鼠标事件\r\nexport const createMockMouseEvent = (type: string, options: any = {}) => {\r\n  return new MouseEvent(type, {\r\n    bubbles: true,\r\n    cancelable: true,\r\n    ...options,\r\n  })\r\n}\r\n\r\n// 模拟触摸事件\r\nexport const createMockTouchEvent = (type: string, touches: any[] = [], options: any = {}) => {\r\n  return new TouchEvent(type, {\r\n    touches: touches.map(touch => ({\r\n      clientX: touch.clientX || 0,\r\n      clientY: touch.clientY || 0,\r\n      identifier: touch.identifier || 0,\r\n      ...touch,\r\n    })),\r\n    ...options,\r\n  })\r\n}\r\n\r\n// 性能测试工具\r\nexport const performanceUtils = {\r\n  // 测量渲染时间\r\n  measureRenderTime: async (callback: () => void | Promise<void>) => {\r\n    const start = performance.now()\r\n    await callback()\r\n    const end = performance.now()\r\n    return end - start\r\n  },\r\n\r\n  // 测量内存使用（简化版）\r\n  measureMemoryUsage: () => {\r\n    if ('memory' in performance) {\r\n      const memory = (performance as any).memory\r\n      return {\r\n        used: memory.usedJSHeapSize,\r\n        total: memory.totalJSHeapSize,\r\n        percentage: (memory.usedJSHeapSize / memory.totalJSHeapSize) * 100,\r\n      }\r\n    }\r\n    return { used: 0, total: 0, percentage: 0 }\r\n  },\r\n\r\n  // 测量重新渲染次数\r\n  measureReRenders: (callback: () => void) => {\r\n    let renderCount = 0\r\n    const originalRender = window.requestAnimationFrame\r\n    window.requestAnimationFrame = (callback: FrameRequestCallback) => {\r\n      renderCount++\r\n      return originalRender(callback)\r\n    }\r\n    \r\n    callback()\r\n    \r\n    window.requestAnimationFrame = originalRender\r\n    return renderCount\r\n  },\r\n}\r\n\r\n// 可访问性测试工具\r\nexport const accessibilityUtils = {\r\n  // 检查颜色对比度（简化版）\r\n  checkColorContrast: (color1: string, color2: string): number => {\r\n    // 这里应该实现真正的颜色对比度计算\r\n    // 为了测试，返回一个模拟值\r\n    return 4.5\r\n  },\r\n\r\n  // 检查键盘可访问性\r\n  checkKeyboardAccessibility: (element: HTMLElement) => {\r\n    const interactiveElements = element.querySelectorAll(\r\n      'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\r\n    )\r\n    return {\r\n      hasInteractiveElements: interactiveElements.length > 0,\r\n      interactiveCount: interactiveElements.length,\r\n      allTabbable: Array.from(interactiveElements).every(el => \r\n        el.getAttribute('tabindex') !== '-1'\r\n      ),\r\n    }\r\n  },\r\n\r\n  // 检查ARIA标签\r\n  checkAriaLabels: (element: HTMLElement) => {\r\n    const elementsNeedingLabels = element.querySelectorAll(\r\n      'button, input, select, textarea, [role=\"img\"]'\r\n    )\r\n    const elementsWithLabels = element.querySelectorAll(\r\n      '[aria-label], [aria-labelledby], [title]'\r\n    )\r\n    \r\n    return {\r\n      elementsNeedingLabels: elementsNeedingLabels.length,\r\n      elementsWithLabels: elementsWithLabels.length,\r\n      coverage: elementsWithLabels.length / elementsNeedingLabels.length,\r\n    }\r\n  },\r\n}\r\n\r\n// 数据模拟工具\r\nexport const mockDataUtils = {\r\n  // 生成测试卡片\r\n  generateTestCard: (overrides?: Partial<typeof testData.card>) => ({\r\n    ...testData.card,\r\n    ...overrides,\r\n  }),\r\n\r\n  // 生成测试文件夹\r\n  generateTestFolder: (overrides?: Partial<typeof testData.folder>) => ({\r\n    ...testData.folder,\r\n    ...overrides,\r\n  }),\r\n\r\n  // 生成测试标签\r\n  generateTestTag: (overrides?: Partial<typeof testData.tag>) => ({\r\n    ...testData.tag,\r\n    ...overrides,\r\n  }),\r\n\r\n  // 生成测试用户\r\n  generateTestUser: (overrides?: Partial<typeof testData.user>) => ({\r\n    ...testData.user,\r\n    ...overrides,\r\n  }),\r\n\r\n  // 生成测试同步队列项\r\n  generateTestSyncQueue: (overrides?: Partial<typeof testData.syncQueue>) => ({\r\n    ...testData.syncQueue,\r\n    ...overrides,\r\n  }),\r\n}\r\n\r\n// 网络模拟工具\r\nexport const networkUtils = {\r\n  // 模拟网络延迟\r\n  simulateDelay: (ms: number) => new Promise(resolve => setTimeout(resolve, ms)),\r\n\r\n  // 模拟网络错误\r\n  simulateNetworkError: () => Promise.reject(new Error('Network error')),\r\n\r\n  // 模拟离线状态\r\n  simulateOffline: () => {\r\n    Object.defineProperty(navigator, 'onLine', {\r\n      value: false,\r\n      configurable: true,\r\n    })\r\n  },\r\n\r\n  // 模拟在线状态\r\n  simulateOnline: () => {\r\n    Object.defineProperty(navigator, 'onLine', {\r\n      value: true,\r\n      configurable: true,\r\n    })\r\n  },\r\n}\r\n\r\n// 存储模拟工具\r\nexport const storageUtils = {\r\n  // 清除所有存储\r\n  clearAllStorage: () => {\r\n    localStorage.clear()\r\n    sessionStorage.clear()\r\n  },\r\n\r\n  // 模拟存储配额已满\r\n  simulateStorageQuotaExceeded: () => {\r\n    const originalSetItem = localStorage.setItem\r\n    localStorage.setItem = jest.fn(() => {\r\n      throw new DOMException('QuotaExceededError', 'QuotaExceededError')\r\n    })\r\n    \r\n    return () => {\r\n      localStorage.setItem = originalSetItem\r\n    }\r\n  },\r\n\r\n  // 获取存储使用情况（模拟）\r\n  getStorageUsage: () => {\r\n    const data = localStorage.getItem('test-data') || ''\r\n    return {\r\n      used: data.length * 2, // 简化计算\r\n      total: 5 * 1024 * 1024, // 5MB\r\n      percentage: (data.length * 2) / (5 * 1024 * 1024) * 100,\r\n    }\r\n  },\r\n}\r\n\r\n// 导出所有工具\r\nexport {\r\n  testData,\r\n  createMockFunction,\r\n  waitForAsync,\r\n  createMockEvent,\r\n  createMockFile,\r\n  createMockImage,\r\n  createMockDragEvent,\r\n  createMockKeyboardEvent,\r\n  createMockMouseEvent,\r\n  createMockTouchEvent,\r\n  performanceUtils,\r\n  accessibilityUtils,\r\n  mockDataUtils,\r\n  networkUtils,\r\n  storageUtils,\r\n}"],"version":3}