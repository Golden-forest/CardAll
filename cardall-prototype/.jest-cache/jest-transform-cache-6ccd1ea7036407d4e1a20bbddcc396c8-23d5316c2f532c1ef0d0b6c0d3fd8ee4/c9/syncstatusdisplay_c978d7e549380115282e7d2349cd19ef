70d523a1d07874e212785c348a124a34
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.SyncStatusDisplay = SyncStatusDisplay;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = __importStar(require("react"));
const card_1 = require("@/components/ui/card");
const badge_1 = require("@/components/ui/badge");
const button_1 = require("@/components/ui/button");
const progress_1 = require("@/components/ui/progress");
const scroll_area_1 = require("@/components/ui/scroll-area");
const separator_1 = require("@/components/ui/separator");
const lucide_react_1 = require("lucide-react");
const utils_1 = require("@/lib/utils");
const unified_sync_service_1 = require("@/services/core/sync/unified-sync.service");
const performance_monitor_1 = require("@/services/ui/performance-monitor");
function SyncStatusDisplay({ className, showDetails = false, compact = false }) {
    const [isOnline, setIsOnline] = (0, react_1.useState)(true);
    const [isSyncing, setIsSyncing] = (0, react_1.useState)(false);
    const [syncStatus, setSyncStatus] = (0, react_1.useState)(null);
    const [operations, setOperations] = (0, react_1.useState)([]);
    const [metrics, setMetrics] = (0, react_1.useState)({
        lastSyncTime: null,
        totalOperations: 0,
        successfulOperations: 0,
        failedOperations: 0,
        averageSyncTime: 0,
        networkLatency: 0,
        serverResponseTime: 0,
        dataTransferRate: 0
    });
    const [expanded, setExpanded] = (0, react_1.useState)(false);
    // 监听网络状态
    (0, react_1.useEffect)(() => {
        const handleOnline = () => setIsOnline(true);
        const handleOffline = () => setIsOnline(false);
        window.addEventListener('online', handleOnline);
        window.addEventListener('offline', handleOffline);
        // 初始化网络状态
        setIsOnline(navigator.onLine);
        return () => {
            window.removeEventListener('online', handleOnline);
            window.removeEventListener('offline', handleOffline);
        };
    }, []);
    // 监听同步状态
    (0, react_1.useEffect)(() => {
        const updateSyncStatus = async () => {
            try {
                const status = unified_sync_service_1.unifiedSyncService.getStatus();
                setSyncStatus(status);
                setIsSyncing(status.isSyncing);
                // 更新指标
                if (status.lastSyncTime) {
                    setMetrics(prev => ({
                        ...prev,
                        lastSyncTime: new Date(status.lastSyncTime),
                        totalOperations: status.totalSyncs || 0,
                        successfulOperations: status.successfulSyncs || 0,
                        failedOperations: status.failedSyncs || 0
                    }));
                }
                // 更新性能指标
                const perfMetrics = performance_monitor_1.performanceMonitor.getRealtimeMetrics();
                setMetrics(prev => ({
                    ...prev,
                    networkLatency: perfMetrics.networkLatency || 0
                }));
            }
            catch (error) {
                console.error('Failed to update sync status:', error);
            }
        };
        // 立即更新一次
        updateSyncStatus();
        // 每2秒更新一次状态
        const interval = setInterval(updateSyncStatus, 2000);
        // 监听同步服务事件
        const handleSyncStart = () => {
            setIsSyncing(true);
            addOperation({
                type: 'upload',
                entity: '批量同步',
                status: 'in_progress',
                progress: 0,
                startTime: new Date()
            });
        };
        const handleSyncComplete = () => {
            setIsSyncing(false);
            updateOperationStatus('completed');
            updateSyncStatus();
        };
        const handleSyncError = (error) => {
            setIsSyncing(false);
            updateOperationStatus('failed', error.message);
        };
        // 注册事件监听器
        unified_sync_service_1.unifiedSyncService.on('sync:start', handleSyncStart);
        unified_sync_service_1.unifiedSyncService.on('sync:complete', handleSyncComplete);
        unified_sync_service_1.unifiedSyncService.on('sync:error', handleSyncError);
        return () => {
            clearInterval(interval);
            unified_sync_service_1.unifiedSyncService.off('sync:start', handleSyncStart);
            unified_sync_service_1.unifiedSyncService.off('sync:complete', handleSyncComplete);
            unified_sync_service_1.unifiedSyncService.off('sync:error', handleSyncError);
        };
    }, []);
    // 添加同步操作
    const addOperation = (operation) => {
        const newOperation = {
            ...operation,
            id: `op_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`
        };
        setOperations(prev => [newOperation, ...prev.slice(0, 9)]); // 保留最近10个操作
        // 更新指标
        setMetrics(prev => ({
            ...prev,
            totalOperations: prev.totalOperations + 1
        }));
    };
    // 更新操作状态
    const updateOperationStatus = (status, error) => {
        setOperations(prev => prev.map(op => op.status === 'in_progress'
            ? {
                ...op,
                status,
                endTime: new Date(),
                error,
                progress: status === 'completed' ? 100 : op.progress
            }
            : op));
        // 更新成功/失败计数
        if (status === 'completed') {
            setMetrics(prev => ({
                ...prev,
                successfulOperations: prev.successfulOperations + 1
            }));
        }
        else if (status === 'failed') {
            setMetrics(prev => ({
                ...prev,
                failedOperations: prev.failedOperations + 1
            }));
        }
    };
    // 手动触发同步
    const handleManualSync = async () => {
        try {
            setIsSyncing(true);
            await unified_sync_service_1.unifiedSyncService.sync({
                type: 'incremental',
                direction: 'bidirectional'
            });
        }
        catch (error) {
            console.error('Manual sync failed:', error);
        }
        finally {
            setIsSyncing(false);
        }
    };
    // 获取状态颜色
    const getStatusColor = () => {
        if (!isOnline)
            return 'text-red-500';
        if (isSyncing)
            return 'text-yellow-500 animate-pulse';
        if (syncStatus?.hasConflicts)
            return 'text-orange-500';
        return 'text-green-500';
    };
    // 获取状态图标
    const getStatusIcon = () => {
        if (!isOnline)
            return (0, jsx_runtime_1.jsx)(lucide_react_1.WifiOff, { className: "h-4 w-4" });
        if (isSyncing)
            return (0, jsx_runtime_1.jsx)(lucide_react_1.RefreshCw, { className: "h-4 w-4 animate-spin" });
        if (syncStatus?.hasConflicts)
            return (0, jsx_runtime_1.jsx)(lucide_react_1.AlertTriangle, { className: "h-4 w-4" });
        return (0, jsx_runtime_1.jsx)(lucide_react_1.Wifi, { className: "h-4 w-4" });
    };
    // 获取状态文本
    const getStatusText = () => {
        if (!isOnline)
            return '离线';
        if (isSyncing)
            return '同步中...';
        if (syncStatus?.hasConflicts)
            return '需要解决冲突';
        return '已同步';
    };
    // 格式化时间
    const formatTime = (date) => {
        if (!date)
            return '从未';
        const now = new Date();
        const diff = now.getTime() - date.getTime();
        const minutes = Math.floor(diff / 60000);
        if (minutes < 1)
            return '刚刚';
        if (minutes < 60)
            return `${minutes}分钟前`;
        if (minutes < 1440)
            return `${Math.floor(minutes / 60)}小时前`;
        return `${Math.floor(minutes / 1440)}天前`;
    };
    // 计算成功率
    const successRate = metrics.totalOperations > 0
        ? (metrics.successfulOperations / metrics.totalOperations * 100).toFixed(1)
        : '0.0';
    if (compact) {
        return ((0, jsx_runtime_1.jsxs)("div", { className: (0, utils_1.cn)("flex items-center gap-2 text-sm", className), children: [(0, jsx_runtime_1.jsxs)("div", { className: (0, utils_1.cn)("flex items-center gap-1", getStatusColor()), children: [getStatusIcon(), (0, jsx_runtime_1.jsx)("span", { children: getStatusText() })] }), syncStatus?.pendingOperations > 0 && ((0, jsx_runtime_1.jsxs)(badge_1.Badge, { variant: "secondary", className: "text-xs", children: [syncStatus.pendingOperations, " \u5F85\u540C\u6B65"] })), (0, jsx_runtime_1.jsx)(button_1.Button, { variant: "ghost", size: "sm", onClick: handleManualSync, disabled: isSyncing || !isOnline, children: (0, jsx_runtime_1.jsx)(lucide_react_1.RefreshCw, { className: (0, utils_1.cn)("h-3 w-3", isSyncing && "animate-spin") }) })] }));
    }
    return ((0, jsx_runtime_1.jsxs)(card_1.Card, { className: (0, utils_1.cn)("w-full", className), children: [(0, jsx_runtime_1.jsxs)(card_1.CardHeader, { className: "pb-3", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex items-center justify-between", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex items-center gap-2", children: [(0, jsx_runtime_1.jsx)(card_1.CardTitle, { className: "text-lg", children: "\u540C\u6B65\u72B6\u6001" }), (0, jsx_runtime_1.jsxs)("div", { className: (0, utils_1.cn)("flex items-center gap-1 text-sm", getStatusColor()), children: [getStatusIcon(), (0, jsx_runtime_1.jsx)("span", { children: getStatusText() })] })] }), (0, jsx_runtime_1.jsxs)("div", { className: "flex items-center gap-2", children: [syncStatus?.pendingOperations > 0 && ((0, jsx_runtime_1.jsxs)(badge_1.Badge, { variant: "outline", children: [syncStatus.pendingOperations, " \u5F85\u540C\u6B65"] })), (0, jsx_runtime_1.jsxs)(button_1.Button, { variant: "outline", size: "sm", onClick: handleManualSync, disabled: isSyncing || !isOnline, children: [(0, jsx_runtime_1.jsx)(lucide_react_1.RefreshCw, { className: (0, utils_1.cn)("h-4 w-4 mr-2", isSyncing && "animate-spin") }), "\u7ACB\u5373\u540C\u6B65"] }), showDetails && ((0, jsx_runtime_1.jsx)(button_1.Button, { variant: "ghost", size: "sm", onClick: () => setExpanded(!expanded), children: expanded ? '收起' : '详情' }))] })] }), (0, jsx_runtime_1.jsxs)("div", { className: "grid grid-cols-2 md:grid-cols-4 gap-4 text-sm", children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("span", { className: "text-muted-foreground", children: "\u7F51\u7EDC\u72B6\u6001:" }), (0, jsx_runtime_1.jsx)("span", { className: "ml-2 font-medium", children: isOnline ? '在线' : '离线' })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("span", { className: "text-muted-foreground", children: "\u6700\u540E\u540C\u6B65:" }), (0, jsx_runtime_1.jsx)("span", { className: "ml-2 font-medium", children: formatTime(metrics.lastSyncTime) })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("span", { className: "text-muted-foreground", children: "\u6210\u529F\u7387:" }), (0, jsx_runtime_1.jsxs)("span", { className: "ml-2 font-medium", children: [successRate, "%"] })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("span", { className: "text-muted-foreground", children: "\u5EF6\u8FDF:" }), (0, jsx_runtime_1.jsxs)("span", { className: "ml-2 font-medium", children: [metrics.networkLatency, "ms"] })] })] }), isSyncing && operations.length > 0 && ((0, jsx_runtime_1.jsxs)("div", { className: "space-y-2", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex items-center justify-between text-sm", children: [(0, jsx_runtime_1.jsx)("span", { children: "\u540C\u6B65\u8FDB\u5EA6" }), (0, jsx_runtime_1.jsxs)("span", { children: [operations.find(op => op.status === 'in_progress')?.progress || 0, "%"] })] }), (0, jsx_runtime_1.jsx)(progress_1.Progress, { value: operations.find(op => op.status === 'in_progress')?.progress || 0, className: "h-2" })] }))] }), expanded && showDetails && ((0, jsx_runtime_1.jsxs)(card_1.CardContent, { className: "space-y-4", children: [(0, jsx_runtime_1.jsx)(separator_1.Separator, {}), (0, jsx_runtime_1.jsxs)("div", { className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4", children: [(0, jsx_runtime_1.jsx)(card_1.Card, { children: (0, jsx_runtime_1.jsxs)(card_1.CardContent, { className: "p-4", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex items-center gap-2 mb-2", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Database, { className: "h-4 w-4 text-blue-500" }), (0, jsx_runtime_1.jsx)("span", { className: "font-medium", children: "\u64CD\u4F5C\u7EDF\u8BA1" })] }), (0, jsx_runtime_1.jsxs)("div", { className: "space-y-1 text-sm", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex justify-between", children: [(0, jsx_runtime_1.jsx)("span", { children: "\u603B\u64CD\u4F5C\u6570:" }), (0, jsx_runtime_1.jsx)("span", { children: metrics.totalOperations })] }), (0, jsx_runtime_1.jsxs)("div", { className: "flex justify-between", children: [(0, jsx_runtime_1.jsx)("span", { children: "\u6210\u529F:" }), (0, jsx_runtime_1.jsx)("span", { className: "text-green-600", children: metrics.successfulOperations })] }), (0, jsx_runtime_1.jsxs)("div", { className: "flex justify-between", children: [(0, jsx_runtime_1.jsx)("span", { children: "\u5931\u8D25:" }), (0, jsx_runtime_1.jsx)("span", { className: "text-red-600", children: metrics.failedOperations })] })] })] }) }), (0, jsx_runtime_1.jsx)(card_1.Card, { children: (0, jsx_runtime_1.jsxs)(card_1.CardContent, { className: "p-4", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex items-center gap-2 mb-2", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Server, { className: "h-4 w-4 text-green-500" }), (0, jsx_runtime_1.jsx)("span", { className: "font-medium", children: "\u6027\u80FD\u6307\u6807" })] }), (0, jsx_runtime_1.jsxs)("div", { className: "space-y-1 text-sm", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex justify-between", children: [(0, jsx_runtime_1.jsx)("span", { children: "\u5E73\u5747\u540C\u6B65\u65F6\u95F4:" }), (0, jsx_runtime_1.jsxs)("span", { children: [metrics.averageSyncTime, "ms"] })] }), (0, jsx_runtime_1.jsxs)("div", { className: "flex justify-between", children: [(0, jsx_runtime_1.jsx)("span", { children: "\u670D\u52A1\u5668\u54CD\u5E94:" }), (0, jsx_runtime_1.jsxs)("span", { children: [metrics.serverResponseTime, "ms"] })] }), (0, jsx_runtime_1.jsxs)("div", { className: "flex justify-between", children: [(0, jsx_runtime_1.jsx)("span", { children: "\u4F20\u8F93\u901F\u7387:" }), (0, jsx_runtime_1.jsxs)("span", { children: [metrics.dataTransferRate, "KB/s"] })] })] })] }) }), (0, jsx_runtime_1.jsx)(card_1.Card, { children: (0, jsx_runtime_1.jsxs)(card_1.CardContent, { className: "p-4", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex items-center gap-2 mb-2", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Cloud, { className: "h-4 w-4 text-purple-500" }), (0, jsx_runtime_1.jsx)("span", { className: "font-medium", children: "\u540C\u6B65\u72B6\u6001" })] }), (0, jsx_runtime_1.jsxs)("div", { className: "space-y-1 text-sm", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex justify-between", children: [(0, jsx_runtime_1.jsx)("span", { children: "\u5F85\u540C\u6B65\u64CD\u4F5C:" }), (0, jsx_runtime_1.jsx)("span", { children: syncStatus?.pendingOperations || 0 })] }), (0, jsx_runtime_1.jsxs)("div", { className: "flex justify-between", children: [(0, jsx_runtime_1.jsx)("span", { children: "\u51B2\u7A81\u6570\u91CF:" }), (0, jsx_runtime_1.jsx)("span", { children: syncStatus?.conflicts?.length || 0 })] }), (0, jsx_runtime_1.jsxs)("div", { className: "flex justify-between", children: [(0, jsx_runtime_1.jsx)("span", { children: "\u540C\u6B65\u6A21\u5F0F:" }), (0, jsx_runtime_1.jsx)("span", { children: "\u81EA\u52A8" })] })] })] }) })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("h4", { className: "font-medium mb-2", children: "\u6700\u8FD1\u64CD\u4F5C" }), (0, jsx_runtime_1.jsx)(scroll_area_1.ScrollArea, { className: "h-48 border rounded-md p-2", children: (0, jsx_runtime_1.jsx)("div", { className: "space-y-2", children: operations.length === 0 ? ((0, jsx_runtime_1.jsx)("p", { className: "text-sm text-muted-foreground text-center py-4", children: "\u6682\u65E0\u64CD\u4F5C\u8BB0\u5F55" })) : (operations.map((operation) => ((0, jsx_runtime_1.jsxs)("div", { className: "flex items-center justify-between text-sm p-2 rounded border", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex items-center gap-2", children: [operation.status === 'completed' && (0, jsx_runtime_1.jsx)(lucide_react_1.CheckCircle, { className: "h-3 w-3 text-green-500" }), operation.status === 'failed' && (0, jsx_runtime_1.jsx)(lucide_react_1.XCircle, { className: "h-3 w-3 text-red-500" }), operation.status === 'in_progress' && (0, jsx_runtime_1.jsx)(lucide_react_1.Clock, { className: "h-3 w-3 text-yellow-500 animate-spin" }), operation.status === 'pending' && (0, jsx_runtime_1.jsx)(lucide_react_1.Clock, { className: "h-3 w-3 text-gray-500" }), (0, jsx_runtime_1.jsx)("span", { children: operation.entity }), (0, jsx_runtime_1.jsx)(badge_1.Badge, { variant: "outline", className: "text-xs", children: operation.type === 'upload' ? '上传' :
                                                            operation.type === 'download' ? '下载' :
                                                                operation.type === 'conflict_resolution' ? '冲突解决' : '合并' })] }), (0, jsx_runtime_1.jsxs)("div", { className: "flex items-center gap-2", children: [operation.status === 'in_progress' && ((0, jsx_runtime_1.jsx)(progress_1.Progress, { value: operation.progress, className: "w-16 h-1" })), (0, jsx_runtime_1.jsx)("span", { className: "text-xs text-muted-foreground", children: formatTime(operation.startTime) })] })] }, operation.id)))) }) })] })] }))] }));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiRDpcXFByb2plY3RzXFxDYXJkRXZlcnl0aGluZ1xcY2FyZGFsbC1wcm90b3R5cGVcXHNyY1xcY29tcG9uZW50c1xcc3luY1xcc3luYy1zdGF0dXMtZGlzcGxheS50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFzREEsOENBK2FDOztBQXJlRCwrQ0FBa0Q7QUFDbEQsK0NBQStFO0FBQy9FLGlEQUE2QztBQUM3QyxtREFBK0M7QUFDL0MsdURBQW1EO0FBQ25ELDZEQUF3RDtBQUN4RCx5REFBcUQ7QUFDckQsK0NBYXFCO0FBQ3JCLHVDQUFnQztBQUNoQyxvRkFBOEU7QUFDOUUsMkVBQXNFO0FBK0J0RSxTQUFnQixpQkFBaUIsQ0FBQyxFQUNoQyxTQUFTLEVBQ1QsV0FBVyxHQUFHLEtBQUssRUFDbkIsT0FBTyxHQUFHLEtBQUssRUFDUTtJQUN2QixNQUFNLENBQUMsUUFBUSxFQUFFLFdBQVcsQ0FBQyxHQUFHLElBQUEsZ0JBQVEsRUFBQyxJQUFJLENBQUMsQ0FBQTtJQUM5QyxNQUFNLENBQUMsU0FBUyxFQUFFLFlBQVksQ0FBQyxHQUFHLElBQUEsZ0JBQVEsRUFBQyxLQUFLLENBQUMsQ0FBQTtJQUNqRCxNQUFNLENBQUMsVUFBVSxFQUFFLGFBQWEsQ0FBQyxHQUFHLElBQUEsZ0JBQVEsRUFBTSxJQUFJLENBQUMsQ0FBQTtJQUN2RCxNQUFNLENBQUMsVUFBVSxFQUFFLGFBQWEsQ0FBQyxHQUFHLElBQUEsZ0JBQVEsRUFBa0IsRUFBRSxDQUFDLENBQUE7SUFDakUsTUFBTSxDQUFDLE9BQU8sRUFBRSxVQUFVLENBQUMsR0FBRyxJQUFBLGdCQUFRLEVBQWM7UUFDbEQsWUFBWSxFQUFFLElBQUk7UUFDbEIsZUFBZSxFQUFFLENBQUM7UUFDbEIsb0JBQW9CLEVBQUUsQ0FBQztRQUN2QixnQkFBZ0IsRUFBRSxDQUFDO1FBQ25CLGVBQWUsRUFBRSxDQUFDO1FBQ2xCLGNBQWMsRUFBRSxDQUFDO1FBQ2pCLGtCQUFrQixFQUFFLENBQUM7UUFDckIsZ0JBQWdCLEVBQUUsQ0FBQztLQUNwQixDQUFDLENBQUE7SUFDRixNQUFNLENBQUMsUUFBUSxFQUFFLFdBQVcsQ0FBQyxHQUFHLElBQUEsZ0JBQVEsRUFBQyxLQUFLLENBQUMsQ0FBQTtJQUUvQyxTQUFTO0lBQ1QsSUFBQSxpQkFBUyxFQUFDLEdBQUcsRUFBRTtRQUNiLE1BQU0sWUFBWSxHQUFHLEdBQUcsRUFBRSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQTtRQUM1QyxNQUFNLGFBQWEsR0FBRyxHQUFHLEVBQUUsQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUE7UUFFOUMsTUFBTSxDQUFDLGdCQUFnQixDQUFDLFFBQVEsRUFBRSxZQUFZLENBQUMsQ0FBQTtRQUMvQyxNQUFNLENBQUMsZ0JBQWdCLENBQUMsU0FBUyxFQUFFLGFBQWEsQ0FBQyxDQUFBO1FBRWpELFVBQVU7UUFDVixXQUFXLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFBO1FBRTdCLE9BQU8sR0FBRyxFQUFFO1lBQ1YsTUFBTSxDQUFDLG1CQUFtQixDQUFDLFFBQVEsRUFBRSxZQUFZLENBQUMsQ0FBQTtZQUNsRCxNQUFNLENBQUMsbUJBQW1CLENBQUMsU0FBUyxFQUFFLGFBQWEsQ0FBQyxDQUFBO1FBQ3RELENBQUMsQ0FBQTtJQUNILENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQTtJQUVOLFNBQVM7SUFDVCxJQUFBLGlCQUFTLEVBQUMsR0FBRyxFQUFFO1FBQ2IsTUFBTSxnQkFBZ0IsR0FBRyxLQUFLLElBQUksRUFBRTtZQUNsQyxJQUFJLENBQUM7Z0JBQ0gsTUFBTSxNQUFNLEdBQUcseUNBQWtCLENBQUMsU0FBUyxFQUFFLENBQUE7Z0JBQzdDLGFBQWEsQ0FBQyxNQUFNLENBQUMsQ0FBQTtnQkFDckIsWUFBWSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQTtnQkFFOUIsT0FBTztnQkFDUCxJQUFJLE1BQU0sQ0FBQyxZQUFZLEVBQUUsQ0FBQztvQkFDeEIsVUFBVSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQzt3QkFDbEIsR0FBRyxJQUFJO3dCQUNQLFlBQVksRUFBRSxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDO3dCQUMzQyxlQUFlLEVBQUUsTUFBTSxDQUFDLFVBQVUsSUFBSSxDQUFDO3dCQUN2QyxvQkFBb0IsRUFBRSxNQUFNLENBQUMsZUFBZSxJQUFJLENBQUM7d0JBQ2pELGdCQUFnQixFQUFFLE1BQU0sQ0FBQyxXQUFXLElBQUksQ0FBQztxQkFDMUMsQ0FBQyxDQUFDLENBQUE7Z0JBQ0wsQ0FBQztnQkFFRCxTQUFTO2dCQUNULE1BQU0sV0FBVyxHQUFHLHdDQUFrQixDQUFDLGtCQUFrQixFQUFFLENBQUE7Z0JBQzNELFVBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7b0JBQ2xCLEdBQUcsSUFBSTtvQkFDUCxjQUFjLEVBQUUsV0FBVyxDQUFDLGNBQWMsSUFBSSxDQUFDO2lCQUNoRCxDQUFDLENBQUMsQ0FBQTtZQUNMLENBQUM7WUFBQyxPQUFPLEtBQUssRUFBRSxDQUFDO2dCQUNmLE9BQU8sQ0FBQyxLQUFLLENBQUMsK0JBQStCLEVBQUUsS0FBSyxDQUFDLENBQUE7WUFDdkQsQ0FBQztRQUNILENBQUMsQ0FBQTtRQUVELFNBQVM7UUFDVCxnQkFBZ0IsRUFBRSxDQUFBO1FBRWxCLFlBQVk7UUFDWixNQUFNLFFBQVEsR0FBRyxXQUFXLENBQUMsZ0JBQWdCLEVBQUUsSUFBSSxDQUFDLENBQUE7UUFFcEQsV0FBVztRQUNYLE1BQU0sZUFBZSxHQUFHLEdBQUcsRUFBRTtZQUMzQixZQUFZLENBQUMsSUFBSSxDQUFDLENBQUE7WUFDbEIsWUFBWSxDQUFDO2dCQUNYLElBQUksRUFBRSxRQUFRO2dCQUNkLE1BQU0sRUFBRSxNQUFNO2dCQUNkLE1BQU0sRUFBRSxhQUFhO2dCQUNyQixRQUFRLEVBQUUsQ0FBQztnQkFDWCxTQUFTLEVBQUUsSUFBSSxJQUFJLEVBQUU7YUFDdEIsQ0FBQyxDQUFBO1FBQ0osQ0FBQyxDQUFBO1FBRUQsTUFBTSxrQkFBa0IsR0FBRyxHQUFHLEVBQUU7WUFDOUIsWUFBWSxDQUFDLEtBQUssQ0FBQyxDQUFBO1lBQ25CLHFCQUFxQixDQUFDLFdBQVcsQ0FBQyxDQUFBO1lBQ2xDLGdCQUFnQixFQUFFLENBQUE7UUFDcEIsQ0FBQyxDQUFBO1FBRUQsTUFBTSxlQUFlLEdBQUcsQ0FBQyxLQUFVLEVBQUUsRUFBRTtZQUNyQyxZQUFZLENBQUMsS0FBSyxDQUFDLENBQUE7WUFDbkIscUJBQXFCLENBQUMsUUFBUSxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQTtRQUNoRCxDQUFDLENBQUE7UUFFRCxVQUFVO1FBQ1YseUNBQWtCLENBQUMsRUFBRSxDQUFDLFlBQVksRUFBRSxlQUFlLENBQUMsQ0FBQTtRQUNwRCx5Q0FBa0IsQ0FBQyxFQUFFLENBQUMsZUFBZSxFQUFFLGtCQUFrQixDQUFDLENBQUE7UUFDMUQseUNBQWtCLENBQUMsRUFBRSxDQUFDLFlBQVksRUFBRSxlQUFlLENBQUMsQ0FBQTtRQUVwRCxPQUFPLEdBQUcsRUFBRTtZQUNWLGFBQWEsQ0FBQyxRQUFRLENBQUMsQ0FBQTtZQUN2Qix5Q0FBa0IsQ0FBQyxHQUFHLENBQUMsWUFBWSxFQUFFLGVBQWUsQ0FBQyxDQUFBO1lBQ3JELHlDQUFrQixDQUFDLEdBQUcsQ0FBQyxlQUFlLEVBQUUsa0JBQWtCLENBQUMsQ0FBQTtZQUMzRCx5Q0FBa0IsQ0FBQyxHQUFHLENBQUMsWUFBWSxFQUFFLGVBQWUsQ0FBQyxDQUFBO1FBQ3ZELENBQUMsQ0FBQTtJQUNILENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQTtJQUVOLFNBQVM7SUFDVCxNQUFNLFlBQVksR0FBRyxDQUFDLFNBQW9DLEVBQUUsRUFBRTtRQUM1RCxNQUFNLFlBQVksR0FBa0I7WUFDbEMsR0FBRyxTQUFTO1lBQ1osRUFBRSxFQUFFLE1BQU0sSUFBSSxDQUFDLEdBQUcsRUFBRSxJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRTtTQUNsRSxDQUFBO1FBRUQsYUFBYSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxZQUFZLEVBQUUsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUEsQ0FBQyxZQUFZO1FBRXZFLE9BQU87UUFDUCxVQUFVLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1lBQ2xCLEdBQUcsSUFBSTtZQUNQLGVBQWUsRUFBRSxJQUFJLENBQUMsZUFBZSxHQUFHLENBQUM7U0FDMUMsQ0FBQyxDQUFDLENBQUE7SUFDTCxDQUFDLENBQUE7SUFFRCxTQUFTO0lBQ1QsTUFBTSxxQkFBcUIsR0FBRyxDQUFDLE1BQStCLEVBQUUsS0FBYyxFQUFFLEVBQUU7UUFDaEYsYUFBYSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQ25CLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FDWixFQUFFLENBQUMsTUFBTSxLQUFLLGFBQWE7WUFDekIsQ0FBQyxDQUFDO2dCQUNFLEdBQUcsRUFBRTtnQkFDTCxNQUFNO2dCQUNOLE9BQU8sRUFBRSxJQUFJLElBQUksRUFBRTtnQkFDbkIsS0FBSztnQkFDTCxRQUFRLEVBQUUsTUFBTSxLQUFLLFdBQVcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsUUFBUTthQUNyRDtZQUNILENBQUMsQ0FBQyxFQUFFLENBQ1AsQ0FDRixDQUFBO1FBRUQsWUFBWTtRQUNaLElBQUksTUFBTSxLQUFLLFdBQVcsRUFBRSxDQUFDO1lBQzNCLFVBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7Z0JBQ2xCLEdBQUcsSUFBSTtnQkFDUCxvQkFBb0IsRUFBRSxJQUFJLENBQUMsb0JBQW9CLEdBQUcsQ0FBQzthQUNwRCxDQUFDLENBQUMsQ0FBQTtRQUNMLENBQUM7YUFBTSxJQUFJLE1BQU0sS0FBSyxRQUFRLEVBQUUsQ0FBQztZQUMvQixVQUFVLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO2dCQUNsQixHQUFHLElBQUk7Z0JBQ1AsZ0JBQWdCLEVBQUUsSUFBSSxDQUFDLGdCQUFnQixHQUFHLENBQUM7YUFDNUMsQ0FBQyxDQUFDLENBQUE7UUFDTCxDQUFDO0lBQ0gsQ0FBQyxDQUFBO0lBRUQsU0FBUztJQUNULE1BQU0sZ0JBQWdCLEdBQUcsS0FBSyxJQUFJLEVBQUU7UUFDbEMsSUFBSSxDQUFDO1lBQ0gsWUFBWSxDQUFDLElBQUksQ0FBQyxDQUFBO1lBQ2xCLE1BQU0seUNBQWtCLENBQUMsSUFBSSxDQUFDO2dCQUM1QixJQUFJLEVBQUUsYUFBYTtnQkFDbkIsU0FBUyxFQUFFLGVBQWU7YUFDM0IsQ0FBQyxDQUFBO1FBQ0osQ0FBQztRQUFDLE9BQU8sS0FBSyxFQUFFLENBQUM7WUFDZixPQUFPLENBQUMsS0FBSyxDQUFDLHFCQUFxQixFQUFFLEtBQUssQ0FBQyxDQUFBO1FBQzdDLENBQUM7Z0JBQVMsQ0FBQztZQUNULFlBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQTtRQUNyQixDQUFDO0lBQ0gsQ0FBQyxDQUFBO0lBRUQsU0FBUztJQUNULE1BQU0sY0FBYyxHQUFHLEdBQUcsRUFBRTtRQUMxQixJQUFJLENBQUMsUUFBUTtZQUFFLE9BQU8sY0FBYyxDQUFBO1FBQ3BDLElBQUksU0FBUztZQUFFLE9BQU8sK0JBQStCLENBQUE7UUFDckQsSUFBSSxVQUFVLEVBQUUsWUFBWTtZQUFFLE9BQU8saUJBQWlCLENBQUE7UUFDdEQsT0FBTyxnQkFBZ0IsQ0FBQTtJQUN6QixDQUFDLENBQUE7SUFFRCxTQUFTO0lBQ1QsTUFBTSxhQUFhLEdBQUcsR0FBRyxFQUFFO1FBQ3pCLElBQUksQ0FBQyxRQUFRO1lBQUUsT0FBTyx1QkFBQyxzQkFBTyxJQUFDLFNBQVMsRUFBQyxTQUFTLEdBQUcsQ0FBQTtRQUNyRCxJQUFJLFNBQVM7WUFBRSxPQUFPLHVCQUFDLHdCQUFTLElBQUMsU0FBUyxFQUFDLHNCQUFzQixHQUFHLENBQUE7UUFDcEUsSUFBSSxVQUFVLEVBQUUsWUFBWTtZQUFFLE9BQU8sdUJBQUMsNEJBQWEsSUFBQyxTQUFTLEVBQUMsU0FBUyxHQUFHLENBQUE7UUFDMUUsT0FBTyx1QkFBQyxtQkFBSSxJQUFDLFNBQVMsRUFBQyxTQUFTLEdBQUcsQ0FBQTtJQUNyQyxDQUFDLENBQUE7SUFFRCxTQUFTO0lBQ1QsTUFBTSxhQUFhLEdBQUcsR0FBRyxFQUFFO1FBQ3pCLElBQUksQ0FBQyxRQUFRO1lBQUUsT0FBTyxJQUFJLENBQUE7UUFDMUIsSUFBSSxTQUFTO1lBQUUsT0FBTyxRQUFRLENBQUE7UUFDOUIsSUFBSSxVQUFVLEVBQUUsWUFBWTtZQUFFLE9BQU8sUUFBUSxDQUFBO1FBQzdDLE9BQU8sS0FBSyxDQUFBO0lBQ2QsQ0FBQyxDQUFBO0lBRUQsUUFBUTtJQUNSLE1BQU0sVUFBVSxHQUFHLENBQUMsSUFBaUIsRUFBRSxFQUFFO1FBQ3ZDLElBQUksQ0FBQyxJQUFJO1lBQUUsT0FBTyxJQUFJLENBQUE7UUFDdEIsTUFBTSxHQUFHLEdBQUcsSUFBSSxJQUFJLEVBQUUsQ0FBQTtRQUN0QixNQUFNLElBQUksR0FBRyxHQUFHLENBQUMsT0FBTyxFQUFFLEdBQUcsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFBO1FBQzNDLE1BQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxHQUFHLEtBQUssQ0FBQyxDQUFBO1FBRXhDLElBQUksT0FBTyxHQUFHLENBQUM7WUFBRSxPQUFPLElBQUksQ0FBQTtRQUM1QixJQUFJLE9BQU8sR0FBRyxFQUFFO1lBQUUsT0FBTyxHQUFHLE9BQU8sS0FBSyxDQUFBO1FBQ3hDLElBQUksT0FBTyxHQUFHLElBQUk7WUFBRSxPQUFPLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLEdBQUcsRUFBRSxDQUFDLEtBQUssQ0FBQTtRQUMzRCxPQUFPLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQTtJQUMxQyxDQUFDLENBQUE7SUFFRCxRQUFRO0lBQ1IsTUFBTSxXQUFXLEdBQUcsT0FBTyxDQUFDLGVBQWUsR0FBRyxDQUFDO1FBQzdDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxvQkFBb0IsR0FBRyxPQUFPLENBQUMsZUFBZSxHQUFHLEdBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7UUFDM0UsQ0FBQyxDQUFDLEtBQUssQ0FBQTtJQUVULElBQUksT0FBTyxFQUFFLENBQUM7UUFDWixPQUFPLENBQ0wsaUNBQUssU0FBUyxFQUFFLElBQUEsVUFBRSxFQUFDLGlDQUFpQyxFQUFFLFNBQVMsQ0FBQyxhQUM5RCxpQ0FBSyxTQUFTLEVBQUUsSUFBQSxVQUFFLEVBQUMseUJBQXlCLEVBQUUsY0FBYyxFQUFFLENBQUMsYUFDNUQsYUFBYSxFQUFFLEVBQ2hCLDJDQUFPLGFBQWEsRUFBRSxHQUFRLElBQzFCLEVBQ0wsVUFBVSxFQUFFLGlCQUFpQixHQUFHLENBQUMsSUFBSSxDQUNwQyx3QkFBQyxhQUFLLElBQUMsT0FBTyxFQUFDLFdBQVcsRUFBQyxTQUFTLEVBQUMsU0FBUyxhQUMzQyxVQUFVLENBQUMsaUJBQWlCLDJCQUN2QixDQUNULEVBQ0QsdUJBQUMsZUFBTSxJQUNMLE9BQU8sRUFBQyxPQUFPLEVBQ2YsSUFBSSxFQUFDLElBQUksRUFDVCxPQUFPLEVBQUUsZ0JBQWdCLEVBQ3pCLFFBQVEsRUFBRSxTQUFTLElBQUksQ0FBQyxRQUFRLFlBRWhDLHVCQUFDLHdCQUFTLElBQUMsU0FBUyxFQUFFLElBQUEsVUFBRSxFQUFDLFNBQVMsRUFBRSxTQUFTLElBQUksY0FBYyxDQUFDLEdBQUksR0FDN0QsSUFDTCxDQUNQLENBQUE7SUFDSCxDQUFDO0lBRUQsT0FBTyxDQUNMLHdCQUFDLFdBQUksSUFBQyxTQUFTLEVBQUUsSUFBQSxVQUFFLEVBQUMsUUFBUSxFQUFFLFNBQVMsQ0FBQyxhQUN0Qyx3QkFBQyxpQkFBVSxJQUFDLFNBQVMsRUFBQyxNQUFNLGFBQzFCLGlDQUFLLFNBQVMsRUFBQyxtQ0FBbUMsYUFDaEQsaUNBQUssU0FBUyxFQUFDLHlCQUF5QixhQUN0Qyx1QkFBQyxnQkFBUyxJQUFDLFNBQVMsRUFBQyxTQUFTLHlDQUFpQixFQUMvQyxpQ0FBSyxTQUFTLEVBQUUsSUFBQSxVQUFFLEVBQUMsaUNBQWlDLEVBQUUsY0FBYyxFQUFFLENBQUMsYUFDcEUsYUFBYSxFQUFFLEVBQ2hCLDJDQUFPLGFBQWEsRUFBRSxHQUFRLElBQzFCLElBQ0YsRUFFTixpQ0FBSyxTQUFTLEVBQUMseUJBQXlCLGFBQ3JDLFVBQVUsRUFBRSxpQkFBaUIsR0FBRyxDQUFDLElBQUksQ0FDcEMsd0JBQUMsYUFBSyxJQUFDLE9BQU8sRUFBQyxTQUFTLGFBQ3JCLFVBQVUsQ0FBQyxpQkFBaUIsMkJBQ3ZCLENBQ1QsRUFFRCx3QkFBQyxlQUFNLElBQ0wsT0FBTyxFQUFDLFNBQVMsRUFDakIsSUFBSSxFQUFDLElBQUksRUFDVCxPQUFPLEVBQUUsZ0JBQWdCLEVBQ3pCLFFBQVEsRUFBRSxTQUFTLElBQUksQ0FBQyxRQUFRLGFBRWhDLHVCQUFDLHdCQUFTLElBQUMsU0FBUyxFQUFFLElBQUEsVUFBRSxFQUFDLGNBQWMsRUFBRSxTQUFTLElBQUksY0FBYyxDQUFDLEdBQUksZ0NBRWxFLEVBRVIsV0FBVyxJQUFJLENBQ2QsdUJBQUMsZUFBTSxJQUNMLE9BQU8sRUFBQyxPQUFPLEVBQ2YsSUFBSSxFQUFDLElBQUksRUFDVCxPQUFPLEVBQUUsR0FBRyxFQUFFLENBQUMsV0FBVyxDQUFDLENBQUMsUUFBUSxDQUFDLFlBRXBDLFFBQVEsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLEdBQ2hCLENBQ1YsSUFDRyxJQUNGLEVBR04saUNBQUssU0FBUyxFQUFDLCtDQUErQyxhQUM1RCw0Q0FDRSxpQ0FBTSxTQUFTLEVBQUMsdUJBQXVCLDBDQUFhLEVBQ3BELGlDQUFNLFNBQVMsRUFBQyxrQkFBa0IsWUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxHQUFRLElBQzlELEVBQ04sNENBQ0UsaUNBQU0sU0FBUyxFQUFDLHVCQUF1QiwwQ0FBYSxFQUNwRCxpQ0FBTSxTQUFTLEVBQUMsa0JBQWtCLFlBQUUsVUFBVSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsR0FBUSxJQUN4RSxFQUNOLDRDQUNFLGlDQUFNLFNBQVMsRUFBQyx1QkFBdUIsb0NBQVksRUFDbkQsa0NBQU0sU0FBUyxFQUFDLGtCQUFrQixhQUFFLFdBQVcsU0FBUyxJQUNwRCxFQUNOLDRDQUNFLGlDQUFNLFNBQVMsRUFBQyx1QkFBdUIsOEJBQVcsRUFDbEQsa0NBQU0sU0FBUyxFQUFDLGtCQUFrQixhQUFFLE9BQU8sQ0FBQyxjQUFjLFVBQVUsSUFDaEUsSUFDRixFQUdMLFNBQVMsSUFBSSxVQUFVLENBQUMsTUFBTSxHQUFHLENBQUMsSUFBSSxDQUNyQyxpQ0FBSyxTQUFTLEVBQUMsV0FBVyxhQUN4QixpQ0FBSyxTQUFTLEVBQUMsMkNBQTJDLGFBQ3hELHdFQUFpQixFQUNqQiw2Q0FBTyxVQUFVLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLE1BQU0sS0FBSyxhQUFhLENBQUMsRUFBRSxRQUFRLElBQUksQ0FBQyxTQUFTLElBQzdFLEVBQ04sdUJBQUMsbUJBQVEsSUFDUCxLQUFLLEVBQUUsVUFBVSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxNQUFNLEtBQUssYUFBYSxDQUFDLEVBQUUsUUFBUSxJQUFJLENBQUMsRUFDeEUsU0FBUyxFQUFDLEtBQUssR0FDZixJQUNFLENBQ1AsSUFDVSxFQUVaLFFBQVEsSUFBSSxXQUFXLElBQUksQ0FDMUIsd0JBQUMsa0JBQVcsSUFBQyxTQUFTLEVBQUMsV0FBVyxhQUNoQyx1QkFBQyxxQkFBUyxLQUFHLEVBR2IsaUNBQUssU0FBUyxFQUFDLHNEQUFzRCxhQUNuRSx1QkFBQyxXQUFJLGNBQ0gsd0JBQUMsa0JBQVcsSUFBQyxTQUFTLEVBQUMsS0FBSyxhQUMxQixpQ0FBSyxTQUFTLEVBQUMsOEJBQThCLGFBQzNDLHVCQUFDLHVCQUFRLElBQUMsU0FBUyxFQUFDLHVCQUF1QixHQUFHLEVBQzlDLGlDQUFNLFNBQVMsRUFBQyxhQUFhLHlDQUFZLElBQ3JDLEVBQ04saUNBQUssU0FBUyxFQUFDLG1CQUFtQixhQUNoQyxpQ0FBSyxTQUFTLEVBQUMsc0JBQXNCLGFBQ25DLHlFQUFrQixFQUNsQiwyQ0FBTyxPQUFPLENBQUMsZUFBZSxHQUFRLElBQ2xDLEVBQ04saUNBQUssU0FBUyxFQUFDLHNCQUFzQixhQUNuQyw2REFBZ0IsRUFDaEIsaUNBQU0sU0FBUyxFQUFDLGdCQUFnQixZQUFFLE9BQU8sQ0FBQyxvQkFBb0IsR0FBUSxJQUNsRSxFQUNOLGlDQUFLLFNBQVMsRUFBQyxzQkFBc0IsYUFDbkMsNkRBQWdCLEVBQ2hCLGlDQUFNLFNBQVMsRUFBQyxjQUFjLFlBQUUsT0FBTyxDQUFDLGdCQUFnQixHQUFRLElBQzVELElBQ0YsSUFDTSxHQUNULEVBRVAsdUJBQUMsV0FBSSxjQUNILHdCQUFDLGtCQUFXLElBQUMsU0FBUyxFQUFDLEtBQUssYUFDMUIsaUNBQUssU0FBUyxFQUFDLDhCQUE4QixhQUMzQyx1QkFBQyxxQkFBTSxJQUFDLFNBQVMsRUFBQyx3QkFBd0IsR0FBRyxFQUM3QyxpQ0FBTSxTQUFTLEVBQUMsYUFBYSx5Q0FBWSxJQUNyQyxFQUNOLGlDQUFLLFNBQVMsRUFBQyxtQkFBbUIsYUFDaEMsaUNBQUssU0FBUyxFQUFDLHNCQUFzQixhQUNuQyxxRkFBb0IsRUFDcEIsNkNBQU8sT0FBTyxDQUFDLGVBQWUsVUFBVSxJQUNwQyxFQUNOLGlDQUFLLFNBQVMsRUFBQyxzQkFBc0IsYUFDbkMsK0VBQW1CLEVBQ25CLDZDQUFPLE9BQU8sQ0FBQyxrQkFBa0IsVUFBVSxJQUN2QyxFQUNOLGlDQUFLLFNBQVMsRUFBQyxzQkFBc0IsYUFDbkMseUVBQWtCLEVBQ2xCLDZDQUFPLE9BQU8sQ0FBQyxnQkFBZ0IsWUFBWSxJQUN2QyxJQUNGLElBQ00sR0FDVCxFQUVQLHVCQUFDLFdBQUksY0FDSCx3QkFBQyxrQkFBVyxJQUFDLFNBQVMsRUFBQyxLQUFLLGFBQzFCLGlDQUFLLFNBQVMsRUFBQyw4QkFBOEIsYUFDM0MsdUJBQUMsb0JBQUssSUFBQyxTQUFTLEVBQUMseUJBQXlCLEdBQUcsRUFDN0MsaUNBQU0sU0FBUyxFQUFDLGFBQWEseUNBQVksSUFDckMsRUFDTixpQ0FBSyxTQUFTLEVBQUMsbUJBQW1CLGFBQ2hDLGlDQUFLLFNBQVMsRUFBQyxzQkFBc0IsYUFDbkMsK0VBQW1CLEVBQ25CLDJDQUFPLFVBQVUsRUFBRSxpQkFBaUIsSUFBSSxDQUFDLEdBQVEsSUFDN0MsRUFDTixpQ0FBSyxTQUFTLEVBQUMsc0JBQXNCLGFBQ25DLHlFQUFrQixFQUNsQiwyQ0FBTyxVQUFVLEVBQUUsU0FBUyxFQUFFLE1BQU0sSUFBSSxDQUFDLEdBQVEsSUFDN0MsRUFDTixpQ0FBSyxTQUFTLEVBQUMsc0JBQXNCLGFBQ25DLHlFQUFrQixFQUNsQiw0REFBZSxJQUNYLElBQ0YsSUFDTSxHQUNULElBQ0gsRUFHTiw0Q0FDRSwrQkFBSSxTQUFTLEVBQUMsa0JBQWtCLHlDQUFVLEVBQzFDLHVCQUFDLHdCQUFVLElBQUMsU0FBUyxFQUFDLDRCQUE0QixZQUNoRCxnQ0FBSyxTQUFTLEVBQUMsV0FBVyxZQUN2QixVQUFVLENBQUMsTUFBTSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FDekIsOEJBQUcsU0FBUyxFQUFDLGdEQUFnRCxxREFFekQsQ0FDTCxDQUFDLENBQUMsQ0FBQyxDQUNGLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxTQUFTLEVBQUUsRUFBRSxDQUFDLENBQzVCLGlDQUF3QixTQUFTLEVBQUMsOERBQThELGFBQzlGLGlDQUFLLFNBQVMsRUFBQyx5QkFBeUIsYUFDckMsU0FBUyxDQUFDLE1BQU0sS0FBSyxXQUFXLElBQUksdUJBQUMsMEJBQVcsSUFBQyxTQUFTLEVBQUMsd0JBQXdCLEdBQUcsRUFDdEYsU0FBUyxDQUFDLE1BQU0sS0FBSyxRQUFRLElBQUksdUJBQUMsc0JBQU8sSUFBQyxTQUFTLEVBQUMsc0JBQXNCLEdBQUcsRUFDN0UsU0FBUyxDQUFDLE1BQU0sS0FBSyxhQUFhLElBQUksdUJBQUMsb0JBQUssSUFBQyxTQUFTLEVBQUMsc0NBQXNDLEdBQUcsRUFDaEcsU0FBUyxDQUFDLE1BQU0sS0FBSyxTQUFTLElBQUksdUJBQUMsb0JBQUssSUFBQyxTQUFTLEVBQUMsdUJBQXVCLEdBQUcsRUFDOUUsMkNBQU8sU0FBUyxDQUFDLE1BQU0sR0FBUSxFQUMvQix1QkFBQyxhQUFLLElBQUMsT0FBTyxFQUFDLFNBQVMsRUFBQyxTQUFTLEVBQUMsU0FBUyxZQUN6QyxTQUFTLENBQUMsSUFBSSxLQUFLLFFBQVEsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7NERBQ3BDLFNBQVMsQ0FBQyxJQUFJLEtBQUssVUFBVSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztnRUFDdEMsU0FBUyxDQUFDLElBQUksS0FBSyxxQkFBcUIsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxJQUFJLEdBQ25ELElBQ0osRUFDTixpQ0FBSyxTQUFTLEVBQUMseUJBQXlCLGFBQ3JDLFNBQVMsQ0FBQyxNQUFNLEtBQUssYUFBYSxJQUFJLENBQ3JDLHVCQUFDLG1CQUFRLElBQUMsS0FBSyxFQUFFLFNBQVMsQ0FBQyxRQUFRLEVBQUUsU0FBUyxFQUFDLFVBQVUsR0FBRyxDQUM3RCxFQUNELGlDQUFNLFNBQVMsRUFBQywrQkFBK0IsWUFDNUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsR0FDM0IsSUFDSCxLQXBCRSxTQUFTLENBQUMsRUFBRSxDQXFCaEIsQ0FDUCxDQUFDLENBQ0gsR0FDRyxHQUNLLElBQ1QsSUFDTSxDQUNmLElBQ0ksQ0FDUixDQUFBO0FBQ0gsQ0FBQyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyJEOlxcUHJvamVjdHNcXENhcmRFdmVyeXRoaW5nXFxjYXJkYWxsLXByb3RvdHlwZVxcc3JjXFxjb21wb25lbnRzXFxzeW5jXFxzeW5jLXN0YXR1cy1kaXNwbGF5LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0J1xyXG5pbXBvcnQgeyBDYXJkLCBDYXJkQ29udGVudCwgQ2FyZEhlYWRlciwgQ2FyZFRpdGxlIH0gZnJvbSAnQC9jb21wb25lbnRzL3VpL2NhcmQnXHJcbmltcG9ydCB7IEJhZGdlIH0gZnJvbSAnQC9jb21wb25lbnRzL3VpL2JhZGdlJ1xyXG5pbXBvcnQgeyBCdXR0b24gfSBmcm9tICdAL2NvbXBvbmVudHMvdWkvYnV0dG9uJ1xyXG5pbXBvcnQgeyBQcm9ncmVzcyB9IGZyb20gJ0AvY29tcG9uZW50cy91aS9wcm9ncmVzcydcclxuaW1wb3J0IHsgU2Nyb2xsQXJlYSB9IGZyb20gJ0AvY29tcG9uZW50cy91aS9zY3JvbGwtYXJlYSdcclxuaW1wb3J0IHsgU2VwYXJhdG9yIH0gZnJvbSAnQC9jb21wb25lbnRzL3VpL3NlcGFyYXRvcidcclxuaW1wb3J0IHtcclxuICBXaWZpLFxyXG4gIFdpZmlPZmYsXHJcbiAgUmVmcmVzaEN3LFxyXG4gIENoZWNrQ2lyY2xlLFxyXG4gIFhDaXJjbGUsXHJcbiAgQ2xvY2ssXHJcbiAgQWxlcnRUcmlhbmdsZSxcclxuICBTZXJ2ZXIsXHJcbiAgRGF0YWJhc2UsXHJcbiAgQ2xvdWQsXHJcbiAgUGF1c2UsXHJcbiAgUGxheVxyXG59IGZyb20gJ2x1Y2lkZS1yZWFjdCdcclxuaW1wb3J0IHsgY24gfSBmcm9tICdAL2xpYi91dGlscydcclxuaW1wb3J0IHsgdW5pZmllZFN5bmNTZXJ2aWNlIH0gZnJvbSAnQC9zZXJ2aWNlcy9jb3JlL3N5bmMvdW5pZmllZC1zeW5jLnNlcnZpY2UnXHJcbmltcG9ydCB7IHBlcmZvcm1hbmNlTW9uaXRvciB9IGZyb20gJ0Avc2VydmljZXMvdWkvcGVyZm9ybWFuY2UtbW9uaXRvcidcclxuXHJcbmludGVyZmFjZSBTeW5jU3RhdHVzRGlzcGxheVByb3BzIHtcclxuICBjbGFzc05hbWU/OiBzdHJpbmdcclxuICBzaG93RGV0YWlscz86IGJvb2xlYW5cclxuICBjb21wYWN0PzogYm9vbGVhblxyXG59XHJcblxyXG5pbnRlcmZhY2UgU3luY09wZXJhdGlvbiB7XHJcbiAgaWQ6IHN0cmluZ1xyXG4gIHR5cGU6ICd1cGxvYWQnIHwgJ2Rvd25sb2FkJyB8ICdjb25mbGljdF9yZXNvbHV0aW9uJyB8ICdtZXJnZSdcclxuICBlbnRpdHk6IHN0cmluZ1xyXG4gIHN0YXR1czogJ3BlbmRpbmcnIHwgJ2luX3Byb2dyZXNzJyB8ICdjb21wbGV0ZWQnIHwgJ2ZhaWxlZCdcclxuICBwcm9ncmVzczogbnVtYmVyXHJcbiAgc3RhcnRUaW1lOiBEYXRlXHJcbiAgZW5kVGltZT86IERhdGVcclxuICBlcnJvcj86IHN0cmluZ1xyXG4gIGRldGFpbHM/OiBzdHJpbmdcclxufVxyXG5cclxuaW50ZXJmYWNlIFN5bmNNZXRyaWNzIHtcclxuICBsYXN0U3luY1RpbWU6IERhdGUgfCBudWxsXHJcbiAgdG90YWxPcGVyYXRpb25zOiBudW1iZXJcclxuICBzdWNjZXNzZnVsT3BlcmF0aW9uczogbnVtYmVyXHJcbiAgZmFpbGVkT3BlcmF0aW9uczogbnVtYmVyXHJcbiAgYXZlcmFnZVN5bmNUaW1lOiBudW1iZXJcclxuICBuZXR3b3JrTGF0ZW5jeTogbnVtYmVyXHJcbiAgc2VydmVyUmVzcG9uc2VUaW1lOiBudW1iZXJcclxuICBkYXRhVHJhbnNmZXJSYXRlOiBudW1iZXJcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIFN5bmNTdGF0dXNEaXNwbGF5KHtcclxuICBjbGFzc05hbWUsXHJcbiAgc2hvd0RldGFpbHMgPSBmYWxzZSxcclxuICBjb21wYWN0ID0gZmFsc2VcclxufTogU3luY1N0YXR1c0Rpc3BsYXlQcm9wcykge1xyXG4gIGNvbnN0IFtpc09ubGluZSwgc2V0SXNPbmxpbmVdID0gdXNlU3RhdGUodHJ1ZSlcclxuICBjb25zdCBbaXNTeW5jaW5nLCBzZXRJc1N5bmNpbmddID0gdXNlU3RhdGUoZmFsc2UpXHJcbiAgY29uc3QgW3N5bmNTdGF0dXMsIHNldFN5bmNTdGF0dXNdID0gdXNlU3RhdGU8YW55PihudWxsKVxyXG4gIGNvbnN0IFtvcGVyYXRpb25zLCBzZXRPcGVyYXRpb25zXSA9IHVzZVN0YXRlPFN5bmNPcGVyYXRpb25bXT4oW10pXHJcbiAgY29uc3QgW21ldHJpY3MsIHNldE1ldHJpY3NdID0gdXNlU3RhdGU8U3luY01ldHJpY3M+KHtcclxuICAgIGxhc3RTeW5jVGltZTogbnVsbCxcclxuICAgIHRvdGFsT3BlcmF0aW9uczogMCxcclxuICAgIHN1Y2Nlc3NmdWxPcGVyYXRpb25zOiAwLFxyXG4gICAgZmFpbGVkT3BlcmF0aW9uczogMCxcclxuICAgIGF2ZXJhZ2VTeW5jVGltZTogMCxcclxuICAgIG5ldHdvcmtMYXRlbmN5OiAwLFxyXG4gICAgc2VydmVyUmVzcG9uc2VUaW1lOiAwLFxyXG4gICAgZGF0YVRyYW5zZmVyUmF0ZTogMFxyXG4gIH0pXHJcbiAgY29uc3QgW2V4cGFuZGVkLCBzZXRFeHBhbmRlZF0gPSB1c2VTdGF0ZShmYWxzZSlcclxuXHJcbiAgLy8g55uR5ZCs572R57uc54q25oCBXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIGNvbnN0IGhhbmRsZU9ubGluZSA9ICgpID0+IHNldElzT25saW5lKHRydWUpXHJcbiAgICBjb25zdCBoYW5kbGVPZmZsaW5lID0gKCkgPT4gc2V0SXNPbmxpbmUoZmFsc2UpXHJcblxyXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ29ubGluZScsIGhhbmRsZU9ubGluZSlcclxuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdvZmZsaW5lJywgaGFuZGxlT2ZmbGluZSlcclxuXHJcbiAgICAvLyDliJ3lp4vljJbnvZHnu5znirbmgIFcclxuICAgIHNldElzT25saW5lKG5hdmlnYXRvci5vbkxpbmUpXHJcblxyXG4gICAgcmV0dXJuICgpID0+IHtcclxuICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ29ubGluZScsIGhhbmRsZU9ubGluZSlcclxuICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ29mZmxpbmUnLCBoYW5kbGVPZmZsaW5lKVxyXG4gICAgfVxyXG4gIH0sIFtdKVxyXG5cclxuICAvLyDnm5HlkKzlkIzmraXnirbmgIFcclxuICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgY29uc3QgdXBkYXRlU3luY1N0YXR1cyA9IGFzeW5jICgpID0+IHtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBjb25zdCBzdGF0dXMgPSB1bmlmaWVkU3luY1NlcnZpY2UuZ2V0U3RhdHVzKClcclxuICAgICAgICBzZXRTeW5jU3RhdHVzKHN0YXR1cylcclxuICAgICAgICBzZXRJc1N5bmNpbmcoc3RhdHVzLmlzU3luY2luZylcclxuXHJcbiAgICAgICAgLy8g5pu05paw5oyH5qCHXHJcbiAgICAgICAgaWYgKHN0YXR1cy5sYXN0U3luY1RpbWUpIHtcclxuICAgICAgICAgIHNldE1ldHJpY3MocHJldiA9PiAoe1xyXG4gICAgICAgICAgICAuLi5wcmV2LFxyXG4gICAgICAgICAgICBsYXN0U3luY1RpbWU6IG5ldyBEYXRlKHN0YXR1cy5sYXN0U3luY1RpbWUpLFxyXG4gICAgICAgICAgICB0b3RhbE9wZXJhdGlvbnM6IHN0YXR1cy50b3RhbFN5bmNzIHx8IDAsXHJcbiAgICAgICAgICAgIHN1Y2Nlc3NmdWxPcGVyYXRpb25zOiBzdGF0dXMuc3VjY2Vzc2Z1bFN5bmNzIHx8IDAsXHJcbiAgICAgICAgICAgIGZhaWxlZE9wZXJhdGlvbnM6IHN0YXR1cy5mYWlsZWRTeW5jcyB8fCAwXHJcbiAgICAgICAgICB9KSlcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIOabtOaWsOaAp+iDveaMh+agh1xyXG4gICAgICAgIGNvbnN0IHBlcmZNZXRyaWNzID0gcGVyZm9ybWFuY2VNb25pdG9yLmdldFJlYWx0aW1lTWV0cmljcygpXHJcbiAgICAgICAgc2V0TWV0cmljcyhwcmV2ID0+ICh7XHJcbiAgICAgICAgICAuLi5wcmV2LFxyXG4gICAgICAgICAgbmV0d29ya0xhdGVuY3k6IHBlcmZNZXRyaWNzLm5ldHdvcmtMYXRlbmN5IHx8IDBcclxuICAgICAgICB9KSlcclxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKCdGYWlsZWQgdG8gdXBkYXRlIHN5bmMgc3RhdHVzOicsIGVycm9yKVxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8g56uL5Y2z5pu05paw5LiA5qyhXHJcbiAgICB1cGRhdGVTeW5jU3RhdHVzKClcclxuXHJcbiAgICAvLyDmr48y56eS5pu05paw5LiA5qyh54q25oCBXHJcbiAgICBjb25zdCBpbnRlcnZhbCA9IHNldEludGVydmFsKHVwZGF0ZVN5bmNTdGF0dXMsIDIwMDApXHJcblxyXG4gICAgLy8g55uR5ZCs5ZCM5q2l5pyN5Yqh5LqL5Lu2XHJcbiAgICBjb25zdCBoYW5kbGVTeW5jU3RhcnQgPSAoKSA9PiB7XHJcbiAgICAgIHNldElzU3luY2luZyh0cnVlKVxyXG4gICAgICBhZGRPcGVyYXRpb24oe1xyXG4gICAgICAgIHR5cGU6ICd1cGxvYWQnLFxyXG4gICAgICAgIGVudGl0eTogJ+aJuemHj+WQjOatpScsXHJcbiAgICAgICAgc3RhdHVzOiAnaW5fcHJvZ3Jlc3MnLFxyXG4gICAgICAgIHByb2dyZXNzOiAwLFxyXG4gICAgICAgIHN0YXJ0VGltZTogbmV3IERhdGUoKVxyXG4gICAgICB9KVxyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGhhbmRsZVN5bmNDb21wbGV0ZSA9ICgpID0+IHtcclxuICAgICAgc2V0SXNTeW5jaW5nKGZhbHNlKVxyXG4gICAgICB1cGRhdGVPcGVyYXRpb25TdGF0dXMoJ2NvbXBsZXRlZCcpXHJcbiAgICAgIHVwZGF0ZVN5bmNTdGF0dXMoKVxyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGhhbmRsZVN5bmNFcnJvciA9IChlcnJvcjogYW55KSA9PiB7XHJcbiAgICAgIHNldElzU3luY2luZyhmYWxzZSlcclxuICAgICAgdXBkYXRlT3BlcmF0aW9uU3RhdHVzKCdmYWlsZWQnLCBlcnJvci5tZXNzYWdlKVxyXG4gICAgfVxyXG5cclxuICAgIC8vIOazqOWGjOS6i+S7tuebkeWQrOWZqFxyXG4gICAgdW5pZmllZFN5bmNTZXJ2aWNlLm9uKCdzeW5jOnN0YXJ0JywgaGFuZGxlU3luY1N0YXJ0KVxyXG4gICAgdW5pZmllZFN5bmNTZXJ2aWNlLm9uKCdzeW5jOmNvbXBsZXRlJywgaGFuZGxlU3luY0NvbXBsZXRlKVxyXG4gICAgdW5pZmllZFN5bmNTZXJ2aWNlLm9uKCdzeW5jOmVycm9yJywgaGFuZGxlU3luY0Vycm9yKVxyXG5cclxuICAgIHJldHVybiAoKSA9PiB7XHJcbiAgICAgIGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWwpXHJcbiAgICAgIHVuaWZpZWRTeW5jU2VydmljZS5vZmYoJ3N5bmM6c3RhcnQnLCBoYW5kbGVTeW5jU3RhcnQpXHJcbiAgICAgIHVuaWZpZWRTeW5jU2VydmljZS5vZmYoJ3N5bmM6Y29tcGxldGUnLCBoYW5kbGVTeW5jQ29tcGxldGUpXHJcbiAgICAgIHVuaWZpZWRTeW5jU2VydmljZS5vZmYoJ3N5bmM6ZXJyb3InLCBoYW5kbGVTeW5jRXJyb3IpXHJcbiAgICB9XHJcbiAgfSwgW10pXHJcblxyXG4gIC8vIOa3u+WKoOWQjOatpeaTjeS9nFxyXG4gIGNvbnN0IGFkZE9wZXJhdGlvbiA9IChvcGVyYXRpb246IE9taXQ8U3luY09wZXJhdGlvbiwgJ2lkJz4pID0+IHtcclxuICAgIGNvbnN0IG5ld09wZXJhdGlvbjogU3luY09wZXJhdGlvbiA9IHtcclxuICAgICAgLi4ub3BlcmF0aW9uLFxyXG4gICAgICBpZDogYG9wXyR7RGF0ZS5ub3coKX1fJHtNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwgOSl9YFxyXG4gICAgfVxyXG5cclxuICAgIHNldE9wZXJhdGlvbnMocHJldiA9PiBbbmV3T3BlcmF0aW9uLCAuLi5wcmV2LnNsaWNlKDAsIDkpXSkgLy8g5L+d55WZ5pyA6L+RMTDkuKrmk43kvZxcclxuXHJcbiAgICAvLyDmm7TmlrDmjIfmoIdcclxuICAgIHNldE1ldHJpY3MocHJldiA9PiAoe1xyXG4gICAgICAuLi5wcmV2LFxyXG4gICAgICB0b3RhbE9wZXJhdGlvbnM6IHByZXYudG90YWxPcGVyYXRpb25zICsgMVxyXG4gICAgfSkpXHJcbiAgfVxyXG5cclxuICAvLyDmm7TmlrDmk43kvZznirbmgIFcclxuICBjb25zdCB1cGRhdGVPcGVyYXRpb25TdGF0dXMgPSAoc3RhdHVzOiBTeW5jT3BlcmF0aW9uWydzdGF0dXMnXSwgZXJyb3I/OiBzdHJpbmcpID0+IHtcclxuICAgIHNldE9wZXJhdGlvbnMocHJldiA9PlxyXG4gICAgICBwcmV2Lm1hcChvcCA9PlxyXG4gICAgICAgIG9wLnN0YXR1cyA9PT0gJ2luX3Byb2dyZXNzJ1xyXG4gICAgICAgICAgPyB7XHJcbiAgICAgICAgICAgICAgLi4ub3AsXHJcbiAgICAgICAgICAgICAgc3RhdHVzLFxyXG4gICAgICAgICAgICAgIGVuZFRpbWU6IG5ldyBEYXRlKCksXHJcbiAgICAgICAgICAgICAgZXJyb3IsXHJcbiAgICAgICAgICAgICAgcHJvZ3Jlc3M6IHN0YXR1cyA9PT0gJ2NvbXBsZXRlZCcgPyAxMDAgOiBvcC5wcm9ncmVzc1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICA6IG9wXHJcbiAgICAgIClcclxuICAgIClcclxuXHJcbiAgICAvLyDmm7TmlrDmiJDlip8v5aSx6LSl6K6h5pWwXHJcbiAgICBpZiAoc3RhdHVzID09PSAnY29tcGxldGVkJykge1xyXG4gICAgICBzZXRNZXRyaWNzKHByZXYgPT4gKHtcclxuICAgICAgICAuLi5wcmV2LFxyXG4gICAgICAgIHN1Y2Nlc3NmdWxPcGVyYXRpb25zOiBwcmV2LnN1Y2Nlc3NmdWxPcGVyYXRpb25zICsgMVxyXG4gICAgICB9KSlcclxuICAgIH0gZWxzZSBpZiAoc3RhdHVzID09PSAnZmFpbGVkJykge1xyXG4gICAgICBzZXRNZXRyaWNzKHByZXYgPT4gKHtcclxuICAgICAgICAuLi5wcmV2LFxyXG4gICAgICAgIGZhaWxlZE9wZXJhdGlvbnM6IHByZXYuZmFpbGVkT3BlcmF0aW9ucyArIDFcclxuICAgICAgfSkpXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvLyDmiYvliqjop6blj5HlkIzmraVcclxuICBjb25zdCBoYW5kbGVNYW51YWxTeW5jID0gYXN5bmMgKCkgPT4ge1xyXG4gICAgdHJ5IHtcclxuICAgICAgc2V0SXNTeW5jaW5nKHRydWUpXHJcbiAgICAgIGF3YWl0IHVuaWZpZWRTeW5jU2VydmljZS5zeW5jKHtcclxuICAgICAgICB0eXBlOiAnaW5jcmVtZW50YWwnLFxyXG4gICAgICAgIGRpcmVjdGlvbjogJ2JpZGlyZWN0aW9uYWwnXHJcbiAgICAgIH0pXHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICBjb25zb2xlLmVycm9yKCdNYW51YWwgc3luYyBmYWlsZWQ6JywgZXJyb3IpXHJcbiAgICB9IGZpbmFsbHkge1xyXG4gICAgICBzZXRJc1N5bmNpbmcoZmFsc2UpXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvLyDojrflj5bnirbmgIHpopzoibJcclxuICBjb25zdCBnZXRTdGF0dXNDb2xvciA9ICgpID0+IHtcclxuICAgIGlmICghaXNPbmxpbmUpIHJldHVybiAndGV4dC1yZWQtNTAwJ1xyXG4gICAgaWYgKGlzU3luY2luZykgcmV0dXJuICd0ZXh0LXllbGxvdy01MDAgYW5pbWF0ZS1wdWxzZSdcclxuICAgIGlmIChzeW5jU3RhdHVzPy5oYXNDb25mbGljdHMpIHJldHVybiAndGV4dC1vcmFuZ2UtNTAwJ1xyXG4gICAgcmV0dXJuICd0ZXh0LWdyZWVuLTUwMCdcclxuICB9XHJcblxyXG4gIC8vIOiOt+WPlueKtuaAgeWbvuagh1xyXG4gIGNvbnN0IGdldFN0YXR1c0ljb24gPSAoKSA9PiB7XHJcbiAgICBpZiAoIWlzT25saW5lKSByZXR1cm4gPFdpZmlPZmYgY2xhc3NOYW1lPVwiaC00IHctNFwiIC8+XHJcbiAgICBpZiAoaXNTeW5jaW5nKSByZXR1cm4gPFJlZnJlc2hDdyBjbGFzc05hbWU9XCJoLTQgdy00IGFuaW1hdGUtc3BpblwiIC8+XHJcbiAgICBpZiAoc3luY1N0YXR1cz8uaGFzQ29uZmxpY3RzKSByZXR1cm4gPEFsZXJ0VHJpYW5nbGUgY2xhc3NOYW1lPVwiaC00IHctNFwiIC8+XHJcbiAgICByZXR1cm4gPFdpZmkgY2xhc3NOYW1lPVwiaC00IHctNFwiIC8+XHJcbiAgfVxyXG5cclxuICAvLyDojrflj5bnirbmgIHmlofmnKxcclxuICBjb25zdCBnZXRTdGF0dXNUZXh0ID0gKCkgPT4ge1xyXG4gICAgaWYgKCFpc09ubGluZSkgcmV0dXJuICfnprvnur8nXHJcbiAgICBpZiAoaXNTeW5jaW5nKSByZXR1cm4gJ+WQjOatpeS4rS4uLidcclxuICAgIGlmIChzeW5jU3RhdHVzPy5oYXNDb25mbGljdHMpIHJldHVybiAn6ZyA6KaB6Kej5Yaz5Yay56qBJ1xyXG4gICAgcmV0dXJuICflt7LlkIzmraUnXHJcbiAgfVxyXG5cclxuICAvLyDmoLzlvI/ljJbml7bpl7RcclxuICBjb25zdCBmb3JtYXRUaW1lID0gKGRhdGU6IERhdGUgfCBudWxsKSA9PiB7XHJcbiAgICBpZiAoIWRhdGUpIHJldHVybiAn5LuO5pyqJ1xyXG4gICAgY29uc3Qgbm93ID0gbmV3IERhdGUoKVxyXG4gICAgY29uc3QgZGlmZiA9IG5vdy5nZXRUaW1lKCkgLSBkYXRlLmdldFRpbWUoKVxyXG4gICAgY29uc3QgbWludXRlcyA9IE1hdGguZmxvb3IoZGlmZiAvIDYwMDAwKVxyXG5cclxuICAgIGlmIChtaW51dGVzIDwgMSkgcmV0dXJuICfliJrliJonXHJcbiAgICBpZiAobWludXRlcyA8IDYwKSByZXR1cm4gYCR7bWludXRlc33liIbpkp/liY1gXHJcbiAgICBpZiAobWludXRlcyA8IDE0NDApIHJldHVybiBgJHtNYXRoLmZsb29yKG1pbnV0ZXMgLyA2MCl95bCP5pe25YmNYFxyXG4gICAgcmV0dXJuIGAke01hdGguZmxvb3IobWludXRlcyAvIDE0NDApfeWkqeWJjWBcclxuICB9XHJcblxyXG4gIC8vIOiuoeeul+aIkOWKn+eOh1xyXG4gIGNvbnN0IHN1Y2Nlc3NSYXRlID0gbWV0cmljcy50b3RhbE9wZXJhdGlvbnMgPiAwXHJcbiAgICA/IChtZXRyaWNzLnN1Y2Nlc3NmdWxPcGVyYXRpb25zIC8gbWV0cmljcy50b3RhbE9wZXJhdGlvbnMgKiAxMDApLnRvRml4ZWQoMSlcclxuICAgIDogJzAuMCdcclxuXHJcbiAgaWYgKGNvbXBhY3QpIHtcclxuICAgIHJldHVybiAoXHJcbiAgICAgIDxkaXYgY2xhc3NOYW1lPXtjbihcImZsZXggaXRlbXMtY2VudGVyIGdhcC0yIHRleHQtc21cIiwgY2xhc3NOYW1lKX0+XHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9e2NuKFwiZmxleCBpdGVtcy1jZW50ZXIgZ2FwLTFcIiwgZ2V0U3RhdHVzQ29sb3IoKSl9PlxyXG4gICAgICAgICAge2dldFN0YXR1c0ljb24oKX1cclxuICAgICAgICAgIDxzcGFuPntnZXRTdGF0dXNUZXh0KCl9PC9zcGFuPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIHtzeW5jU3RhdHVzPy5wZW5kaW5nT3BlcmF0aW9ucyA+IDAgJiYgKFxyXG4gICAgICAgICAgPEJhZGdlIHZhcmlhbnQ9XCJzZWNvbmRhcnlcIiBjbGFzc05hbWU9XCJ0ZXh0LXhzXCI+XHJcbiAgICAgICAgICAgIHtzeW5jU3RhdHVzLnBlbmRpbmdPcGVyYXRpb25zfSDlvoXlkIzmraVcclxuICAgICAgICAgIDwvQmFkZ2U+XHJcbiAgICAgICAgKX1cclxuICAgICAgICA8QnV0dG9uXHJcbiAgICAgICAgICB2YXJpYW50PVwiZ2hvc3RcIlxyXG4gICAgICAgICAgc2l6ZT1cInNtXCJcclxuICAgICAgICAgIG9uQ2xpY2s9e2hhbmRsZU1hbnVhbFN5bmN9XHJcbiAgICAgICAgICBkaXNhYmxlZD17aXNTeW5jaW5nIHx8ICFpc09ubGluZX1cclxuICAgICAgICA+XHJcbiAgICAgICAgICA8UmVmcmVzaEN3IGNsYXNzTmFtZT17Y24oXCJoLTMgdy0zXCIsIGlzU3luY2luZyAmJiBcImFuaW1hdGUtc3BpblwiKX0gLz5cclxuICAgICAgICA8L0J1dHRvbj5cclxuICAgICAgPC9kaXY+XHJcbiAgICApXHJcbiAgfVxyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPENhcmQgY2xhc3NOYW1lPXtjbihcInctZnVsbFwiLCBjbGFzc05hbWUpfT5cclxuICAgICAgPENhcmRIZWFkZXIgY2xhc3NOYW1lPVwicGItM1wiPlxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuXCI+XHJcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIGdhcC0yXCI+XHJcbiAgICAgICAgICAgIDxDYXJkVGl0bGUgY2xhc3NOYW1lPVwidGV4dC1sZ1wiPuWQjOatpeeKtuaAgTwvQ2FyZFRpdGxlPlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Y24oXCJmbGV4IGl0ZW1zLWNlbnRlciBnYXAtMSB0ZXh0LXNtXCIsIGdldFN0YXR1c0NvbG9yKCkpfT5cclxuICAgICAgICAgICAgICB7Z2V0U3RhdHVzSWNvbigpfVxyXG4gICAgICAgICAgICAgIDxzcGFuPntnZXRTdGF0dXNUZXh0KCl9PC9zcGFuPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIgZ2FwLTJcIj5cclxuICAgICAgICAgICAge3N5bmNTdGF0dXM/LnBlbmRpbmdPcGVyYXRpb25zID4gMCAmJiAoXHJcbiAgICAgICAgICAgICAgPEJhZGdlIHZhcmlhbnQ9XCJvdXRsaW5lXCI+XHJcbiAgICAgICAgICAgICAgICB7c3luY1N0YXR1cy5wZW5kaW5nT3BlcmF0aW9uc30g5b6F5ZCM5q2lXHJcbiAgICAgICAgICAgICAgPC9CYWRnZT5cclxuICAgICAgICAgICAgKX1cclxuXHJcbiAgICAgICAgICAgIDxCdXR0b25cclxuICAgICAgICAgICAgICB2YXJpYW50PVwib3V0bGluZVwiXHJcbiAgICAgICAgICAgICAgc2l6ZT1cInNtXCJcclxuICAgICAgICAgICAgICBvbkNsaWNrPXtoYW5kbGVNYW51YWxTeW5jfVxyXG4gICAgICAgICAgICAgIGRpc2FibGVkPXtpc1N5bmNpbmcgfHwgIWlzT25saW5lfVxyXG4gICAgICAgICAgICA+XHJcbiAgICAgICAgICAgICAgPFJlZnJlc2hDdyBjbGFzc05hbWU9e2NuKFwiaC00IHctNCBtci0yXCIsIGlzU3luY2luZyAmJiBcImFuaW1hdGUtc3BpblwiKX0gLz5cclxuICAgICAgICAgICAgICDnq4vljbPlkIzmraVcclxuICAgICAgICAgICAgPC9CdXR0b24+XHJcblxyXG4gICAgICAgICAgICB7c2hvd0RldGFpbHMgJiYgKFxyXG4gICAgICAgICAgICAgIDxCdXR0b25cclxuICAgICAgICAgICAgICAgIHZhcmlhbnQ9XCJnaG9zdFwiXHJcbiAgICAgICAgICAgICAgICBzaXplPVwic21cIlxyXG4gICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gc2V0RXhwYW5kZWQoIWV4cGFuZGVkKX1cclxuICAgICAgICAgICAgICA+XHJcbiAgICAgICAgICAgICAgICB7ZXhwYW5kZWQgPyAn5pS26LW3JyA6ICfor6bmg4UnfVxyXG4gICAgICAgICAgICAgIDwvQnV0dG9uPlxyXG4gICAgICAgICAgICApfVxyXG4gICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcblxyXG4gICAgICAgIHsvKiDln7rmnKznirbmgIHkv6Hmga8gKi99XHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJncmlkIGdyaWQtY29scy0yIG1kOmdyaWQtY29scy00IGdhcC00IHRleHQtc21cIj5cclxuICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInRleHQtbXV0ZWQtZm9yZWdyb3VuZFwiPue9kee7nOeKtuaAgTo8L3NwYW4+XHJcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cIm1sLTIgZm9udC1tZWRpdW1cIj57aXNPbmxpbmUgPyAn5Zyo57q/JyA6ICfnprvnur8nfTwvc3Bhbj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwidGV4dC1tdXRlZC1mb3JlZ3JvdW5kXCI+5pyA5ZCO5ZCM5q2lOjwvc3Bhbj5cclxuICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwibWwtMiBmb250LW1lZGl1bVwiPntmb3JtYXRUaW1lKG1ldHJpY3MubGFzdFN5bmNUaW1lKX08L3NwYW4+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInRleHQtbXV0ZWQtZm9yZWdyb3VuZFwiPuaIkOWKn+eOhzo8L3NwYW4+XHJcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cIm1sLTIgZm9udC1tZWRpdW1cIj57c3VjY2Vzc1JhdGV9JTwvc3Bhbj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwidGV4dC1tdXRlZC1mb3JlZ3JvdW5kXCI+5bu26L+fOjwvc3Bhbj5cclxuICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwibWwtMiBmb250LW1lZGl1bVwiPnttZXRyaWNzLm5ldHdvcmtMYXRlbmN5fW1zPC9zcGFuPlxyXG4gICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcblxyXG4gICAgICAgIHsvKiDlkIzmraXov5vluqYgKi99XHJcbiAgICAgICAge2lzU3luY2luZyAmJiBvcGVyYXRpb25zLmxlbmd0aCA+IDAgJiYgKFxyXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzcGFjZS15LTJcIj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW4gdGV4dC1zbVwiPlxyXG4gICAgICAgICAgICAgIDxzcGFuPuWQjOatpei/m+W6pjwvc3Bhbj5cclxuICAgICAgICAgICAgICA8c3Bhbj57b3BlcmF0aW9ucy5maW5kKG9wID0+IG9wLnN0YXR1cyA9PT0gJ2luX3Byb2dyZXNzJyk/LnByb2dyZXNzIHx8IDB9JTwvc3Bhbj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDxQcm9ncmVzc1xyXG4gICAgICAgICAgICAgIHZhbHVlPXtvcGVyYXRpb25zLmZpbmQob3AgPT4gb3Auc3RhdHVzID09PSAnaW5fcHJvZ3Jlc3MnKT8ucHJvZ3Jlc3MgfHwgMH1cclxuICAgICAgICAgICAgICBjbGFzc05hbWU9XCJoLTJcIlxyXG4gICAgICAgICAgICAvPlxyXG4gICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgKX1cclxuICAgICAgPC9DYXJkSGVhZGVyPlxyXG5cclxuICAgICAge2V4cGFuZGVkICYmIHNob3dEZXRhaWxzICYmIChcclxuICAgICAgICA8Q2FyZENvbnRlbnQgY2xhc3NOYW1lPVwic3BhY2UteS00XCI+XHJcbiAgICAgICAgICA8U2VwYXJhdG9yIC8+XHJcblxyXG4gICAgICAgICAgey8qIOivpue7huaMh+aghyAqL31cclxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZ3JpZCBncmlkLWNvbHMtMSBtZDpncmlkLWNvbHMtMiBsZzpncmlkLWNvbHMtMyBnYXAtNFwiPlxyXG4gICAgICAgICAgICA8Q2FyZD5cclxuICAgICAgICAgICAgICA8Q2FyZENvbnRlbnQgY2xhc3NOYW1lPVwicC00XCI+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIGdhcC0yIG1iLTJcIj5cclxuICAgICAgICAgICAgICAgICAgPERhdGFiYXNlIGNsYXNzTmFtZT1cImgtNCB3LTQgdGV4dC1ibHVlLTUwMFwiIC8+XHJcbiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImZvbnQtbWVkaXVtXCI+5pON5L2c57uf6K6hPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInNwYWNlLXktMSB0ZXh0LXNtXCI+XHJcbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBqdXN0aWZ5LWJldHdlZW5cIj5cclxuICAgICAgICAgICAgICAgICAgICA8c3Bhbj7mgLvmk43kvZzmlbA6PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgIDxzcGFuPnttZXRyaWNzLnRvdGFsT3BlcmF0aW9uc308L3NwYW4+XHJcbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXgganVzdGlmeS1iZXR3ZWVuXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHNwYW4+5oiQ5YqfOjwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJ0ZXh0LWdyZWVuLTYwMFwiPnttZXRyaWNzLnN1Y2Nlc3NmdWxPcGVyYXRpb25zfTwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBqdXN0aWZ5LWJldHdlZW5cIj5cclxuICAgICAgICAgICAgICAgICAgICA8c3Bhbj7lpLHotKU6PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInRleHQtcmVkLTYwMFwiPnttZXRyaWNzLmZhaWxlZE9wZXJhdGlvbnN9PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgIDwvQ2FyZENvbnRlbnQ+XHJcbiAgICAgICAgICAgIDwvQ2FyZD5cclxuXHJcbiAgICAgICAgICAgIDxDYXJkPlxyXG4gICAgICAgICAgICAgIDxDYXJkQ29udGVudCBjbGFzc05hbWU9XCJwLTRcIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIgZ2FwLTIgbWItMlwiPlxyXG4gICAgICAgICAgICAgICAgICA8U2VydmVyIGNsYXNzTmFtZT1cImgtNCB3LTQgdGV4dC1ncmVlbi01MDBcIiAvPlxyXG4gICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJmb250LW1lZGl1bVwiPuaAp+iDveaMh+aghzwvc3Bhbj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzcGFjZS15LTEgdGV4dC1zbVwiPlxyXG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXgganVzdGlmeS1iZXR3ZWVuXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHNwYW4+5bmz5Z2H5ZCM5q2l5pe26Ze0Ojwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICA8c3Bhbj57bWV0cmljcy5hdmVyYWdlU3luY1RpbWV9bXM8L3NwYW4+XHJcbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXgganVzdGlmeS1iZXR3ZWVuXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHNwYW4+5pyN5Yqh5Zmo5ZON5bqUOjwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICA8c3Bhbj57bWV0cmljcy5zZXJ2ZXJSZXNwb25zZVRpbWV9bXM8L3NwYW4+XHJcbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXgganVzdGlmeS1iZXR3ZWVuXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHNwYW4+5Lyg6L6T6YCf546HOjwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICA8c3Bhbj57bWV0cmljcy5kYXRhVHJhbnNmZXJSYXRlfUtCL3M8L3NwYW4+XHJcbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgPC9DYXJkQ29udGVudD5cclxuICAgICAgICAgICAgPC9DYXJkPlxyXG5cclxuICAgICAgICAgICAgPENhcmQ+XHJcbiAgICAgICAgICAgICAgPENhcmRDb250ZW50IGNsYXNzTmFtZT1cInAtNFwiPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlciBnYXAtMiBtYi0yXCI+XHJcbiAgICAgICAgICAgICAgICAgIDxDbG91ZCBjbGFzc05hbWU9XCJoLTQgdy00IHRleHQtcHVycGxlLTUwMFwiIC8+XHJcbiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImZvbnQtbWVkaXVtXCI+5ZCM5q2l54q25oCBPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInNwYWNlLXktMSB0ZXh0LXNtXCI+XHJcbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBqdXN0aWZ5LWJldHdlZW5cIj5cclxuICAgICAgICAgICAgICAgICAgICA8c3Bhbj7lvoXlkIzmraXmk43kvZw6PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgIDxzcGFuPntzeW5jU3RhdHVzPy5wZW5kaW5nT3BlcmF0aW9ucyB8fCAwfTwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBqdXN0aWZ5LWJldHdlZW5cIj5cclxuICAgICAgICAgICAgICAgICAgICA8c3Bhbj7lhrLnqoHmlbDph486PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgIDxzcGFuPntzeW5jU3RhdHVzPy5jb25mbGljdHM/Lmxlbmd0aCB8fCAwfTwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBqdXN0aWZ5LWJldHdlZW5cIj5cclxuICAgICAgICAgICAgICAgICAgICA8c3Bhbj7lkIzmraXmqKHlvI86PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgIDxzcGFuPuiHquWKqDwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICA8L0NhcmRDb250ZW50PlxyXG4gICAgICAgICAgICA8L0NhcmQ+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgICB7Lyog5pyA6L+R5pON5L2c6K6w5b2VICovfVxyXG4gICAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgPGg0IGNsYXNzTmFtZT1cImZvbnQtbWVkaXVtIG1iLTJcIj7mnIDov5Hmk43kvZw8L2g0PlxyXG4gICAgICAgICAgICA8U2Nyb2xsQXJlYSBjbGFzc05hbWU9XCJoLTQ4IGJvcmRlciByb3VuZGVkLW1kIHAtMlwiPlxyXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic3BhY2UteS0yXCI+XHJcbiAgICAgICAgICAgICAgICB7b3BlcmF0aW9ucy5sZW5ndGggPT09IDAgPyAoXHJcbiAgICAgICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT1cInRleHQtc20gdGV4dC1tdXRlZC1mb3JlZ3JvdW5kIHRleHQtY2VudGVyIHB5LTRcIj5cclxuICAgICAgICAgICAgICAgICAgICDmmoLml6Dmk43kvZzorrDlvZVcclxuICAgICAgICAgICAgICAgICAgPC9wPlxyXG4gICAgICAgICAgICAgICAgKSA6IChcclxuICAgICAgICAgICAgICAgICAgb3BlcmF0aW9ucy5tYXAoKG9wZXJhdGlvbikgPT4gKFxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYga2V5PXtvcGVyYXRpb24uaWR9IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlbiB0ZXh0LXNtIHAtMiByb3VuZGVkIGJvcmRlclwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlciBnYXAtMlwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7b3BlcmF0aW9uLnN0YXR1cyA9PT0gJ2NvbXBsZXRlZCcgJiYgPENoZWNrQ2lyY2xlIGNsYXNzTmFtZT1cImgtMyB3LTMgdGV4dC1ncmVlbi01MDBcIiAvPn1cclxuICAgICAgICAgICAgICAgICAgICAgICAge29wZXJhdGlvbi5zdGF0dXMgPT09ICdmYWlsZWQnICYmIDxYQ2lyY2xlIGNsYXNzTmFtZT1cImgtMyB3LTMgdGV4dC1yZWQtNTAwXCIgLz59XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtvcGVyYXRpb24uc3RhdHVzID09PSAnaW5fcHJvZ3Jlc3MnICYmIDxDbG9jayBjbGFzc05hbWU9XCJoLTMgdy0zIHRleHQteWVsbG93LTUwMCBhbmltYXRlLXNwaW5cIiAvPn1cclxuICAgICAgICAgICAgICAgICAgICAgICAge29wZXJhdGlvbi5zdGF0dXMgPT09ICdwZW5kaW5nJyAmJiA8Q2xvY2sgY2xhc3NOYW1lPVwiaC0zIHctMyB0ZXh0LWdyYXktNTAwXCIgLz59XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPntvcGVyYXRpb24uZW50aXR5fTwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPEJhZGdlIHZhcmlhbnQ9XCJvdXRsaW5lXCIgY2xhc3NOYW1lPVwidGV4dC14c1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHtvcGVyYXRpb24udHlwZSA9PT0gJ3VwbG9hZCcgPyAn5LiK5LygJyA6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wZXJhdGlvbi50eXBlID09PSAnZG93bmxvYWQnID8gJ+S4i+i9vScgOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICBvcGVyYXRpb24udHlwZSA9PT0gJ2NvbmZsaWN0X3Jlc29sdXRpb24nID8gJ+WGsueqgeino+WGsycgOiAn5ZCI5bm2J31cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9CYWRnZT5cclxuICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlciBnYXAtMlwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7b3BlcmF0aW9uLnN0YXR1cyA9PT0gJ2luX3Byb2dyZXNzJyAmJiAoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPFByb2dyZXNzIHZhbHVlPXtvcGVyYXRpb24ucHJvZ3Jlc3N9IGNsYXNzTmFtZT1cInctMTYgaC0xXCIgLz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgKX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwidGV4dC14cyB0ZXh0LW11dGVkLWZvcmVncm91bmRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICB7Zm9ybWF0VGltZShvcGVyYXRpb24uc3RhcnRUaW1lKX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICkpXHJcbiAgICAgICAgICAgICAgICApfVxyXG4gICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8L1Njcm9sbEFyZWE+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L0NhcmRDb250ZW50PlxyXG4gICAgICApfVxyXG4gICAgPC9DYXJkPlxyXG4gIClcclxufVxyXG5cclxuLy8g5a+85Ye65a2Q57uE5Lu25L6b5YW25LuW5Zyw5pa55L2/55SoXHJcbmV4cG9ydCB7IFN5bmNPcGVyYXRpb24sIFN5bmNNZXRyaWNzIH0iXSwidmVyc2lvbiI6M30=