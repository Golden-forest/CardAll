{"file":"D:\\Projects\\CardEverything\\cardall-prototype\\tests\\unit\\services\\sync-strategy.test.ts","mappings":"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","names":[],"sources":["D:\\Projects\\CardEverything\\cardall-prototype\\tests\\unit\\services\\sync-strategy.test.ts"],"sourcesContent":["import { SyncStrategyService, type SyncConflict, type ResolutionStrategy, type SyncProgress } from '@/services/sync-strategy'\nimport { db } from '@/services/database'\n\n// 模拟数据库\njest.mock('@/services/database', () => ({\n  db: {\n    cards: {\n      get: jest.fn(),\n      add: jest.fn(),\n      update: jest.fn(),\n      delete: jest.fn(),\n      where: jest.fn().mockReturnThis(),\n      equals: jest.fn().mockReturnThis(),\n      toArray: jest.fn(),\n    },\n    folders: {\n      get: jest.fn(),\n      add: jest.fn(),\n      update: jest.fn(),\n      delete: jest.fn(),\n    },\n    tags: {\n      get: jest.fn(),\n      add: jest.fn(),\n      update: jest.fn(),\n      delete: jest.fn(),\n    },\n    syncHistory: {\n      add: jest.fn(),\n      where: jest.fn().mockReturnThis(),\n      equals: jest.fn().mockReturnThis(),\n      sort: jest.fn().mockReturnThis(),\n      toArray: jest.fn(),\n    }\n  }\n}))\n\n// 模拟 Supabase\njest.mock('@/services/supabase', () => ({\n  supabase: {\n    from: jest.fn().mockReturnThis(),\n    select: jest.fn().mockReturnThis(),\n    eq: jest.fn().mockReturnThis(),\n    gte: jest.fn().mockReturnThis(),\n    order: jest.fn().mockReturnThis(),\n    limit: jest.fn().mockReturnThis(),\n  }\n}))\n\ndescribe('SyncStrategyService', () => {\n  let service: SyncStrategyService\n  let mockDb: any\n  let mockSupabase: any\n\n  beforeEach(() => {\n    jest.clearAllMocks()\n    mockDb = db\n    mockSupabase = require('@/services/supabase').supabase\n    service = new SyncStrategyService()\n  })\n\n  describe('初始化', () => {\n    it('应该正确初始化服务', async () => {\n      await service.initialize()\n      expect(service).toBeDefined()\n      \n      // 验证冲突解决器已设置\n      const hasConflictResolvers = (service as any).conflictResolvers.size > 0\n      expect(hasConflictResolvers).toBe(true)\n    })\n  })\n\n  describe('增量同步', () => {\n    it('应该执行增量同步', async () => {\n      const userId = 'user-123'\n      const lastSyncTime = new Date(Date.now() - 86400000) // 1天前\n      \n      // 模拟云端数据\n      mockSupabase.from.mockReturnThis()\n      mockSupabase.select.mockReturnThis()\n      mockSupabase.eq.mockReturnThis()\n      mockSupabase.gte.mockReturnThis()\n      mockSupabase.order.mockReturnThis()\n      mockSupabase.limit.mockReturnThis()\n      \n      // 模拟卡片数据\n      const mockCards = [\n        {\n          id: 'card-1',\n          user_id: userId,\n          front_content: 'Front 1',\n          back_content: 'Back 1',\n          style: 'basic',\n          folder_id: null,\n          created_at: new Date().toISOString(),\n          updated_at: new Date().toISOString(),\n          sync_version: 2\n        }\n      ]\n      \n      mockSupabase.mockResolvedValueOnce({ data: mockCards, error: null })\n      mockSupabase.mockResolvedValueOnce({ data: [], error: null }) // folders\n      mockSupabase.mockResolvedValueOnce({ data: [], error: null }) // tags\n      \n      // 模拟本地数据\n      mockDb.cards.get.mockResolvedValueOnce(null)\n      mockDb.cards.add.mockResolvedValue('card-1')\n      \n      const progress = await service.performIncrementalSync(userId, lastSyncTime)\n      \n      expect(progress).toBeDefined()\n      expect(progress.downloaded).toBe(1)\n      expect(progress.uploaded).toBe(0)\n      expect(progress.conflicts).toBe(0)\n      expect(progress.isSuccessful).toBe(true)\n    })\n\n    it('应该处理增量同步中的冲突', async () => {\n      const userId = 'user-123'\n      const lastSyncTime = new Date(Date.now() - 86400000)\n      \n      // 模拟云端数据\n      mockSupabase.from.mockReturnThis()\n      mockSupabase.select.mockReturnThis()\n      mockSupabase.eq.mockReturnThis()\n      mockSupabase.gte.mockReturnThis()\n      \n      const cloudCard = {\n        id: 'card-1',\n        user_id: userId,\n        front_content: 'Cloud Front',\n        back_content: 'Cloud Back',\n        style: 'basic',\n        folder_id: null,\n        created_at: new Date(Date.now() - 3600000).toISOString(),\n        updated_at: new Date().toISOString(),\n        sync_version: 2\n      }\n      \n      mockSupabase.mockResolvedValueOnce({ data: [cloudCard], error: null })\n      mockSupabase.mockResolvedValueOnce({ data: [], error: null })\n      mockSupabase.mockResolvedValueOnce({ data: [], error: null })\n      \n      // 模拟本地数据（已修改）\n      const localCard = {\n        id: 'card-1',\n        frontContent: 'Local Front',\n        backContent: 'Local Back',\n        style: 'basic',\n        folderId: null,\n        isFlipped: false,\n        createdAt: new Date(Date.now() - 7200000),\n        updatedAt: new Date(Date.now() - 1800000), // 本地更新时间在云端之前\n        syncVersion: 1,\n        pendingSync: true\n      }\n      \n      mockDb.cards.get.mockResolvedValueOnce(localCard)\n      \n      const progress = await service.performIncrementalSync(userId, lastSyncTime)\n      \n      expect(progress.conflicts).toBe(1)\n      expect(progress.isSuccessful).toBe(true)\n    })\n\n    it('应该处理网络错误', async () => {\n      const userId = 'user-123'\n      const lastSyncTime = new Date(Date.now() - 86400000)\n      \n      mockSupabase.from.mockReturnThis()\n      mockSupabase.select.mockReturnThis()\n      mockSupabase.eq.mockReturnThis()\n      mockSupabase.gte.mockReturnThis()\n      mockSupabase.mockRejectedValueOnce(new Error('Network error'))\n      \n      const progress = await service.performIncrementalSync(userId, lastSyncTime)\n      \n      expect(progress.isSuccessful).toBe(false)\n      expect(progress.error).toBe('Network error')\n    })\n  })\n\n  describe('冲突检测', () => {\n    it('应该检测到数据冲突', async () => {\n      const localData = {\n        id: 'card-1',\n        frontContent: 'Local Content',\n        updatedAt: new Date(Date.now() - 3600000),\n        syncVersion: 1\n      }\n      \n      const cloudData = {\n        id: 'card-1',\n        front_content: 'Cloud Content',\n        updated_at: new Date(Date.now() - 1800000),\n        sync_version: 2\n      }\n      \n      const conflict = await service.detectConflict('cards', localData, cloudData)\n      \n      expect(conflict).toBeDefined()\n      expect(conflict?.id).toBeDefined()\n      expect(conflict?.table).toBe('cards')\n      expect(conflict?.localData).toBe(localData)\n      expect(conflict?.cloudData).toBe(cloudData)\n      expect(conflict?.conflictType).toBe('concurrent_modification')\n    })\n\n    it('应该检测到删除冲突', async () => {\n      const localData = {\n        id: 'card-1',\n        frontContent: 'Local Content',\n        isDeleted: false,\n        updatedAt: new Date(Date.now() - 3600000),\n        syncVersion: 1\n      }\n      \n      const cloudData = {\n        id: 'card-1',\n        front_content: 'Cloud Content',\n        is_deleted: true,\n        updated_at: new Date(Date.now() - 1800000),\n        sync_version: 2\n      }\n      \n      const conflict = await service.detectConflict('cards', localData, cloudData)\n      \n      expect(conflict).toBeDefined()\n      expect(conflict?.conflictType).toBe('delete_conflict')\n    })\n\n    it('应该识别无冲突的情况', async () => {\n      const localData = {\n        id: 'card-1',\n        frontContent: 'Same Content',\n        updatedAt: new Date(Date.now() - 3600000),\n        syncVersion: 1\n      }\n      \n      const cloudData = {\n        id: 'card-1',\n        front_content: 'Same Content',\n        updated_at: new Date(Date.now() - 1800000),\n        sync_version: 2\n      }\n      \n      const conflict = await service.detectConflict('cards', localData, cloudData)\n      \n      expect(conflict).toBeNull()\n    })\n  })\n\n  describe('冲突解决', () => {\n    it('应该使用\"本地优先\"策略解决冲突', async () => {\n      const conflict: SyncConflict = {\n        id: 'conflict-1',\n        table: 'cards',\n        localData: {\n          id: 'card-1',\n          frontContent: 'Local Content',\n          updatedAt: new Date()\n        },\n        cloudData: {\n          id: 'card-1',\n          front_content: 'Cloud Content',\n          updated_at: new Date()\n        },\n        conflictType: 'concurrent_modification',\n        detectedAt: new Date()\n      }\n      \n      const resolved = await service.resolveConflict(conflict, 'local')\n      \n      expect(resolved).toBeDefined()\n      expect(resolved.frontContent).toBe('Local Content')\n    })\n\n    it('应该使用\"云端优先\"策略解决冲突', async () => {\n      const conflict: SyncConflict = {\n        id: 'conflict-1',\n        table: 'cards',\n        localData: {\n          id: 'card-1',\n          frontContent: 'Local Content',\n          updatedAt: new Date()\n        },\n        cloudData: {\n          id: 'card-1',\n          front_content: 'Cloud Content',\n          updated_at: new Date()\n        },\n        conflictType: 'concurrent_modification',\n        detectedAt: new Date()\n      }\n      \n      const resolved = await service.resolveConflict(conflict, 'cloud')\n      \n      expect(resolved).toBeDefined()\n      expect(resolved.frontContent).toBe('Cloud Content')\n    })\n\n    it('应该使用\"合并\"策略解决冲突', async () => {\n      const conflict: SyncConflict = {\n        id: 'conflict-1',\n        table: 'cards',\n        localData: {\n          id: 'card-1',\n          frontContent: 'Local Front',\n          backContent: 'Local Back',\n          style: 'basic',\n          updatedAt: new Date()\n        },\n        cloudData: {\n          id: 'card-1',\n          front_content: 'Cloud Front',\n          back_content: 'Cloud Back',\n          style: 'advanced',\n          updated_at: new Date()\n        },\n        conflictType: 'concurrent_modification',\n        detectedAt: new Date()\n      }\n      \n      const resolved = await service.resolveConflict(conflict, 'merge')\n      \n      expect(resolved).toBeDefined()\n      // 合并策略应该包含两个版本的数据特征\n      expect(resolved.frontContent).toBeDefined()\n      expect(resolved.backContent).toBeDefined()\n    })\n\n    it('应该记录冲突解决历史', async () => {\n      const conflict: SyncConflict = {\n        id: 'conflict-1',\n        table: 'cards',\n        localData: {\n          id: 'card-1',\n          frontContent: 'Local Content',\n          updatedAt: new Date()\n        },\n        cloudData: {\n          id: 'card-1',\n          front_content: 'Cloud Content',\n          updated_at: new Date()\n        },\n        conflictType: 'concurrent_modification',\n        detectedAt: new Date()\n      }\n      \n      mockDb.syncHistory.add.mockResolvedValue('history-id')\n      \n      await service.resolveConflict(conflict, 'local')\n      \n      expect(mockDb.syncHistory.add).toHaveBeenCalledWith(\n        expect.objectContaining({\n          operation_type: 'conflict_resolution',\n          table_name: 'cards',\n          record_id: 'card-1',\n          status: 'success'\n        })\n      )\n    })\n  })\n\n  describe('三向合并', () => {\n    it('应该执行三向合并', async () => {\n      const baseData = {\n        id: 'card-1',\n        frontContent: 'Base Content',\n        backContent: 'Base Back',\n        style: 'basic',\n        syncVersion: 1\n      }\n      \n      const localData = {\n        id: 'card-1',\n        frontContent: 'Local Front',\n        backContent: 'Base Back', // 未修改\n        style: 'advanced', // 修改\n        syncVersion: 2\n      }\n      \n      const cloudData = {\n        id: 'card-1',\n        front_content: 'Base Content', // 未修改\n        back_content: 'Cloud Back', // 修改\n        style: 'basic', // 未修改\n        sync_version: 2\n      }\n      \n      const merged = await service.performThreeWayMerge('cards', baseData, localData, cloudData)\n      \n      expect(merged).toBeDefined()\n      expect(merged.frontContent).toBe('Local Front') // 来自本地\n      expect(merged.backContent).toBe('Cloud Back') // 来自云端\n      expect(merged.style).toBe('advanced') // 来自本地\n      expect(merged.syncVersion).toBe(3) // 版本递增\n    })\n\n    it('应该处理三向合并中的冲突', async () => {\n      const baseData = {\n        id: 'card-1',\n        frontContent: 'Base Content',\n        syncVersion: 1\n      }\n      \n      const localData = {\n        id: 'card-1',\n        frontContent: 'Local Content',\n        syncVersion: 2\n      }\n      \n      const cloudData = {\n        id: 'card-1',\n        front_content: 'Cloud Content',\n        sync_version: 2\n      }\n      \n      const merged = await service.performThreeWayMerge('cards', baseData, localData, cloudData)\n      \n      // 当同一字段被双方修改时，应该标记为需要手动解决\n      expect(merged).toBeDefined()\n      expect(merged.syncVersion).toBe(2) // 版本不递增，因为有冲突\n    })\n  })\n\n  describe('数据验证', () => {\n    it('应该验证本地数据完整性', async () => {\n      const validData = {\n        id: 'card-1',\n        frontContent: 'Front',\n        backContent: 'Back',\n        createdAt: new Date(),\n        updatedAt: new Date()\n      }\n      \n      const isValid = await service.validateLocalData('cards', validData)\n      expect(isValid).toBe(true)\n    })\n\n    it('应该检测本地数据损坏', async () => {\n      const invalidData = {\n        id: 'card-1',\n        frontContent: '', // 空内容\n        backContent: 'Back',\n        createdAt: new Date(),\n        updatedAt: new Date()\n      }\n      \n      const isValid = await service.validateLocalData('cards', invalidData)\n      expect(isValid).toBe(false)\n    })\n\n    it('应该验证云端数据完整性', async () => {\n      const validData = {\n        id: 'card-1',\n        front_content: 'Front',\n        back_content: 'Back',\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      }\n      \n      const isValid = await service.validateCloudData('cards', validData)\n      expect(isValid).toBe(true)\n    })\n  })\n\n  describe('同步历史', () => {\n    it('应该记录同步操作', async () => {\n      const syncRecord = {\n        operation_type: 'incremental_sync',\n        table_name: 'cards',\n        record_id: 'card-1',\n        status: 'success',\n        details: { downloaded: 5, uploaded: 3 }\n      }\n      \n      mockDb.syncHistory.add.mockResolvedValue('history-id')\n      \n      const recordId = await service.recordSyncOperation(syncRecord)\n      \n      expect(recordId).toBe('history-id')\n      expect(mockDb.syncHistory.add).toHaveBeenCalledWith(\n        expect.objectContaining({\n          ...syncRecord,\n          timestamp: expect.any(Date)\n        })\n      )\n    })\n\n    it('应该获取同步历史', async () => {\n      const mockHistory = [\n        {\n          id: 'history-1',\n          operation_type: 'incremental_sync',\n          table_name: 'cards',\n          status: 'success',\n          timestamp: new Date()\n        },\n        {\n          id: 'history-2',\n          operation_type: 'conflict_resolution',\n          table_name: 'folders',\n          status: 'success',\n          timestamp: new Date()\n        }\n      ]\n      \n      mockDb.syncHistory.toArray.mockResolvedValue(mockHistory)\n      \n      const history = await service.getSyncHistory()\n      \n      expect(history).toHaveLength(2)\n      expect(history[0].operation_type).toBe('incremental_sync')\n    })\n\n    it('应该能够获取同步统计', async () => {\n      const mockHistory = [\n        {\n          operation_type: 'incremental_sync',\n          status: 'success',\n          timestamp: new Date(),\n          details: { downloaded: 10, uploaded: 5 }\n        },\n        {\n          operation_type: 'incremental_sync',\n          status: 'failed',\n          timestamp: new Date(),\n          details: { downloaded: 0, uploaded: 0 }\n        }\n      ]\n      \n      mockDb.syncHistory.toArray.mockResolvedValue(mockHistory)\n      \n      const stats = await service.getSyncStats()\n      \n      expect(stats.totalSyncs).toBe(2)\n      expect(stats.successfulSyncs).toBe(1)\n      expect(stats.failedSyncs).toBe(1)\n      expect(stats.totalDownloaded).toBe(10)\n      expect(stats.totalUploaded).toBe(5)\n    })\n  })\n\n  describe('配置管理', () => {\n    it('应该能够更新同步策略配置', () => {\n      const newConfig = {\n        defaultResolutionStrategy: 'cloud' as ResolutionStrategy,\n        enableAutoMerge: true,\n        enableConflictDetection: true,\n        enableDataValidation: true,\n        syncBatchSize: 50,\n        maxRetries: 5,\n        retryDelay: 2000\n      }\n      \n      service.updateConfig(newConfig)\n      \n      // 验证配置已更新\n      expect((service as any).config).toMatchObject(newConfig)\n    })\n\n    it('应该验证配置参数', () => {\n      const invalidConfig = {\n        syncBatchSize: -1,\n        maxRetries: -1\n      }\n      \n      expect(() => service.updateConfig(invalidConfig as any)).toThrow()\n    })\n  })\n\n  describe('事件处理', () => {\n    it('应该能够添加和移除事件监听器', () => {\n      const mockListener = jest.fn()\n      const unsubscribe = service.onSyncProgress(mockListener)\n      \n      expect(typeof unsubscribe).toBe('function')\n      \n      // 触发事件\n      service['notifyProgress']({\n        total: 10,\n        processed: 5,\n        downloaded: 3,\n        uploaded: 2,\n        conflicts: 0,\n        isComplete: false\n      })\n      \n      expect(mockListener).toHaveBeenCalled()\n      \n      // 移除监听器\n      unsubscribe()\n      service['notifyProgress']({\n        total: 10,\n        processed: 6,\n        downloaded: 3,\n        uploaded: 3,\n        conflicts: 0,\n        isComplete: false\n      })\n      \n      expect(mockListener).toHaveBeenCalledTimes(1)\n    })\n  })\n\n  describe('错误处理', () => {\n    it('应该处理同步过程中的异常', async () => {\n      const userId = 'user-123'\n      const lastSyncTime = new Date(Date.now() - 86400000)\n      \n      // 模拟数据库错误\n      mockDb.cards.get.mockRejectedValue(new Error('Database error'))\n      \n      const progress = await service.performIncrementalSync(userId, lastSyncTime)\n      \n      expect(progress.isSuccessful).toBe(false)\n      expect(progress.error).toBeDefined()\n    })\n\n    it('应该处理冲突解决中的异常', async () => {\n      const conflict: SyncConflict = {\n        id: 'conflict-1',\n        table: 'cards',\n        localData: { id: 'card-1', frontContent: 'Local' },\n        cloudData: { id: 'card-1', front_content: 'Cloud' },\n        conflictType: 'concurrent_modification',\n        detectedAt: new Date()\n      }\n      \n      // 模拟解决器失败\n      jest.spyOn(service as any, 'applyResolutionStrategy').mockRejectedValue(new Error('Resolution failed'))\n      \n      await expect(service.resolveConflict(conflict, 'local')).rejects.toThrow('Resolution failed')\n    })\n  })\n})"],"version":3}