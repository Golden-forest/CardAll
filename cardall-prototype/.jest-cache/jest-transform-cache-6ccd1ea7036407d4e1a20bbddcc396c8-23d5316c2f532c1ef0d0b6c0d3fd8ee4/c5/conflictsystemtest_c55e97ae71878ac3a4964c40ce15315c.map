{"file":"D:\\Projects\\CardEverything\\cardall-prototype\\src\\__tests__\\conflict\\conflict-system.test.ts","mappings":";AAAA;;;;GAIG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASH,YAAY;AACZ,IAAI,CAAC,IAAI,CAAC,2CAA2C,EAAE,GAAG,EAAE,CAAC,CAAC;IAC5D,kBAAkB,EAAE;QAClB,SAAS,EAAE,IAAI,CAAC,EAAE,EAAE;QACpB,YAAY,EAAE,IAAI,CAAC,EAAE,EAAE;QACvB,WAAW,EAAE,IAAI,CAAC,EAAE,EAAE;QACtB,eAAe,EAAE,IAAI,CAAC,EAAE,EAAE;QAC1B,oBAAoB,EAAE,IAAI,CAAC,EAAE,EAAE;QAC/B,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE;QACf,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE;QACb,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE;KACf;CACF,CAAC,CAAC,CAAA;AAEH,cAAc;AACd,IAAI,CAAC,IAAI,CAAC,mCAAmC,EAAE,GAAG,EAAE,CAAC,CAAC;IACpD,kBAAkB,EAAE;QAClB,sBAAsB,EAAE,IAAI,CAAC,EAAE,EAAE;QACjC,uBAAuB,EAAE,IAAI,CAAC,EAAE,EAAE;QAClC,mBAAmB,EAAE,IAAI,CAAC,EAAE,EAAE;QAC9B,oBAAoB,EAAE,IAAI,CAAC,EAAE,EAAE;QAC/B,kBAAkB,EAAE,IAAI,CAAC,EAAE,EAAE;KAC9B;CACF,CAAC,CAAC,CAAA;AA9BH,6CAA8B;AAC9B,kDAAuF;AACvF,yEAAoE;AACpE,yDAAoD;AACpD,oFAA8E;AAC9E,2EAAsE;AA2BtE,QAAQ,CAAC,gBAAgB,EAAE,GAAG,EAAE;IAC9B,MAAM,aAAa,GAAG;QACpB;YACE,EAAE,EAAE,YAAY;YAChB,IAAI,EAAE,cAAc;YACpB,UAAU,EAAE,MAAM;YAClB,QAAQ,EAAE,QAAQ;YAClB,SAAS,EAAE,IAAI,IAAI,CAAC,qBAAqB,CAAC;YAC1C,YAAY,EAAE,UAAU;YACxB,QAAQ,EAAE,MAAe;YACzB,MAAM,EAAE,SAAkB;YAC1B,SAAS,EAAE,IAAI,IAAI,CAAC,qBAAqB,CAAC;YAC1C,YAAY,EAAE;gBACZ,OAAO,EAAE;oBACP,YAAY,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE;oBAChD,WAAW,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE;iBAChD;aACF;YACD,aAAa,EAAE;gBACb,OAAO,EAAE;oBACP,YAAY,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE;oBAChD,WAAW,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE;iBAChD;aACF;YACD,cAAc,EAAE,CAAC,OAAO,EAAE,SAAS,CAAC;SACrC;QACD;YACE,EAAE,EAAE,YAAY;YAChB,IAAI,EAAE,aAAa;YACnB,UAAU,EAAE,QAAQ;YACpB,QAAQ,EAAE,UAAU;YACpB,SAAS,EAAE,IAAI,IAAI,CAAC,qBAAqB,CAAC;YAC1C,YAAY,EAAE,UAAU;YACxB,QAAQ,EAAE,QAAiB;YAC3B,MAAM,EAAE,SAAkB;YAC1B,SAAS,EAAE,IAAI,IAAI,CAAC,qBAAqB,CAAC;YAC1C,YAAY,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;YAChC,aAAa,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;SAClC;KACF,CAAA;IAED,MAAM,cAAc,GAAG;QACrB,SAAS,EAAE,KAAK;QAChB,cAAc,EAAE,IAAI;QACpB,iBAAiB,EAAE,CAAC;QACpB,SAAS,EAAE,CAAC;QACZ,YAAY,EAAE,IAAI;QAClB,YAAY,EAAE,IAAI,IAAI,CAAC,qBAAqB,CAAC;QAC7C,aAAa,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;QAC/B,UAAU,EAAE,EAAE;QACd,eAAe,EAAE,CAAC;QAClB,WAAW,EAAE,CAAC;QACd,cAAc,EAAE,aAAa;KAC9B,CAAA;IAED,UAAU,CAAC,GAAG,EAAE;QACd,IAAI,CAAC,aAAa,EAAE,CAGnB;QAAC,yCAAkB,CAAC,SAAuB,CAAC,eAAe,CAAC,cAAc,CAAC,CAC3E;QAAC,yCAAkB,CAAC,YAA0B,CAAC,eAAe,CAAC,aAAa,CAAC,CAC7E;QAAC,yCAAkB,CAAC,WAAyB,CAAC,kBAAkB,CAAC,CAAC,EAAE,EAAE,EAAE,CACvE,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CACrC,CACA;QAAC,yCAAkB,CAAC,eAA6B,CAAC,iBAAiB,CAAC,IAAI,CAAC,CACzE;QAAC,yCAAkB,CAAC,oBAAkC,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAC3E;QAAC,wCAAkB,CAAC,kBAAgC,CAAC,eAAe,CAAC;YACpE,UAAU,EAAE,EAAE;YACd,WAAW,EAAE,EAAE,GAAG,IAAI,GAAG,IAAI;YAC7B,cAAc,EAAE,GAAG;SACpB,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;QAC7B,EAAE,CAAC,YAAY,EAAE,GAAG,EAAE;YACpB,IAAA,cAAM,EACJ,KAAK,CAAC,aAAa,CAAC,8BAAa,EAAE;gBACjC,MAAM,EAAE,IAAI;gBACZ,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE;aACnB,CAAC,CACH,CAAA;YAED,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAA;YACtD,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAA;YACrD,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAA;QACpD,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,UAAU,EAAE,GAAG,EAAE;YAClB,IAAA,cAAM,EACJ,KAAK,CAAC,aAAa,CAAC,8BAAa,EAAE;gBACjC,MAAM,EAAE,IAAI;gBACZ,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE;aACnB,CAAC,CACH,CAAA;YAED,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAA;YACpD,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAA;YACpD,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAA;QACxD,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,UAAU,EAAE,KAAK,IAAI,EAAE;YACxB,IAAA,cAAM,EACJ,KAAK,CAAC,aAAa,CAAC,8BAAa,EAAE;gBACjC,MAAM,EAAE,IAAI;gBACZ,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE;aACnB,CAAC,CACH,CAAA;YAED,MAAM,WAAW,GAAG,cAAM,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAA;YAC1D,iBAAS,CAAC,MAAM,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,CAAA;YAE3D,MAAM,IAAA,eAAO,EAAC,GAAG,EAAE;gBACjB,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAA;gBACtD,MAAM,CAAC,cAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,iBAAiB,EAAE,CAAA;YAC5D,CAAC,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,UAAU,EAAE,KAAK,IAAI,EAAE;YACxB,IAAA,cAAM,EACJ,KAAK,CAAC,aAAa,CAAC,8BAAa,EAAE;gBACjC,MAAM,EAAE,IAAI;gBACZ,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE;aACnB,CAAC,CACH,CAAA;YAED,WAAW;YACX,MAAM,kBAAkB,GAAG,cAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAA;YACnD,iBAAS,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAA;YAEnC,MAAM,IAAA,eAAO,EAAC,GAAG,EAAE;gBACjB,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAA;gBACpD,MAAM,CAAC,cAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,iBAAiB,EAAE,CAAA;YAC9D,CAAC,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,YAAY,EAAE,KAAK,IAAI,EAAE;YAC1B,IAAA,cAAM,EACJ,KAAK,CAAC,aAAa,CAAC,8BAAa,EAAE;gBACjC,MAAM,EAAE,IAAI;gBACZ,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE;aACnB,CAAC,CACH,CAAA;YAED,MAAM,UAAU,GAAG,cAAM,CAAC,YAAY,CAAC,UAAU,CAAC,CAAA;YAClD,iBAAS,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAA;YAC9B,iBAAS,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAA;YAE9B,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAA;QAC3D,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,YAAY,EAAE,KAAK,IAAI,EAAE;YAC1B,IAAA,cAAM,EACJ,KAAK,CAAC,aAAa,CAAC,8BAAa,EAAE;gBACjC,MAAM,EAAE,IAAI;gBACZ,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE;aACnB,CAAC,CACH,CAAA;YAED,SAAS;YACT,MAAM,UAAU,GAAG,cAAM,CAAC,YAAY,CAAC,UAAU,CAAC,CAAA;YAClD,iBAAS,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAA;YAC9B,iBAAS,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAA;YAE9B,WAAW;YACX,MAAM,gBAAgB,GAAG,cAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAA;YACnD,iBAAS,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAA;YAEjC,MAAM,IAAA,eAAO,EAAC,GAAG,EAAE;gBACjB,MAAM,CAAC,yCAAkB,CAAC,eAAe,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAA;YACrE,CAAC,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,YAAY,EAAE,KAAK,IAAI,EAAE;YAC1B,IAAA,cAAM,EACJ,KAAK,CAAC,aAAa,CAAC,8BAAa,EAAE;gBACjC,MAAM,EAAE,IAAI;gBACZ,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE;aACnB,CAAC,CACH,CAAA;YAED,MAAM,gBAAgB,GAAG,cAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA;YACvD,iBAAS,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAA;YAEjC,MAAM,IAAA,eAAO,EAAC,GAAG,EAAE;gBACjB,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAA;YACtD,CAAC,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,YAAY,EAAE,KAAK,IAAI,EAAE;YAC1B,IAAA,cAAM,EACJ,KAAK,CAAC,aAAa,CAAC,8BAAa,EAAE;gBACjC,MAAM,EAAE,IAAI;gBACZ,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE;aACnB,CAAC,CACH,CAAA;YAED,MAAM,aAAa,GAAG,cAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAA;YAC5C,iBAAS,CAAC,KAAK,CAAC,aAAa,CAAC,CAAA;YAE9B,MAAM,IAAA,eAAO,EAAC,GAAG,EAAE;gBACjB,MAAM,CAAC,yCAAkB,CAAC,SAAS,CAAC,CAAC,gBAAgB,EAAE,CAAA;YACzD,CAAC,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,YAAY,EAAE,KAAK,IAAI,EAAE;YACzB,yCAAkB,CAAC,SAAuB,CAAC,eAAe,CAAC;gBAC1D,GAAG,cAAc;gBACjB,SAAS,EAAE,IAAI;gBACf,iBAAiB,EAAE,CAAC;aACrB,CAAC,CAAA;YAEF,IAAA,cAAM,EACJ,KAAK,CAAC,aAAa,CAAC,8BAAa,EAAE;gBACjC,MAAM,EAAE,IAAI;gBACZ,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE;aACnB,CAAC,CACH,CAAA;YAED,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAA;YACtD,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAA;QACvD,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,YAAY,EAAE,KAAK,IAAI,EAAE;YACzB,yCAAkB,CAAC,SAAuB,CAAC,eAAe,CAAC;gBAC1D,GAAG,cAAc;gBACjB,aAAa,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE;aACjC,CAAC,CAAA;YAEF,IAAA,cAAM,EACJ,KAAK,CAAC,aAAa,CAAC,8BAAa,EAAE;gBACjC,MAAM,EAAE,IAAI;gBACZ,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE;aACnB,CAAC,CACH,CAAA;YAED,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAA;QACpD,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,mBAAmB,EAAE,GAAG,EAAE;QACjC,IAAI,UAAe,CAAA;QAEnB,MAAM,aAAa,GAAG,GAAG,EAAE;YACzB,UAAU,GAAG,IAAA,4BAAY,GAAE,CAAA;YAC3B,OAAO,KAAK,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,EAAE,MAAM,CAAC,CAAA;QACjD,CAAC,CAAA;QAED,UAAU,CAAC,GAAG,EAAE;YACd,IAAA,cAAM,EAAC,KAAK,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC,CAAA;QAC5C,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,WAAW,EAAE,GAAG,EAAE;YACnB,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,CAAA;YACnD,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;YAC1C,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;YACxC,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QACrC,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,UAAU,EAAE,GAAG,EAAE;YAClB,MAAM,KAAK,GAAG,UAAU,CAAC,QAAQ,EAAE,CAAA;YACnC,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;YACpC,MAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;YACtC,MAAM,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;QACzC,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,UAAU,EAAE,GAAG,EAAE;YAClB,MAAM,gBAAgB,GAAG,UAAU,CAAC,mBAAmB,EAAE,CAAA;YACzD,MAAM,CAAC,gBAAgB,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAA;YAExC,MAAM,qBAAqB,GAAG,UAAU,CAAC,wBAAwB,EAAE,CAAA;YACnE,MAAM,CAAC,qBAAqB,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAA;QAC/C,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,UAAU,EAAE,KAAK,IAAI,EAAE;YACxB,MAAM,UAAU,CAAC,eAAe,CAAC,YAAY,EAAE;gBAC7C,IAAI,EAAE,OAAO;gBACb,MAAM,EAAE,QAAQ;aACjB,CAAC,CAAA;YAEF,MAAM,CAAC,yCAAkB,CAAC,eAAe,CAAC,CAAC,oBAAoB,CAC7D,YAAY,EACZ,OAAO,EACP,SAAS,CACV,CAAA;QACH,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,YAAY,EAAE,KAAK,IAAI,EAAE;YAC1B,MAAM,UAAU,CAAC,qBAAqB,CAAC,CAAC,YAAY,EAAE,YAAY,CAAC,EAAE;gBACnE,IAAI,EAAE,OAAO;gBACb,MAAM,EAAE,QAAQ;aACjB,CAAC,CAAA;YAEF,MAAM,CAAC,yCAAkB,CAAC,eAAe,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAA;QACrE,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,YAAY,EAAE,KAAK,IAAI,EAAE;YAC1B,MAAM,aAAa,GAAG,MAAM,UAAU,CAAC,oBAAoB,EAAE,CAAA;YAE7D,MAAM,CAAC,yCAAkB,CAAC,oBAAoB,CAAC,CAAC,gBAAgB,EAAE,CAAA;YAClE,MAAM,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;QAC/B,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,WAAW,EAAE,KAAK,IAAI,EAAE;YACzB,MAAM,UAAU,CAAC,eAAe,EAAE,CAAA;YAElC,MAAM,CAAC,yCAAkB,CAAC,IAAI,CAAC,CAAC,oBAAoB,CAAC;gBACnD,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,eAAe;aAC3B,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,YAAY,EAAE,KAAK,IAAI,EAAE;YAC1B,MAAM,OAAO,GAAG,MAAM,UAAU,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAA;YAEjE,MAAM,CAAC,OAAO,CAAC,CAAC,UAAU,EAAE,CAAA;YAC5B,MAAM,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAA;QACxC,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,UAAU,EAAE,KAAK,IAAI,EAAE;YACvB,yCAAkB,CAAC,eAA6B,CAAC,iBAAiB,CACjE,IAAI,KAAK,CAAC,MAAM,CAAC,CAClB,CAAA;YAED,MAAM,UAAU,CAAC,eAAe,CAAC,YAAY,EAAE;gBAC7C,IAAI,EAAE,OAAO;gBACb,MAAM,EAAE,IAAI;aACb,CAAC,CAAA;YAEF,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;QACvC,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,QAAQ,EAAE,GAAG,EAAE;QACtB,EAAE,CAAC,cAAc,EAAE,KAAK,IAAI,EAAE;YAC5B,MAAM,EAAE,MAAM,EAAE,GAAG,IAAA,kBAAU,EAAC,GAAG,EAAE,CAAC,IAAA,4BAAY,GAAE,EAAE;gBAClD,OAAO,EAAE,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC,CACzB,KAAK,CAAC,aAAa,CAAC,qBAAqB,EAAE,IAAI,EAAE,QAAQ,CAAC,CAC3D;aACF,CAAC,CAAA;YAEF,MAAM,MAAM,CAAC,OAAO,CAAC,eAAe,CAAC,YAAY,EAAE;gBACjD,IAAI,EAAE,OAAO;gBACb,MAAM,EAAE,IAAI;aACb,CAAC,CAAA;YAEF,MAAM,CAAC,wCAAkB,CAAC,uBAAuB,CAAC,CAAC,gBAAgB,EAAE,CAAA;YACrE,MAAM,CAAC,wCAAkB,CAAC,oBAAoB,CAAC,CAAC,oBAAoB,CAClE,kBAAkB,EAClB,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,EAClB,IAAI,CACL,CAAA;QACH,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,cAAc,EAAE,KAAK,IAAI,EAAE;YAC5B,MAAM,EAAE,MAAM,EAAE,GAAG,IAAA,kBAAU,EAAC,GAAG,EAAE,CAAC,IAAA,4BAAY,GAAE,EAAE;gBAClD,OAAO,EAAE,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC,CACzB,KAAK,CAAC,aAAa,CAAC,qBAAqB,EAAE,IAAI,EAAE,QAAQ,CAAC,CAC3D;aACF,CAAC,CAAA;YAEF,MAAM,MAAM,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAC,YAAY,CAAC,EAAE;gBACzD,IAAI,EAAE,OAAO;gBACb,MAAM,EAAE,IAAI;aACb,CAAC,CAAA;YAEF,MAAM,CAAC,wCAAkB,CAAC,mBAAmB,CAAC,CAAC,gBAAgB,EAAE,CAAA;QACnE,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,MAAM,EAAE,GAAG,EAAE;QACpB,EAAE,CAAC,UAAU,EAAE,KAAK,IAAI,EAAE;YACvB,yCAAkB,CAAC,eAA6B,CAAC,iBAAiB,CACjE,IAAI,KAAK,CAAC,QAAQ,CAAC,CACpB,CAAA;YAED,IAAA,cAAM,EACJ,KAAK,CAAC,aAAa,CAAC,8BAAa,EAAE;gBACjC,MAAM,EAAE,IAAI;gBACZ,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE;aACnB,CAAC,CACH,CAAA;YAED,MAAM,aAAa,GAAG,cAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA;YACpD,iBAAS,CAAC,KAAK,CAAC,aAAa,CAAC,CAAA;YAE9B,MAAM,IAAA,eAAO,EAAC,GAAG,EAAE;gBACjB,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAA;YACxD,CAAC,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,UAAU,EAAE,KAAK,IAAI,EAAE;YACvB,yCAAkB,CAAC,eAA6B,CAAC,iBAAiB,CACjE,IAAI,KAAK,CAAC,MAAM,CAAC,CAClB,CAAA;YAED,IAAA,cAAM,EACJ,KAAK,CAAC,aAAa,CAAC,8BAAa,EAAE;gBACjC,MAAM,EAAE,IAAI;gBACZ,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE;aACnB,CAAC,CACH,CAAA;YAED,MAAM,aAAa,GAAG,cAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA;YACpD,iBAAS,CAAC,KAAK,CAAC,aAAa,CAAC,CAAA;YAE9B,MAAM,IAAA,eAAO,EAAC,GAAG,EAAE;gBACjB,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAA;YACtD,CAAC,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,UAAU,EAAE,KAAK,IAAI,EAAE;YACvB,yCAAkB,CAAC,eAA6B,CAAC,iBAAiB,CACjE,IAAI,KAAK,CAAC,YAAY,CAAC,CACxB,CAAA;YAED,IAAA,cAAM,EACJ,KAAK,CAAC,aAAa,CAAC,8BAAa,EAAE;gBACjC,MAAM,EAAE,IAAI;gBACZ,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE;aACnB,CAAC,CACH,CAAA;YAED,MAAM,aAAa,GAAG,cAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA;YACpD,iBAAS,CAAC,KAAK,CAAC,aAAa,CAAC,CAAA;YAE9B,MAAM,IAAA,eAAO,EAAC,GAAG,EAAE;gBACjB,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAA;YAC5D,CAAC,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,MAAM,EAAE,GAAG,EAAE;QACpB,EAAE,CAAC,UAAU,EAAE,GAAG,EAAE;YAClB,IAAA,cAAM,EACJ,KAAK,CAAC,aAAa,CAAC,8BAAa,EAAE;gBACjC,MAAM,EAAE,IAAI;gBACZ,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE;aACnB,CAAC,CACH,CAAA;YAED,MAAM,aAAa,GAAG,cAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;YAC7D,iBAAS,CAAC,OAAO,CAAC,aAAc,EAAE,EAAE,GAAG,EAAE,OAAO,EAAE,CAAC,CAAA;YAEnD,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAA;QACtD,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,eAAe,EAAE,GAAG,EAAE;YACvB,IAAA,cAAM,EACJ,KAAK,CAAC,aAAa,CAAC,8BAAa,EAAE;gBACjC,MAAM,EAAE,IAAI;gBACZ,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE;aACnB,CAAC,CACH,CAAA;YAED,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,eAAe,CAAC,YAAY,EAAE,MAAM,CAAC,CAAA;YACxE,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,eAAe,CAAC,iBAAiB,EAAE,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAA;QAC3F,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,WAAW,EAAE,GAAG,EAAE;YACnB,IAAA,cAAM,EACJ,KAAK,CAAC,aAAa,CAAC,8BAAa,EAAE;gBACjC,MAAM,EAAE,IAAI;gBACZ,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE;aACnB,CAAC,CACH,CAAA;YAED,MAAM,aAAa,GAAG,cAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAA;YAC/C,MAAM,CAAC,aAAa,CAAC,CAAC,eAAe,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAA;QAC9D,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA;AAEF,OAAO;AACP,MAAM,qBAAqB,GAAG,CAAC,EAAE,QAAQ,EAAiC,EAAE,EAAE;IAC5E,OAAO,KAAK,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAA;AACnD,CAAC,CAAA","names":[],"sources":["D:\\Projects\\CardEverything\\cardall-prototype\\src\\__tests__\\conflict\\conflict-system.test.ts"],"sourcesContent":["/**\r\n * 冲突系统测试\r\n *\r\n * 测试冲突检测、解决和UI交互的完整流程\r\n */\r\n\r\nimport * as React from 'react'\r\nimport { render, screen, fireEvent, waitFor, renderHook } from '@testing-library/react'\r\nimport { ConflictPanel } from '@/components/conflict/conflict-panel'\r\nimport { useConflicts } from '@/hooks/use-conflicts'\r\nimport { unifiedSyncService } from '@/services/core/sync/unified-sync.service'\r\nimport { performanceMonitor } from '@/services/ui/performance-monitor'\r\n\r\n// Mock 同步服务\r\njest.mock('@/services/core/sync/unified-sync.service', () => ({\r\n  unifiedSyncService: {\r\n    getStatus: jest.fn(),\r\n    getConflicts: jest.fn(),\r\n    getConflict: jest.fn(),\r\n    resolveConflict: jest.fn(),\r\n    autoResolveConflicts: jest.fn(),\r\n    sync: jest.fn(),\r\n    on: jest.fn(),\r\n    off: jest.fn()\r\n  }\r\n}))\r\n\r\n// Mock 性能监控服务\r\njest.mock('@/services/ui/performance-monitor', () => ({\r\n  performanceMonitor: {\r\n    startConflictDetection: jest.fn(),\r\n    startConflictResolution: jest.fn(),\r\n    startBatchOperation: jest.fn(),\r\n    trackUserInteraction: jest.fn(),\r\n    getRealtimeMetrics: jest.fn()\r\n  }\r\n}))\r\n\r\ndescribe('ConflictSystem', () => {\r\n  const mockConflicts = [\r\n    {\r\n      id: 'conflict_1',\r\n      type: 'card_content',\r\n      entityType: 'card',\r\n      entityId: 'card_1',\r\n      timestamp: new Date('2024-01-01T10:00:00'),\r\n      sourceDevice: 'device_1',\r\n      severity: 'high' as const,\r\n      status: 'pending' as const,\r\n      createdAt: new Date('2024-01-01T10:00:00'),\r\n      localVersion: {\r\n        content: {\r\n          frontContent: { title: '本地标题', content: '本地内容' },\r\n          backContent: { title: '背面本地', content: '背面内容' }\r\n        }\r\n      },\r\n      remoteVersion: {\r\n        content: {\r\n          frontContent: { title: '远程标题', content: '远程内容' },\r\n          backContent: { title: '背面远程', content: '背面内容' }\r\n        }\r\n      },\r\n      conflictFields: ['title', 'content']\r\n    },\r\n    {\r\n      id: 'conflict_2',\r\n      type: 'folder_name',\r\n      entityType: 'folder',\r\n      entityId: 'folder_1',\r\n      timestamp: new Date('2024-01-01T11:00:00'),\r\n      sourceDevice: 'device_2',\r\n      severity: 'medium' as const,\r\n      status: 'pending' as const,\r\n      createdAt: new Date('2024-01-01T11:00:00'),\r\n      localVersion: { name: '本地文件夹名' },\r\n      remoteVersion: { name: '远程文件夹名' }\r\n    }\r\n  ]\r\n\r\n  const mockSyncStatus = {\r\n    isSyncing: false,\r\n    currentSession: null,\r\n    pendingOperations: 2,\r\n    conflicts: 2,\r\n    hasConflicts: true,\r\n    lastSyncTime: new Date('2024-01-01T09:00:00'),\r\n    networkStatus: { online: true },\r\n    totalSyncs: 10,\r\n    successfulSyncs: 8,\r\n    failedSyncs: 2,\r\n    conflictsArray: mockConflicts\r\n  }\r\n\r\n  beforeEach(() => {\r\n    jest.clearAllMocks()\r\n\r\n    // 设置默认的mock返回值\r\n    ;(unifiedSyncService.getStatus as jest.Mock).mockReturnValue(mockSyncStatus)\r\n    ;(unifiedSyncService.getConflicts as jest.Mock).mockReturnValue(mockConflicts)\r\n    ;(unifiedSyncService.getConflict as jest.Mock).mockImplementation((id) =>\r\n      mockConflicts.find(c => c.id === id)\r\n    )\r\n    ;(unifiedSyncService.resolveConflict as jest.Mock).mockResolvedValue(true)\r\n    ;(unifiedSyncService.autoResolveConflicts as jest.Mock).mockResolvedValue(1)\r\n    ;(performanceMonitor.getRealtimeMetrics as jest.Mock).mockReturnValue({\r\n      renderTime: 50,\r\n      memoryUsage: 50 * 1024 * 1024,\r\n      networkLatency: 100\r\n    })\r\n  })\r\n\r\n  describe('ConflictPanel', () => {\r\n    it('应该正确渲染冲突面板', () => {\r\n      render(\r\n        React.createElement(ConflictPanel, {\r\n          isOpen: true,\r\n          onClose: jest.fn()\r\n        })\r\n      )\r\n\r\n      expect(screen.getByText('冲突管理中心')).toBeInTheDocument()\r\n      expect(screen.getByText('2 待解决')).toBeInTheDocument()\r\n      expect(screen.getByText('在线')).toBeInTheDocument()\r\n    })\r\n\r\n    it('应该显示冲突列表', () => {\r\n      render(\r\n        React.createElement(ConflictPanel, {\r\n          isOpen: true,\r\n          onClose: jest.fn()\r\n        })\r\n      )\r\n\r\n      expect(screen.getByText('本地标题')).toBeInTheDocument()\r\n      expect(screen.getByText('远程标题')).toBeInTheDocument()\r\n      expect(screen.getByText('本地文件夹名')).toBeInTheDocument()\r\n    })\r\n\r\n    it('应该支持搜索冲突', async () => {\r\n      render(\r\n        React.createElement(ConflictPanel, {\r\n          isOpen: true,\r\n          onClose: jest.fn()\r\n        })\r\n      )\r\n\r\n      const searchInput = screen.getByPlaceholderText('搜索冲突...')\r\n      fireEvent.change(searchInput, { target: { value: '文件夹' } })\r\n\r\n      await waitFor(() => {\r\n        expect(screen.getByText('本地文件夹名')).toBeInTheDocument()\r\n        expect(screen.queryByText('本地标题')).not.toBeInTheDocument()\r\n      })\r\n    })\r\n\r\n    it('应该支持过滤冲突', async () => {\r\n      render(\r\n        React.createElement(ConflictPanel, {\r\n          isOpen: true,\r\n          onClose: jest.fn()\r\n        })\r\n      )\r\n\r\n      // 点击高优先级过滤\r\n      const highPriorityButton = screen.getByText('高优先级')\r\n      fireEvent.click(highPriorityButton)\r\n\r\n      await waitFor(() => {\r\n        expect(screen.getByText('本地标题')).toBeInTheDocument()\r\n        expect(screen.queryByText('本地文件夹名')).not.toBeInTheDocument()\r\n      })\r\n    })\r\n\r\n    it('应该支持选择多个冲突', async () => {\r\n      render(\r\n        React.createElement(ConflictPanel, {\r\n          isOpen: true,\r\n          onClose: jest.fn()\r\n        })\r\n      )\r\n\r\n      const checkboxes = screen.getAllByRole('checkbox')\r\n      fireEvent.click(checkboxes[0])\r\n      fireEvent.click(checkboxes[1])\r\n\r\n      expect(screen.getByText('已选择 2 个冲突')).toBeInTheDocument()\r\n    })\r\n\r\n    it('应该支持批量解决冲突', async () => {\r\n      render(\r\n        React.createElement(ConflictPanel, {\r\n          isOpen: true,\r\n          onClose: jest.fn()\r\n        })\r\n      )\r\n\r\n      // 选择两个冲突\r\n      const checkboxes = screen.getAllByRole('checkbox')\r\n      fireEvent.click(checkboxes[0])\r\n      fireEvent.click(checkboxes[1])\r\n\r\n      // 批量保留本地版本\r\n      const batchLocalButton = screen.getByText('批量保留本地')\r\n      fireEvent.click(batchLocalButton)\r\n\r\n      await waitFor(() => {\r\n        expect(unifiedSyncService.resolveConflict).toHaveBeenCalledTimes(2)\r\n      })\r\n    })\r\n\r\n    it('应该支持查看冲突详情', async () => {\r\n      render(\r\n        React.createElement(ConflictPanel, {\r\n          isOpen: true,\r\n          onClose: jest.fn()\r\n        })\r\n      )\r\n\r\n      const viewDetailButton = screen.getAllByText('查看详情')[0]\r\n      fireEvent.click(viewDetailButton)\r\n\r\n      await waitFor(() => {\r\n        expect(screen.getByText('冲突详情')).toBeInTheDocument()\r\n      })\r\n    })\r\n\r\n    it('应该支持刷新冲突列表', async () => {\r\n      render(\r\n        React.createElement(ConflictPanel, {\r\n          isOpen: true,\r\n          onClose: jest.fn()\r\n        })\r\n      )\r\n\r\n      const refreshButton = screen.getByText('刷新')\r\n      fireEvent.click(refreshButton)\r\n\r\n      await waitFor(() => {\r\n        expect(unifiedSyncService.getStatus).toHaveBeenCalled()\r\n      })\r\n    })\r\n\r\n    it('应该正确处理同步状态', async () => {\r\n      (unifiedSyncService.getStatus as jest.Mock).mockReturnValue({\r\n        ...mockSyncStatus,\r\n        isSyncing: true,\r\n        pendingOperations: 5\r\n      })\r\n\r\n      render(\r\n        React.createElement(ConflictPanel, {\r\n          isOpen: true,\r\n          onClose: jest.fn()\r\n        })\r\n      )\r\n\r\n      expect(screen.getByText('同步中...')).toBeInTheDocument()\r\n      expect(screen.getByText('5 待同步')).toBeInTheDocument()\r\n    })\r\n\r\n    it('应该正确处理离线状态', async () => {\r\n      (unifiedSyncService.getStatus as jest.Mock).mockReturnValue({\r\n        ...mockSyncStatus,\r\n        networkStatus: { online: false }\r\n      })\r\n\r\n      render(\r\n        React.createElement(ConflictPanel, {\r\n          isOpen: true,\r\n          onClose: jest.fn()\r\n        })\r\n      )\r\n\r\n      expect(screen.getByText('离线')).toBeInTheDocument()\r\n    })\r\n  })\r\n\r\n  describe('useConflicts Hook', () => {\r\n    let hookResult: any\r\n\r\n    const TestComponent = () => {\r\n      hookResult = useConflicts()\r\n      return React.createElement('div', null, 'Test')\r\n    }\r\n\r\n    beforeEach(() => {\r\n      render(React.createElement(TestComponent))\r\n    })\r\n\r\n    it('应该提供正确的状态', () => {\r\n      expect(hookResult.conflicts).toEqual(mockConflicts)\r\n      expect(hookResult.isResolving).toBe(false)\r\n      expect(hookResult.isLoading).toBe(false)\r\n      expect(hookResult.error).toBe(null)\r\n    })\r\n\r\n    it('应该提供统计信息', () => {\r\n      const stats = hookResult.getStats()\r\n      expect(stats.totalConflicts).toBe(2)\r\n      expect(stats.pendingConflicts).toBe(2)\r\n      expect(stats.resolvedConflicts).toBe(0)\r\n    })\r\n\r\n    it('应该提供过滤方法', () => {\r\n      const pendingConflicts = hookResult.getPendingConflicts()\r\n      expect(pendingConflicts).toHaveLength(2)\r\n\r\n      const highPriorityConflicts = hookResult.getHighPriorityConflicts()\r\n      expect(highPriorityConflicts).toHaveLength(1)\r\n    })\r\n\r\n    it('应该支持解决冲突', async () => {\r\n      await hookResult.resolveConflict('conflict_1', {\r\n        type: 'local',\r\n        reason: '保留本地版本'\r\n      })\r\n\r\n      expect(unifiedSyncService.resolveConflict).toHaveBeenCalledWith(\r\n        'conflict_1',\r\n        'local',\r\n        undefined\r\n      )\r\n    })\r\n\r\n    it('应该支持批量解决冲突', async () => {\r\n      await hookResult.batchResolveConflicts(['conflict_1', 'conflict_2'], {\r\n        type: 'local',\r\n        reason: '批量保留本地'\r\n      })\r\n\r\n      expect(unifiedSyncService.resolveConflict).toHaveBeenCalledTimes(2)\r\n    })\r\n\r\n    it('应该支持自动解决冲突', async () => {\r\n      const resolvedCount = await hookResult.autoResolveConflicts()\r\n\r\n      expect(unifiedSyncService.autoResolveConflicts).toHaveBeenCalled()\r\n      expect(resolvedCount).toBe(1)\r\n    })\r\n\r\n    it('应该支持检测新冲突', async () => {\r\n      await hookResult.detectConflicts()\r\n\r\n      expect(unifiedSyncService.sync).toHaveBeenCalledWith({\r\n        type: 'incremental',\r\n        direction: 'bidirectional'\r\n      })\r\n    })\r\n\r\n    it('应该支持获取冲突详情', async () => {\r\n      const details = await hookResult.getConflictDetails('conflict_1')\r\n\r\n      expect(details).toBeTruthy()\r\n      expect(details?.id).toBe('conflict_1')\r\n    })\r\n\r\n    it('应该正确处理错误', async () => {\r\n      (unifiedSyncService.resolveConflict as jest.Mock).mockRejectedValue(\r\n        new Error('解决失败')\r\n      )\r\n\r\n      await hookResult.resolveConflict('conflict_1', {\r\n        type: 'local',\r\n        reason: '测试'\r\n      })\r\n\r\n      expect(hookResult.error).toBe('解决失败')\r\n    })\r\n  })\r\n\r\n  describe('性能监控集成', () => {\r\n    it('应该在冲突解决时跟踪性能', async () => {\r\n      const { result } = renderHook(() => useConflicts(), {\r\n        wrapper: ({ children }) => (\r\n          React.createElement(ConflictPanelProvider, null, children)\r\n        )\r\n      })\r\n\r\n      await result.current.resolveConflict('conflict_1', {\r\n        type: 'local',\r\n        reason: '测试'\r\n      })\r\n\r\n      expect(performanceMonitor.startConflictResolution).toHaveBeenCalled()\r\n      expect(performanceMonitor.trackUserInteraction).toHaveBeenCalledWith(\r\n        'resolve_conflict',\r\n        expect.any(Number),\r\n        true\r\n      )\r\n    })\r\n\r\n    it('应该在批量操作时跟踪性能', async () => {\r\n      const { result } = renderHook(() => useConflicts(), {\r\n        wrapper: ({ children }) => (\r\n          React.createElement(ConflictPanelProvider, null, children)\r\n        )\r\n      })\r\n\r\n      await result.current.batchResolveConflicts(['conflict_1'], {\r\n        type: 'local',\r\n        reason: '测试'\r\n      })\r\n\r\n      expect(performanceMonitor.startBatchOperation).toHaveBeenCalled()\r\n    })\r\n  })\r\n\r\n  describe('错误处理', () => {\r\n    it('应该处理网络错误', async () => {\r\n      (unifiedSyncService.resolveConflict as jest.Mock).mockRejectedValue(\r\n        new Error('网络连接失败')\r\n      )\r\n\r\n      render(\r\n        React.createElement(ConflictPanel, {\r\n          isOpen: true,\r\n          onClose: jest.fn()\r\n        })\r\n      )\r\n\r\n      const resolveButton = screen.getAllByText('保留本地')[0]\r\n      fireEvent.click(resolveButton)\r\n\r\n      await waitFor(() => {\r\n        expect(screen.getByText('网络连接失败')).toBeInTheDocument()\r\n      })\r\n    })\r\n\r\n    it('应该处理权限错误', async () => {\r\n      (unifiedSyncService.resolveConflict as jest.Mock).mockRejectedValue(\r\n        new Error('权限不足')\r\n      )\r\n\r\n      render(\r\n        React.createElement(ConflictPanel, {\r\n          isOpen: true,\r\n          onClose: jest.fn()\r\n        })\r\n      )\r\n\r\n      const resolveButton = screen.getAllByText('保留本地')[0]\r\n      fireEvent.click(resolveButton)\r\n\r\n      await waitFor(() => {\r\n        expect(screen.getByText('权限不足')).toBeInTheDocument()\r\n      })\r\n    })\r\n\r\n    it('应该处理并发冲突', async () => {\r\n      (unifiedSyncService.resolveConflict as jest.Mock).mockRejectedValue(\r\n        new Error('冲突已被其他用户解决')\r\n      )\r\n\r\n      render(\r\n        React.createElement(ConflictPanel, {\r\n          isOpen: true,\r\n          onClose: jest.fn()\r\n        })\r\n      )\r\n\r\n      const resolveButton = screen.getAllByText('保留本地')[0]\r\n      fireEvent.click(resolveButton)\r\n\r\n      await waitFor(() => {\r\n        expect(screen.getByText('冲突已被其他用户解决')).toBeInTheDocument()\r\n      })\r\n    })\r\n  })\r\n\r\n  describe('可访问性', () => {\r\n    it('应该支持键盘导航', () => {\r\n      render(\r\n        React.createElement(ConflictPanel, {\r\n          isOpen: true,\r\n          onClose: jest.fn()\r\n        })\r\n      )\r\n\r\n      const firstConflict = screen.getByText('本地标题').closest('div')\r\n      fireEvent.keyDown(firstConflict!, { key: 'Enter' })\r\n\r\n      expect(screen.getByText('查看详情')).toBeInTheDocument()\r\n    })\r\n\r\n    it('应该提供适当的ARIA标签', () => {\r\n      render(\r\n        React.createElement(ConflictPanel, {\r\n          isOpen: true,\r\n          onClose: jest.fn()\r\n        })\r\n      )\r\n\r\n      expect(screen.getByRole('dialog')).toHaveAttribute('aria-modal', 'true')\r\n      expect(screen.getByRole('dialog')).toHaveAttribute('aria-labelledby', expect.any(String))\r\n    })\r\n\r\n    it('应该支持屏幕阅读器', () => {\r\n      render(\r\n        React.createElement(ConflictPanel, {\r\n          isOpen: true,\r\n          onClose: jest.fn()\r\n        })\r\n      )\r\n\r\n      const statusElement = screen.getByText('2 待解决')\r\n      expect(statusElement).toHaveAttribute('aria-live', 'polite')\r\n    })\r\n  })\r\n})\r\n\r\n// 辅助组件\r\nconst ConflictPanelProvider = ({ children }: { children: React.ReactNode }) => {\r\n  return React.createElement('div', null, children)\r\n}"],"version":3}