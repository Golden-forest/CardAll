{"file":"D:\\Projects\\CardEverything\\cardall-prototype\\src\\__tests__\\utils\\test-helpers.ts","mappings":"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","names":[],"sources":["D:\\Projects\\CardEverything\\cardall-prototype\\src\\__tests__\\utils\\test-helpers.ts"],"sourcesContent":["/**\n * 测试辅助函数\n * 提供通用的测试辅助函数和断言方法\n */\n\nimport { waitFor, act } from '@testing-library/react'\n// Jest全局函数不需要导入\n\n// 异步工具函数\nexport const asyncWait = (ms: number): Promise<void> => {\n  return new Promise(resolve => setTimeout(resolve, ms))\n}\n\n// 等待条件满足\nexport const waitForCondition = async (\n  condition: () => boolean,\n  timeout: number = 5000,\n  interval: number = 100\n): Promise<void> => {\n  const startTime = Date.now()\n\n  while (Date.now() - startTime < timeout) {\n    if (condition()) {\n      return\n    }\n    await asyncWait(interval)\n  }\n\n  throw new Error(`Condition not met within ${timeout}ms`)\n}\n\n// 等待异步操作完成\nexport const waitForAsync = async (\n  fn: () => Promise<void>,\n  timeout: number = 5000\n): Promise<void> => {\n  try {\n    await waitFor(fn, { timeout })\n  } catch (error) {\n    throw new Error(`Async operation timed out after ${timeout}ms`)\n  }\n}\n\n// 模拟Promise解决\nexport const mockPromiseResolve = <T>(data: T, delay: number = 0): Promise<T> => {\n  return new Promise(resolve => {\n    setTimeout(() => resolve(data), delay)\n  })\n}\n\n// 模拟Promise拒绝\nexport const mockPromiseReject = (error: Error, delay: number = 0): Promise<never> => {\n  return new Promise((_, reject) => {\n    setTimeout(() => reject(error), delay)\n  })\n}\n\n// 模拟API响应\nexport const mockApiResponse = <T>(\n  data: T,\n  status: number = 200,\n  statusText: string = 'OK'\n): Promise<Response> => {\n  return Promise.resolve({\n    ok: status >= 200 && status < 300,\n    status,\n    statusText,\n    json: () => Promise.resolve(data),\n    text: () => Promise.resolve(JSON.stringify(data)),\n    headers: new Headers(),\n    redirected: false,\n    type: 'basic',\n    url: 'http://test.com',\n    clone: () => mockApiResponse(data, status, statusText),\n  } as Response)\n}\n\n// 模拟API错误\nexport const mockApiError = (\n  error: string,\n  status: number = 400,\n  statusText: string = 'Bad Request'\n): Promise<Response> => {\n  return Promise.resolve({\n    ok: false,\n    status,\n    statusText,\n    json: () => Promise.resolve({ error }),\n    text: () => Promise.resolve(JSON.stringify({ error })),\n    headers: new Headers(),\n    redirected: false,\n    type: 'basic',\n    url: 'http://test.com',\n    clone: () => mockApiError(error, status, statusText),\n  } as Response)\n}\n\n// 创建测试事件\nexport const createTestEvent = (type: string, data: any = {}): Event => {\n  return new Event(type, {\n    bubbles: true,\n    cancelable: true,\n    ...data,\n  })\n}\n\n// 创建模拟事件\nexport const createMockEvent = <T extends Event>(\n  type: string,\n  data: Partial<T> = {}\n): T => {\n  return {\n    type,\n    bubbles: true,\n    cancelable: true,\n    defaultPrevented: false,\n    preventDefault: vi.fn(),\n    stopPropagation: vi.fn(),\n    stopImmediatePropagation: vi.fn(),\n    ...data,\n  } as T\n}\n\n// 模拟文件对象\nexport const createMockFile = (\n  name: string,\n  type: string,\n  size: number = 1024\n): File => {\n  const content = new Uint8Array(size)\n  return new File([content], name, { type })\n}\n\n// 模拟文件列表\nexport const createMockFileList = (files: File[]): FileList => {\n  const fileList = {\n    length: files.length,\n    item: (index: number) => files[index] || null,\n    [Symbol.iterator]: function* () {\n      for (const file of files) {\n        yield file\n      }\n    },\n  } as any\n\n  files.forEach((file, index) => {\n    fileList[index] = file\n  })\n\n  return fileList\n}\n\n// 模拟DOM元素\nexport const createMockElement = (overrides: Partial<HTMLElement> = {}): HTMLElement => {\n  return {\n    addEventListener: vi.fn(),\n    removeEventListener: vi.fn(),\n    dispatchEvent: vi.fn(),\n    appendChild: vi.fn(),\n    removeChild: vi.fn(),\n    replaceChild: vi.fn(),\n    insertBefore: vi.fn(),\n    getAttribute: vi.fn(),\n    setAttribute: vi.fn(),\n    removeAttribute: vi.fn(),\n    hasAttribute: vi.fn(),\n    getBoundingClientRect: vi.fn(() => ({\n      top: 0,\n      left: 0,\n      width: 100,\n      height: 100,\n      right: 100,\n      bottom: 100,\n      x: 0,\n      y: 0,\n      toJSON: vi.fn(),\n    })),\n    focus: vi.fn(),\n    blur: vi.fn(),\n    click: vi.fn(),\n    classList: {\n      add: vi.fn(),\n      remove: vi.fn(),\n      contains: vi.fn(),\n      toggle: vi.fn(),\n      replace: vi.fn(),\n    },\n    style: {\n      display: '',\n      visibility: '',\n      opacity: '',\n      transform: '',\n    },\n    ...overrides,\n  } as HTMLElement\n}\n\n// 模拟Storage对象\nexport const createMockStorage = (): Storage => {\n  const store: { [key: string]: string } = {}\n\n  return {\n    length: 0,\n    key: (index: number) => Object.keys(store)[index] || null,\n    getItem: (key: string) => store[key] || null,\n    setItem: (key: string, value: string) => {\n      store[key] = String(value)\n    },\n    removeItem: (key: string) => {\n      delete store[key]\n    },\n    clear: () => {\n      Object.keys(store).forEach(key => delete store[key])\n    },\n  }\n}\n\n// 模拟Date对象\nexport const mockDateNow = (timestamp: number) => {\n  const originalDateNow = Date.now\n  Date.now = () => timestamp\n\n  return () => {\n    Date.now = originalDateNow\n  }\n}\n\n// 模拟Math.random\nexport const mockMathRandom = (value: number) => {\n  const originalMathRandom = Math.random\n  Math.random = () => value\n\n  return () => {\n    Math.random = originalMathRandom\n  }\n}\n\n// 模拟crypto.randomUUID\nexport const mockCryptoRandomUUID = (uuid: string) => {\n  const originalRandomUUID = crypto.randomUUID\n  crypto.randomUUID = () => uuid\n\n  return () => {\n    crypto.randomUUID = originalRandomUUID\n  }\n}\n\n// 模拟console方法\nexport const mockConsole = () => {\n  const originalConsole = { ...console }\n\n  console.log = vi.fn()\n  console.error = vi.fn()\n  console.warn = vi.fn()\n  console.info = vi.fn()\n  console.debug = vi.fn()\n\n  return () => {\n    Object.assign(console, originalConsole)\n  }\n}\n\n// 测试用例包装器\nexport const testAsync = (name: string, fn: () => Promise<void>) => {\n  return test(name, async () => {\n    await act(async () => {\n      await fn()\n    })\n  })\n}\n\n// 分组测试包装器\nexport const describeAsync = (name: string, fn: () => void) => {\n  return describe(name, fn)\n}\n\n// 性能测试工具\nexport const measurePerformance = async <T>(\n  name: string,\n  fn: () => Promise<T>,\n  maxTimeMs: number = 1000\n): Promise<{ result: T; duration: number }> => {\n  const startTime = performance.now()\n  const result = await fn()\n  const duration = performance.now() - startTime\n\n  if (duration > maxTimeMs) {\n    console.warn(`Performance warning: ${name} took ${duration}ms (expected < ${maxTimeMs}ms)`)\n  }\n\n  return { result, duration }\n}\n\n// 内存使用测试工具\nexport const measureMemory = async <T>(\n  name: string,\n  fn: () => Promise<T>,\n  maxMemoryMB: number = 100\n): Promise<{ result: T; memoryUsage: NodeJS.MemoryUsage }> => {\n  const memoryBefore = process.memoryUsage()\n  const result = await fn()\n  const memoryAfter = process.memoryUsage()\n\n  const memoryUsage = {\n    rss: memoryAfter.rss - memoryBefore.rss,\n    heapTotal: memoryAfter.heapTotal - memoryBefore.heapTotal,\n    heapUsed: memoryAfter.heapUsed - memoryBefore.heapUsed,\n    external: memoryAfter.external - memoryBefore.external,\n    arrayBuffers: memoryAfter.arrayBuffers - memoryBefore.arrayBuffers,\n  }\n\n  const memoryMB = memoryUsage.heapUsed / (1024 * 1024)\n\n  if (memoryMB > maxMemoryMB) {\n    console.warn(`Memory warning: ${name} used ${memoryMB}MB (expected < ${maxMemoryMB}MB)`)\n  }\n\n  return { result, memoryUsage }\n}\n\n// 错误边界测试工具\nexport const expectErrorBoundary = async (\n  fn: () => Promise<void>,\n  expectedError: Error | string\n) => {\n  try {\n    await fn()\n    fail('Expected error was not thrown')\n  } catch (error) {\n    if (typeof expectedError === 'string') {\n      expect(error.message).toContain(expectedError)\n    } else {\n      expect(error).toBeInstanceOf(expectedError.constructor)\n      expect(error.message).toBe(expectedError.message)\n    }\n  }\n}\n\n// 模拟网络请求\nexport const mockFetch = (responses: Array<{\n  response: Promise<Response>\n  condition?: (url: string, options?: RequestInit) => boolean\n}> = []) => {\n  const mockFetchFn = vi.fn()\n\n  mockFetchFn.mockImplementation((url: string, options?: RequestInit) => {\n    const matchingResponse = responses.find(r =>\n      !r.condition || r.condition(url, options)\n    )\n\n    if (matchingResponse) {\n      return matchingResponse.response\n    }\n\n    return mockApiResponse({ error: 'Not found' }, 404)\n  })\n\n  const originalFetch = global.fetch\n  global.fetch = mockFetchFn\n\n  return () => {\n    global.fetch = originalFetch\n  }\n}\n\n// 清理所有mock\nexport const cleanupAllMocks = () => {\n  vi.clearAllMocks()\n  vi.resetAllMocks()\n  vi.restoreAllMocks()\n}\n\n// 生成随机测试数据\nexport const generateRandomData = {\n  string: (length: number = 10): string => {\n    return Math.random().toString(36).substring(2, length + 2)\n  },\n\n  number: (min: number = 0, max: number = 100): number => {\n    return Math.floor(Math.random() * (max - min + 1)) + min\n  },\n\n  boolean: (): boolean => {\n    return Math.random() > 0.5\n  },\n\n  date: (start: Date = new Date('2020-01-01'), end: Date = new Date()): Date => {\n    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()))\n  },\n\n  email: (): string => {\n    return `${generateRandomData.string()}@${generateRandomData.string(5)}.com`\n  },\n\n  uuid: (): string => {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n      const r = Math.random() * 16 | 0\n      const v = c === 'x' ? r : (r & 0x3 | 0x8)\n      return v.toString(16)\n    })\n  },\n}\n\nexport default {\n  asyncWait,\n  waitForCondition,\n  waitForAsync,\n  mockPromiseResolve,\n  mockPromiseReject,\n  mockApiResponse,\n  mockApiError,\n  createTestEvent,\n  createMockEvent,\n  createMockFile,\n  createMockFileList,\n  createMockElement,\n  createMockStorage,\n  mockDateNow,\n  mockMathRandom,\n  mockCryptoRandomUUID,\n  mockConsole,\n  testAsync,\n  describeAsync,\n  measurePerformance,\n  measureMemory,\n  expectErrorBoundary,\n  mockFetch,\n  cleanupAllMocks,\n  generateRandomData,\n}"],"version":3}