{"file":"D:\\Projects\\CardEverything\\cardall-prototype\\src\\hooks\\use-tags.ts","mappings":"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","names":[],"sources":["D:\\Projects\\CardEverything\\cardall-prototype\\src\\hooks\\use-tags.ts"],"sourcesContent":["import { useState, useCallback, useEffect } from 'react'\r\nimport { Tag, TagAction } from '@/types/card'\r\n\r\n// Mock data for development\r\nconst mockTags: Tag[] = [\r\n  {\r\n    id: 'tag-1',\r\n    name: 'react',\r\n    color: '#3b82f6',\r\n    count: 1,\r\n    createdAt: new Date('2024-01-15')\r\n  },\r\n  {\r\n    id: 'tag-2',\r\n    name: 'frontend',\r\n    color: '#8b5cf6',\r\n    count: 1,\r\n    createdAt: new Date('2024-01-15')\r\n  },\r\n  {\r\n    id: 'tag-3',\r\n    name: 'best-practices',\r\n    color: '#10b981',\r\n    count: 1,\r\n    createdAt: new Date('2024-01-15')\r\n  },\r\n  {\r\n    id: 'tag-4',\r\n    name: 'typescript',\r\n    color: '#f59e0b',\r\n    count: 1,\r\n    createdAt: new Date('2024-01-16')\r\n  },\r\n  {\r\n    id: 'tag-5',\r\n    name: 'types',\r\n    color: '#ef4444',\r\n    count: 1,\r\n    createdAt: new Date('2024-01-16')\r\n  },\r\n  {\r\n    id: 'tag-6',\r\n    name: 'development',\r\n    color: '#06b6d4',\r\n    count: 1,\r\n    createdAt: new Date('2024-01-16')\r\n  }\r\n]\r\n\r\nconst TAG_COLORS = [\r\n  '#3b82f6', '#8b5cf6', '#10b981', '#f59e0b', '#ef4444', '#06b6d4',\r\n  '#8b5a2b', '#6b7280', '#ec4899', '#84cc16', '#f97316', '#6366f1'\r\n]\r\n\r\nexport function useTags() {\r\n  const [tags, setTags] = useState<Tag[]>(mockTags)\r\n  const [hiddenTags, setHiddenTags] = useState<string[]>([])\r\n\r\n  // Get visible tags\r\n  const visibleTags = useCallback(() => {\r\n    return tags.filter(tag => !hiddenTags.includes(tag.id))\r\n  }, [tags, hiddenTags])\r\n\r\n  // Get popular tags (sorted by count)\r\n  const popularTags = useCallback((limit?: number) => {\r\n    const sorted = [...visibleTags()].sort((a, b) => b.count - a.count)\r\n    return limit ? sorted.slice(0, limit) : sorted\r\n  }, [visibleTags])\r\n\r\n  // Tag actions\r\n  const dispatch = useCallback((action: TagAction) => {\r\n    setTags(prevTags => {\r\n      switch (action.type) {\r\n        case 'CREATE_TAG':\r\n          // Check if tag already exists\r\n          const existingTag = prevTags.find(tag => \r\n            tag.name.toLowerCase() === action.payload.name.toLowerCase()\r\n          )\r\n          if (existingTag) {\r\n            // Increment count if tag exists\r\n            return prevTags.map(tag =>\r\n              tag.id === existingTag.id\r\n                ? { ...tag, count: tag.count + 1 }\r\n                : tag\r\n            )\r\n          }\r\n          \r\n          // Create new tag\r\n          const newTag: Tag = {\r\n            ...action.payload,\r\n            id: `tag-${Date.now()}`,\r\n            count: 1,\r\n            color: action.payload.color || TAG_COLORS[prevTags.length % TAG_COLORS.length],\r\n            createdAt: new Date()\r\n          }\r\n          return [...prevTags, newTag]\r\n\r\n        case 'UPDATE_TAG':\r\n          return prevTags.map(tag =>\r\n            tag.id === action.payload.id\r\n              ? { ...tag, ...action.payload.updates }\r\n              : tag\r\n          )\r\n\r\n        case 'DELETE_TAG':\r\n          return prevTags.filter(tag => tag.id !== action.payload)\r\n\r\n        case 'TOGGLE_TAG_VISIBILITY':\r\n          setHiddenTags(prev => \r\n            prev.includes(action.payload)\r\n              ? prev.filter(id => id !== action.payload)\r\n              : [...prev, action.payload]\r\n          )\r\n          return prevTags\r\n\r\n        default:\r\n          return prevTags\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  // Utility functions\r\n  const getTagById = useCallback((id: string) => {\r\n    return tags.find(tag => tag.id === id)\r\n  }, [tags])\r\n\r\n  const getTagByName = useCallback((name: string) => {\r\n    return tags.find(tag => tag.name.toLowerCase() === name.toLowerCase())\r\n  }, [tags])\r\n\r\n  const createTagIfNotExists = useCallback((name: string, color?: string) => {\r\n    const existing = getTagByName(name)\r\n    if (existing) {\r\n      return existing\r\n    }\r\n    \r\n    dispatch({\r\n      type: 'CREATE_TAG',\r\n      payload: { name, color: color || TAG_COLORS[tags.length % TAG_COLORS.length] }\r\n    })\r\n    \r\n    return null // Tag will be created asynchronously\r\n  }, [dispatch, getTagByName, tags.length])\r\n\r\n  const updateTagCount = useCallback((tagName: string, increment: number) => {\r\n    const tag = getTagByName(tagName)\r\n    if (tag) {\r\n      const newCount = Math.max(0, tag.count + increment)\r\n      if (newCount === 0) {\r\n        dispatch({ type: 'DELETE_TAG', payload: tag.id })\r\n      } else {\r\n        dispatch({\r\n          type: 'UPDATE_TAG',\r\n          payload: { id: tag.id, updates: { count: newCount } }\r\n        })\r\n      }\r\n    }\r\n  }, [dispatch, getTagByName])\r\n\r\n  const syncTagsWithCards = useCallback((allCardTags: string[]) => {\r\n    // Count tag usage\r\n    const tagCounts = allCardTags.reduce((acc, tagName) => {\r\n      acc[tagName] = (acc[tagName] || 0) + 1\r\n      return acc\r\n    }, {} as Record<string, number>)\r\n\r\n    // Update existing tags and create new ones\r\n    const updatedTags = tags.map(tag => ({\r\n      ...tag,\r\n      count: tagCounts[tag.name] || 0\r\n    }))\r\n    \r\n    const existingTagNames = new Set(tags.map(tag => tag.name))\r\n\r\n    // Create new tags\r\n    Object.entries(tagCounts).forEach(([tagName, count]) => {\r\n      if (!existingTagNames.has(tagName)) {\r\n        const newTag: Tag = {\r\n          id: `tag-${Date.now()}-${Math.random()}`,\r\n          name: tagName,\r\n          color: TAG_COLORS[updatedTags.length % TAG_COLORS.length],\r\n          count,\r\n          createdAt: new Date()\r\n        }\r\n        updatedTags.push(newTag)\r\n      }\r\n    })\r\n\r\n    // Remove tags with zero count\r\n    const finalTags = updatedTags.filter(tag => tag.count > 0)\r\n    setTags(finalTags)\r\n  }, [tags])\r\n\r\n  const searchTags = useCallback((query: string) => {\r\n    if (!query.trim()) return visibleTags()\r\n    \r\n    const lowercaseQuery = query.toLowerCase()\r\n    return visibleTags().filter(tag =>\r\n      tag.name.toLowerCase().includes(lowercaseQuery)\r\n    )\r\n  }, [visibleTags])\r\n\r\n  const getTagSuggestions = useCallback((input: string, limit = 5) => {\r\n    if (!input.trim()) return popularTags(limit)\r\n    \r\n    const matches = searchTags(input)\r\n    return matches.slice(0, limit)\r\n  }, [searchTags, popularTags])\r\n\r\n  // Rename tag\r\n  const renameTag = useCallback((oldName: string, newName: string) => {\r\n    const tag = getTagByName(oldName)\r\n    if (!tag) return false\r\n\r\n    // Check if new name already exists\r\n    const existingTag = getTagByName(newName)\r\n    if (existingTag && existingTag.id !== tag.id) {\r\n      return false // Name conflict\r\n    }\r\n\r\n    dispatch({\r\n      type: 'UPDATE_TAG',\r\n      payload: { \r\n        id: tag.id, \r\n        updates: { name: newName.trim() } \r\n      }\r\n    })\r\n    return true\r\n  }, [dispatch, getTagByName])\r\n\r\n  // Delete tag by name\r\n  const deleteTagByName = useCallback((tagName: string) => {\r\n    const tag = getTagByName(tagName)\r\n    if (!tag) return false\r\n\r\n    dispatch({ type: 'DELETE_TAG', payload: tag.id })\r\n    return true\r\n  }, [dispatch, getTagByName])\r\n\r\n  // Get all tag names for validation\r\n  const getAllTagNames = useCallback(() => {\r\n    return tags.map(tag => tag.name)\r\n  }, [tags])\r\n\r\n  // Auto-save to localStorage\r\n  useEffect(() => {\r\n    const saveTimer = setTimeout(() => {\r\n      localStorage.setItem('cardall-tags', JSON.stringify(tags))\r\n      localStorage.setItem('cardall-hidden-tags', JSON.stringify(hiddenTags))\r\n    }, 1000)\r\n\r\n    return () => clearTimeout(saveTimer)\r\n  }, [tags, hiddenTags])\r\n\r\n  // Load from localStorage on mount\r\n  useEffect(() => {\r\n    const savedTags = localStorage.getItem('cardall-tags')\r\n    const savedHiddenTags = localStorage.getItem('cardall-hidden-tags')\r\n    \r\n    if (savedTags) {\r\n      try {\r\n        const parsedTags = JSON.parse(savedTags)\r\n        setTags(parsedTags)\r\n      } catch (error) {\r\n        console.error('Failed to load saved tags:', error)\r\n      }\r\n    }\r\n    \r\n    if (savedHiddenTags) {\r\n      try {\r\n        const parsedHiddenTags = JSON.parse(savedHiddenTags)\r\n        setHiddenTags(parsedHiddenTags)\r\n      } catch (error) {\r\n        console.error('Failed to load hidden tags:', error)\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  return {\r\n    tags: visibleTags(),\r\n    allTags: tags,\r\n    hiddenTags,\r\n    popularTags,\r\n    dispatch,\r\n    getTagById,\r\n    getTagByName,\r\n    createTagIfNotExists,\r\n    updateTagCount,\r\n    syncTagsWithCards,\r\n    searchTags,\r\n    getTagSuggestions,\r\n    renameTag,\r\n    deleteTagByName,\r\n    getAllTagNames\r\n  }\r\n}"],"version":3}