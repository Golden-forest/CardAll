{"file":"D:\\Projects\\CardEverything\\cardall-prototype\\src\\utils\\performance-kpis.ts","mappings":"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","names":[],"sources":["D:\\Projects\\CardEverything\\cardall-prototype\\src\\utils\\performance-kpis.ts"],"sourcesContent":["/**\n * CardAll关键性能指标(KPI)定义\n * 定义监控的核心性能指标和评估标准\n */\n\nexport interface PerformanceKPI {\n  id: string\n  name: string\n  category: 'loading' | 'runtime' | 'sync' | 'database' | 'network' | 'user'\n  unit: string\n  description: string\n  thresholds: {\n    excellent: number\n    good: number\n    fair: number\n    poor: number\n  }\n  weight: number // 权重，用于计算总体得分\n  measurement: () => Promise<number> | number\n}\n\nexport interface KPIScore {\n  kpiId: string\n  value: number\n  score: number // 0-100\n  grade: 'excellent' | 'good' | 'fair' | 'poor'\n  timestamp: number\n}\n\nexport interface OverallPerformanceScore {\n  overallScore: number\n  categoryScores: Record<string, number>\n  kpiScores: KPIScore[]\n  timestamp: number\n  recommendations: string[]\n}\n\n// 核心性能指标定义\nexport const performanceKPIs: PerformanceKPI[] = [\n  // === 加载性能指标 ===\n  {\n    id: 'fcp',\n    name: '首次内容绘制时间 (FCP)',\n    category: 'loading',\n    unit: 'ms',\n    description: '页面首次绘制任何内容的时间',\n    thresholds: {\n      excellent: 800,\n      good: 1500,\n      fair: 2500,\n      poor: 4000\n    },\n    weight: 15,\n    measurement: async () => {\n      if (typeof window === 'undefined' || !('performance' in window)) return 0\n      const paintEntries = performance.getEntriesByType('paint')\n      const fcpEntry = paintEntries.find(entry => entry.name === 'first-contentful-paint')\n      return fcpEntry ? fcpEntry.startTime : 0\n    }\n  },\n  {\n    id: 'lcp',\n    name: '最大内容绘制时间 (LCP)',\n    category: 'loading',\n    unit: 'ms',\n    description: '页面最大内容元素绘制完成的时间',\n    thresholds: {\n      excellent: 1200,\n      good: 2000,\n      fair: 3500,\n      poor: 5000\n    },\n    weight: 20,\n    measurement: async () => {\n      if (typeof window === 'undefined') return 0\n      // LCP需要通过PerformanceObserver获取\n      return new Promise((resolve) => {\n        if (typeof PerformanceObserver === 'undefined') {\n          resolve(0)\n          return\n        }\n\n        const observer = new PerformanceObserver((list) => {\n          const entries = list.getEntries()\n          if (entries.length > 0) {\n            const lastEntry = entries[entries.length - 1]\n            resolve(lastEntry.startTime)\n            observer.disconnect()\n          }\n        })\n\n        observer.observe({ entryTypes: ['largest-contentful-paint'] })\n\n        // 5秒超时\n        setTimeout(() => {\n          observer.disconnect()\n          resolve(0)\n        }, 5000)\n      })\n    }\n  },\n  {\n    id: 'tti',\n    name: '可交互时间 (TTI)',\n    category: 'loading',\n    unit: 'ms',\n    description: '页面完全可交互的时间',\n    thresholds: {\n      excellent: 1500,\n      good: 2500,\n      fair: 4000,\n      poor: 6000\n    },\n    weight: 15,\n    measurement: async () => {\n      // TTI计算复杂，这里返回估算值\n      return 0 // 实际实现需要复杂的计算\n    }\n  },\n  {\n    id: 'bundle-size',\n    name: 'Bundle大小',\n    category: 'loading',\n    unit: 'KB',\n    description: 'JavaScript Bundle的总大小',\n    thresholds: {\n      excellent: 500,\n      good: 1000,\n      fair: 1500,\n      poor: 2000\n    },\n    weight: 10,\n    measurement: () => {\n      // 估算Bundle大小\n      return 1430 // 基于之前的分析\n    }\n  },\n\n  // === 运行时性能指标 ===\n  {\n    id: 'memory-usage',\n    name: '内存使用量',\n    category: 'runtime',\n    unit: 'MB',\n    description: 'JavaScript堆内存使用量',\n    thresholds: {\n      excellent: 50,\n      good: 100,\n      fair: 150,\n      poor: 200\n    },\n    weight: 10,\n    measurement: () => {\n      if (typeof window === 'undefined' || !('performance' in window) || !('memory' in performance)) {\n        return 0\n      }\n      const memory = (performance as any).memory\n      return memory.usedJSHeapSize / (1024 * 1024)\n    }\n  },\n  {\n    id: 'render-time',\n    name: '组件渲染时间',\n    category: 'runtime',\n    unit: 'ms',\n    description: '主要组件的平均渲染时间',\n    thresholds: {\n      excellent: 16,\n      good: 32,\n      fair: 50,\n      poor: 100\n    },\n    weight: 12,\n    measurement: () => {\n      // 通过性能监控获取渲染时间\n      return 45 // 基于之前的分析\n    }\n  },\n  {\n    id: 'virtual-scroll-fps',\n    name: '虚拟滚动帧率',\n    category: 'runtime',\n    unit: 'FPS',\n    description: '虚拟滚动时的帧率',\n    thresholds: {\n      excellent: 55,\n      good: 45,\n      fair: 30,\n      poor: 20\n    },\n    weight: 8,\n    measurement: () => {\n      // 通过requestAnimationFrame计算FPS\n      return 25 // 基于之前的分析\n    }\n  },\n\n  // === 同步性能指标 ===\n  {\n    id: 'sync-time',\n    name: '同步操作时间',\n    category: 'sync',\n    unit: 'ms',\n    description: '数据同步的平均时间',\n    thresholds: {\n      excellent: 200,\n      good: 500,\n      fair: 1000,\n      poor: 2000\n    },\n    weight: 15,\n    measurement: async () => {\n      // 通过同步服务的性能监控获取\n      return 850 // 基于之前的分析\n    }\n  },\n  {\n    id: 'sync-success-rate',\n    name: '同步成功率',\n    category: 'sync',\n    unit: '%',\n    description: '同步操作的成功率',\n    thresholds: {\n      excellent: 99,\n      good: 95,\n      fair: 85,\n      poor: 70\n    },\n    weight: 10,\n    measurement: async () => {\n      // 通过同步服务的统计获取\n      return 85 // 基于之前的分析\n    }\n  },\n\n  // === 数据库性能指标 ===\n  {\n    id: 'db-query-time',\n    name: '数据库查询时间',\n    category: 'database',\n    unit: 'ms',\n    description: '数据库查询的平均响应时间',\n    thresholds: {\n      excellent: 10,\n      good: 25,\n      fair: 50,\n      poor: 100\n    },\n    weight: 12,\n    measurement: async () => {\n      // 通过数据库性能监控获取\n      return 85 // 基于之前的分析\n    }\n  },\n  {\n    id: 'cache-hit-rate',\n    name: '缓存命中率',\n    category: 'database',\n    unit: '%',\n    description: '数据库查询的缓存命中率',\n    thresholds: {\n      excellent: 90,\n      good: 70,\n      fair: 50,\n      poor: 30\n    },\n    weight: 8,\n    measurement: async () => {\n      // 通过缓存统计获取\n      return 65 // 基于之前的分析\n    }\n  },\n\n  // === 网络性能指标 ===\n  {\n    id: 'api-response-time',\n    name: 'API响应时间',\n    category: 'network',\n    unit: 'ms',\n    description: 'API调用的平均响应时间',\n    thresholds: {\n      excellent: 300,\n      good: 600,\n      fair: 1000,\n      poor: 2000\n    },\n    weight: 10,\n    measurement: async () => {\n      // 通过API监控获取\n      return 950 // 基于之前的分析\n    }\n  },\n  {\n    id: 'network-latency',\n    name: '网络延迟',\n    category: 'network',\n    unit: 'ms',\n    description: '网络连接的平均延迟',\n    thresholds: {\n      excellent: 50,\n      good: 150,\n      fair: 300,\n      poor: 500\n    },\n    weight: 5,\n    measurement: () => {\n      if (typeof window === 'undefined' || !('navigator' in window)) return 0\n      const connection = (navigator as any).connection\n      return connection?.rtt || 350\n    }\n  }\n]\n\n// KPI评估器\nexport class KPIEvaluator {\n  private kpis: PerformanceKPI[]\n\n  constructor(kpis: PerformanceKPI[] = performanceKPIs) {\n    this.kpis = kpis\n  }\n\n  // 计算单个KPI得分\n  async evaluateKPI(kpi: PerformanceKPI): Promise<KPIScore> {\n    const value = await this.measureKPI(kpi)\n    const score = this.calculateScore(kpi, value)\n    const grade = this.getGrade(kpi, value)\n\n    return {\n      kpiId: kpi.id,\n      value,\n      score,\n      grade,\n      timestamp: Date.now()\n    }\n  }\n\n  // 测量KPI值\n  private async measureKPI(kpi: PerformanceKPI): Promise<number> {\n    try {\n      const result = kpi.measurement()\n      return result instanceof Promise ? await result : result\n    } catch (error) {\n      console.error(`Failed to measure KPI ${kpi.id}:`, error)\n      return 0\n    }\n  }\n\n  // 计算得分 (0-100)\n  private calculateScore(kpi: PerformanceKPI, value: number): number {\n    const { excellent, good, fair, poor } = kpi.thresholds\n\n    // 对于时间类指标，值越小越好\n    if (kpi.unit === 'ms' || kpi.unit === 'KB' || kpi.unit === 'MB') {\n      if (value <= excellent) return 100\n      if (value <= good) return 80 + ((good - value) / (good - excellent)) * 20\n      if (value <= fair) return 60 + ((fair - value) / (fair - good)) * 20\n      if (value <= poor) return 40 + ((poor - value) / (poor - fair)) * 20\n      return Math.max(0, 40 - ((value - poor) / poor) * 40)\n    }\n\n    // 对于百分比类指标，值越大越好\n    if (kpi.unit === '%' || kpi.unit === 'FPS') {\n      if (value >= excellent) return 100\n      if (value >= good) return 80 + ((value - good) / (excellent - good)) * 20\n      if (value >= fair) return 60 + ((value - fair) / (good - fair)) * 20\n      if (value >= poor) return 40 + ((value - poor) / (fair - poor)) * 20\n      return Math.max(0, 40 - ((poor - value) / poor) * 40)\n    }\n\n    return 50 // 默认中等得分\n  }\n\n  // 获取等级\n  private getGrade(kpi: PerformanceKPI, value: number): 'excellent' | 'good' | 'fair' | 'poor' {\n    const { excellent, good, fair, poor } = kpi.thresholds\n\n    // 对于时间类指标\n    if (kpi.unit === 'ms' || kpi.unit === 'KB' || kpi.unit === 'MB') {\n      if (value <= excellent) return 'excellent'\n      if (value <= good) return 'good'\n      if (value <= fair) return 'fair'\n      return 'poor'\n    }\n\n    // 对于百分比类指标\n    if (kpi.unit === '%' || kpi.unit === 'FPS') {\n      if (value >= excellent) return 'excellent'\n      if (value >= good) return 'good'\n      if (value >= fair) return 'fair'\n      return 'poor'\n    }\n\n    return 'fair'\n  }\n\n  // 评估所有KPI\n  async evaluateAll(): Promise<OverallPerformanceScore> {\n    const kpiScores: KPIScore[] = []\n\n    // 并行评估所有KPI\n    const evaluations = await Promise.all(\n      this.kpis.map(kpi => this.evaluateKPI(kpi))\n    )\n    kpiScores.push(...evaluations)\n\n    // 计算分类得分\n    const categoryScores: Record<string, number> = {}\n    const categoryWeights: Record<string, number> = {}\n\n    this.kpis.forEach(kpi => {\n      if (!categoryScores[kpi.category]) {\n        categoryScores[kpi.category] = 0\n        categoryWeights[kpi.category] = 0\n      }\n      categoryWeights[kpi.category] += kpi.weight\n    })\n\n    kpiScores.forEach(score => {\n      const kpi = this.kpis.find(k => k.id === score.kpiId)\n      if (kpi) {\n        categoryScores[kpi.category] += score.score * kpi.weight\n      }\n    })\n\n    Object.keys(categoryScores).forEach(category => {\n      categoryScores[category] = categoryScores[category] / categoryWeights[category]\n    })\n\n    // 计算总体得分\n    let totalScore = 0\n    let totalWeight = 0\n\n    kpiScores.forEach(score => {\n      const kpi = this.kpis.find(k => k.id === score.kpiId)\n      if (kpi) {\n        totalScore += score.score * kpi.weight\n        totalWeight += kpi.weight\n      }\n    })\n\n    const overallScore = totalWeight > 0 ? totalScore / totalWeight : 0\n\n    // 生成建议\n    const recommendations = this.generateRecommendations(kpiScores)\n\n    return {\n      overallScore,\n      categoryScores,\n      kpiScores,\n      timestamp: Date.now(),\n      recommendations\n    }\n  }\n\n  // 生成优化建议\n  private generateRecommendations(scores: KPIScore[]): string[] {\n    const recommendations: string[] = []\n\n    scores.forEach(score => {\n      const kpi = this.kpis.find(k => k.id === score.kpiId)\n      if (!kpi) return\n\n      if (score.grade === 'poor') {\n        switch (kpi.category) {\n          case 'loading':\n            recommendations.push('优化Bundle大小，实施代码分割和懒加载策略')\n            break\n          case 'runtime':\n            recommendations.push('优化组件渲染性能，实现虚拟滚动')\n            break\n          case 'sync':\n            recommendations.push('优化同步服务，减少网络请求时间')\n            break\n          case 'database':\n            recommendations.push('优化数据库查询和索引，实施缓存策略')\n            break\n          case 'network':\n            recommendations.push('优化API响应时间，使用CDN和压缩')\n            break\n        }\n      } else if (score.grade === 'fair') {\n        recommendations.push(`${kpi.name}表现中等，可以进一步优化`)\n      }\n    })\n\n    return [...new Set(recommendations)]\n  }\n\n  // 获取KPI趋势\n  async getKPITrend(kpiId: string, periodMs: number = 86400000): Promise<{\n    values: number[]\n    timestamps: number[]\n    trend: 'improving' | 'stable' | 'degrading'\n  }> {\n    // 这里应该从历史数据中获取趋势\n    // 简化实现，返回模拟数据\n    return {\n      values: [75, 78, 82, 80, 85],\n      timestamps: Date.now() - 86400000,\n      trend: 'improving'\n    }\n  }\n\n  // 设置性能目标\n  setPerformanceTargets(targets: Record<string, number>): void {\n    this.kpis.forEach(kpi => {\n      if (targets[kpi.id]) {\n        // 更新阈值\n        const targetValue = targets[kpi.id]\n        const currentExcellent = kpi.thresholds.excellent\n\n        // 根据目标值调整所有阈值\n        const ratio = targetValue / currentExcellent\n        kpi.thresholds.excellent = targetValue\n        kpi.thresholds.good = kpi.thresholds.good * ratio\n        kpi.thresholds.fair = kpi.thresholds.fair * ratio\n        kpi.thresholds.poor = kpi.thresholds.poor * ratio\n      }\n    })\n  }\n}\n\n// 创建全局KPI评估器实例\nexport const kpiEvaluator = new KPIEvaluator()\n\n// 便捷的性能评估函数\nexport async function evaluatePerformance(): Promise<OverallPerformanceScore> {\n  return await kpiEvaluator.evaluateAll()\n}\n\n// 获取性能等级描述\nexport function getPerformanceGrade(score: number): {\n  grade: 'A' | 'B' | 'C' | 'D' | 'F'\n  color: string\n  description: string\n} {\n  if (score >= 90) {\n    return { grade: 'A', color: 'text-green-600', description: '优秀' }\n  } else if (score >= 80) {\n    return { grade: 'B', color: 'text-blue-600', description: '良好' }\n  } else if (score >= 70) {\n    return { grade: 'C', color: 'text-yellow-600', description: '中等' }\n  } else if (score >= 60) {\n    return { grade: 'D', color: 'text-orange-600', description: '需要改进' }\n  } else {\n    return { grade: 'F', color: 'text-red-600', description: '严重问题' }\n  }\n}"],"version":3}