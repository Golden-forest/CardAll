0bbd86ab6aecf91c7b805ee3062a859d
"use strict";
/**
 * 错误处理类型定义
 * 统一所有错误处理相关的类型定义
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ErrorSubCategory = exports.ErrorCategory = exports.ErrorLevel = void 0;
// 错误级别
var ErrorLevel;
(function (ErrorLevel) {
    ErrorLevel["CRITICAL"] = "critical";
    ErrorLevel["ERROR"] = "error";
    ErrorLevel["WARNING"] = "warning";
    ErrorLevel["INFO"] = "info"; // 信息提示
})(ErrorLevel || (exports.ErrorLevel = ErrorLevel = {}));
// 错误类别
var ErrorCategory;
(function (ErrorCategory) {
    ErrorCategory["NETWORK"] = "network";
    ErrorCategory["PROTOCOL"] = "protocol";
    ErrorCategory["APPLICATION"] = "application";
    ErrorCategory["DATA"] = "data";
    ErrorCategory["SYSTEM"] = "system"; // 系统相关错误
})(ErrorCategory || (exports.ErrorCategory = ErrorCategory = {}));
// 错误子类别
var ErrorSubCategory;
(function (ErrorSubCategory) {
    // 网络错误
    ErrorSubCategory["CONNECTION_LOST"] = "connection_lost";
    ErrorSubCategory["NETWORK_TIMEOUT"] = "network_timeout";
    ErrorSubCategory["BANDWIDTH_LIMIT"] = "bandwidth_limit";
    ErrorSubCategory["DNS_FAILURE"] = "dns_failure";
    // 协议错误
    ErrorSubCategory["HTTP_ERROR"] = "http_error";
    ErrorSubCategory["SSL_ERROR"] = "ssl_error";
    ErrorSubCategory["AUTH_ERROR"] = "auth_error";
    // 应用错误
    ErrorSubCategory["VALIDATION_ERROR"] = "validation_error";
    ErrorSubCategory["BUSINESS_LOGIC_ERROR"] = "business_logic_error";
    ErrorSubCategory["PERMISSION_ERROR"] = "permission_error";
    // 数据错误
    ErrorSubCategory["DATA_CONFLICT"] = "data_conflict";
    ErrorSubCategory["DATA_CORRUPTION"] = "data_corruption";
    ErrorSubCategory["DATA_LOSS"] = "data_loss";
    // 系统错误
    ErrorSubCategory["SYSTEM_OVERLOAD"] = "system_overload";
    ErrorSubCategory["RESOURCE_EXHAUSTED"] = "resource_exhausted";
    ErrorSubCategory["CONFIGURATION_ERROR"] = "configuration_error";
})(ErrorSubCategory || (exports.ErrorSubCategory = ErrorSubCategory = {}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,