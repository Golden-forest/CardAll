name: Development Environment

on:
  push:
    branches: [ feature/*, hotfix/* ]
  pull_request:
    branches: [ develop ]

jobs:
  dev-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
        
      - name: Run quick linting
        run: npm run lint:quick
        
      - name: Run unit tests
        run: npm run test:unit -- --passWithNoTests
        
      - name: Build for development
        run: npm run build:dev
        
      - name: Upload dev build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dev-build-${{ matrix.node-version }}
          path: dist/

  dev-e2e:
    runs-on: ubuntu-latest
    needs: dev-test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
        
      - name: Install Playwright browsers
        run: npx playwright install chromium
        
      - name: Run critical E2E tests
        run: npm run test:e2e:critical
        env:
          NODE_ENV: development

  code-quality:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
        
      - name: Run code formatting check
        run: npm run format:check
        
      - name: Run TypeScript strict check
        run: npx tsc --noEmit --strict
        
      - name: Check for unused dependencies
        run: npx depcheck
        
      - name: Check bundle size
        run: npm run analyze:bundle

  notify-dev-team:
    runs-on: ubuntu-latest
    needs: [dev-test, dev-e2e, code-quality]
    if: always() && github.event_name == 'pull_request'
    
    steps:
      - name: Notify development team
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ needs.dev-test.result }}
          channel: '#dev-notifications'
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}